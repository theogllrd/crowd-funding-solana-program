{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2","program":"/Users/theogaillard/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=4f4f79fc62689ce8","-C","extra-filename=-4f4f79fc62689ce8","--out-dir","/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps","-L","dependency=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps","--extern","bytes=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libbytes-86260c84e872cfce.rmeta","--extern","futures_core=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libfutures_core-9445bb4f6094e57d.rmeta","--extern","futures_sink=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libfutures_sink-66dcdfd46cb908b3.rmeta","--extern","pin_project_lite=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libpin_project_lite-83109a06a962276d.rmeta","--extern","tokio=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libtokio-e876783676032de4.rmeta","--extern","tracing=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libtracing-f999c596598a15ab.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/theogaillard/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libtokio_util-4f4f79fc62689ce8.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[11488038345458631713,0]},"crate_root":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src","external_crates":[{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[11425072106896568983,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":19,"id":{"name":"futures_sink","disambiguator":[16920452021225917514,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":20,"id":{"name":"tokio","disambiguator":[10623337918219934785,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":21,"id":{"name":"parking_lot","disambiguator":[14643033322743774676,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":22,"id":{"name":"instant","disambiguator":[10818540477857358525,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":23,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":24,"id":{"name":"lock_api","disambiguator":[5572021129215100917,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":25,"id":{"name":"scopeguard","disambiguator":[794896012219393328,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[13322027220651691294,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":27,"id":{"name":"smallvec","disambiguator":[13996271574193408785,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":28,"id":{"name":"libc","disambiguator":[15060372080602567917,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":29,"id":{"name":"mio","disambiguator":[9145852623985249445,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":30,"id":{"name":"log","disambiguator":[6370244751661190342,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":31,"id":{"name":"bytes","disambiguator":[9168791009346297349,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":32,"id":{"name":"once_cell","disambiguator":[79243958795129129,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":33,"id":{"name":"tokio_macros","disambiguator":[1393384918991767712,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":34,"id":{"name":"memchr","disambiguator":[3732220575258275560,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":35,"id":{"name":"num_cpus","disambiguator":[11844741849393307671,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":36,"id":{"name":"signal_hook_registry","disambiguator":[819314954681575439,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","num":37,"id":{"name":"futures_core","disambiguator":[16953258249584419152,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","num":38,"id":{"name":"tracing","disambiguator":[6433510431941830668,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","num":39,"id":{"name":"tracing_core","disambiguator":[13166941371739321160,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","num":40,"id":{"name":"lazy_static","disambiguator":[15130840265310738312,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","num":41,"id":{"name":"tracing_attributes","disambiguator":[18392422121350649282,0]}}],"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249522,"byte_end":13249532,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249571,"byte_end":13249578,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":508},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249617,"byte_end":13249624,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1455},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249786,"byte_end":13249792,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1181},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249794,"byte_end":13249805,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1414},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249853,"byte_end":13249863,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249912,"byte_end":13249923,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249985,"byte_end":13250005,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":953},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13250007,"byte_end":13250032,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1223},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13250081,"byte_end":13250091,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13250093,"byte_end":13250108,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1253},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13250173,"byte_end":13250190,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1277},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13250192,"byte_end":13250214,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":438}},{"kind":"Use","ref_id":{"krate":0,"index":1285},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":6945,"byte_end":6954,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":6956,"byte_end":6973,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1289},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":6975,"byte_end":7000,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1326},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":7029,"byte_end":7042,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1348},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":7044,"byte_end":7054,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":7102,"byte_end":7115,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":7158,"byte_end":7175,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":438},{"krate":0,"index":14},{"krate":0,"index":320},{"krate":0,"index":389}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":438},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1142}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/cfg.rs","byte_start":5429,"byte_end":5454,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239250,"byte_end":13239303,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239304,"byte_end":13239307,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239308,"byte_end":13239383,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239384,"byte_end":13239449,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239450,"byte_end":13239453,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239454,"byte_end":13239534,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239535,"byte_end":13239610,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239611,"byte_end":13239659,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239660,"byte_end":13239663,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239664,"byte_end":13239687,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239688,"byte_end":13239691,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239692,"byte_end":13239771,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239772,"byte_end":13239851,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239852,"byte_end":13239923,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239924,"byte_end":13239994,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13239995,"byte_end":13240073,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240074,"byte_end":13240150,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240151,"byte_end":13240184,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240185,"byte_end":13240188,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240189,"byte_end":13240269,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240270,"byte_end":13240350,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240351,"byte_end":13240401,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240402,"byte_end":13240405,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240406,"byte_end":13240457,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240458,"byte_end":13240507,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240508,"byte_end":13240559,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240560,"byte_end":13240563,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240564,"byte_end":13240629,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240630,"byte_end":13240633,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240634,"byte_end":13240711,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240712,"byte_end":13240753,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240754,"byte_end":13240757,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240758,"byte_end":13240838,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240839,"byte_end":13240918,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240919,"byte_end":13240997,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13240998,"byte_end":13241077,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241078,"byte_end":13241092,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241093,"byte_end":13241096,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241097,"byte_end":13241176,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241177,"byte_end":13241256,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241257,"byte_end":13241274,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241275,"byte_end":13241278,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241279,"byte_end":13241356,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241357,"byte_end":13241436,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241437,"byte_end":13241514,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241515,"byte_end":13241585,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241586,"byte_end":13241635,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241636,"byte_end":13241639,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241640,"byte_end":13241653,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241654,"byte_end":13241686,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241687,"byte_end":13241754,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241755,"byte_end":13241869,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241870,"byte_end":13241907,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241908,"byte_end":13241969,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13241970,"byte_end":13242019,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242020,"byte_end":13242023,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242024,"byte_end":13242065,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242066,"byte_end":13242076,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242077,"byte_end":13242161,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242162,"byte_end":13242218,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242219,"byte_end":13242222,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242223,"byte_end":13242244,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242245,"byte_end":13242312,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242313,"byte_end":13242341,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242342,"byte_end":13242355,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242356,"byte_end":13242374,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242375,"byte_end":13242384,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242385,"byte_end":13242388,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242389,"byte_end":13242448,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242449,"byte_end":13242473,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242474,"byte_end":13242483,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242484,"byte_end":13242489,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242490,"byte_end":13242498,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242499,"byte_end":13242506,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242507,"byte_end":13242581,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242582,"byte_end":13242585,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242586,"byte_end":13242608,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242609,"byte_end":13242612,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242613,"byte_end":13242690,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242691,"byte_end":13242767,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242768,"byte_end":13242847,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242848,"byte_end":13242902,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242903,"byte_end":13242906,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242907,"byte_end":13242951,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242952,"byte_end":13242959,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242960,"byte_end":13242995,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13242996,"byte_end":13243027,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243028,"byte_end":13243031,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243032,"byte_end":13243061,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243062,"byte_end":13243065,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243066,"byte_end":13243105,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243106,"byte_end":13243109,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243110,"byte_end":13243148,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243149,"byte_end":13243176,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243177,"byte_end":13243213,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243214,"byte_end":13243217,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243218,"byte_end":13243236,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243237,"byte_end":13243259,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243260,"byte_end":13243290,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243291,"byte_end":13243345,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243346,"byte_end":13243376,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243377,"byte_end":13243434,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243435,"byte_end":13243467,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243468,"byte_end":13243481,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243482,"byte_end":13243485,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243486,"byte_end":13243520,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243521,"byte_end":13243565,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243566,"byte_end":13243618,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243619,"byte_end":13243686,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243687,"byte_end":13243690,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243691,"byte_end":13243765,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243766,"byte_end":13243832,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243833,"byte_end":13243862,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243863,"byte_end":13243910,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243911,"byte_end":13243963,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13243964,"byte_end":13244035,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244036,"byte_end":13244055,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244056,"byte_end":13244069,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244070,"byte_end":13244073,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244074,"byte_end":13244113,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244114,"byte_end":13244169,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244170,"byte_end":13244188,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244189,"byte_end":13244265,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244266,"byte_end":13244332,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244333,"byte_end":13244385,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244386,"byte_end":13244389,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244390,"byte_end":13244470,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244471,"byte_end":13244496,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244497,"byte_end":13244529,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244530,"byte_end":13244543,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244544,"byte_end":13244547,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244548,"byte_end":13244620,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244621,"byte_end":13244647,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244648,"byte_end":13244699,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244700,"byte_end":13244736,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244737,"byte_end":13244740,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244741,"byte_end":13244819,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244820,"byte_end":13244863,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244864,"byte_end":13244911,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244912,"byte_end":13244948,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244949,"byte_end":13244993,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13244994,"byte_end":13245050,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245051,"byte_end":13245099,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245100,"byte_end":13245122,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245123,"byte_end":13245141,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245142,"byte_end":13245155,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245156,"byte_end":13245165,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245166,"byte_end":13245171,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245172,"byte_end":13245179,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245180,"byte_end":13245183,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245184,"byte_end":13245207,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245208,"byte_end":13245211,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245212,"byte_end":13245290,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245291,"byte_end":13245364,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245365,"byte_end":13245441,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245442,"byte_end":13245522,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245523,"byte_end":13245539,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245540,"byte_end":13245543,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245544,"byte_end":13245624,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245625,"byte_end":13245704,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245705,"byte_end":13245785,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245786,"byte_end":13245858,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245859,"byte_end":13245862,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245863,"byte_end":13245940,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13245941,"byte_end":13246019,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246020,"byte_end":13246093,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246094,"byte_end":13246160,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246161,"byte_end":13246164,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246165,"byte_end":13246178,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246179,"byte_end":13246212,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246213,"byte_end":13246247,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246248,"byte_end":13246285,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246286,"byte_end":13246353,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246354,"byte_end":13246389,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246390,"byte_end":13246451,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246452,"byte_end":13246498,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246499,"byte_end":13246560,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246561,"byte_end":13246564,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246565,"byte_end":13246593,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246594,"byte_end":13246597,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246598,"byte_end":13246639,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246640,"byte_end":13246650,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246651,"byte_end":13246675,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246676,"byte_end":13246750,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246751,"byte_end":13246793,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246794,"byte_end":13246808,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246809,"byte_end":13246866,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246867,"byte_end":13246916,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246917,"byte_end":13246931,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246932,"byte_end":13246969,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13246970,"byte_end":13247021,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247022,"byte_end":13247068,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247069,"byte_end":13247099,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247100,"byte_end":13247114,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247115,"byte_end":13247124,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247125,"byte_end":13247130,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247131,"byte_end":13247138,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247139,"byte_end":13247146,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247147,"byte_end":13247222,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247223,"byte_end":13247296,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247297,"byte_end":13247339,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247340,"byte_end":13247343,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247344,"byte_end":13247366,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247367,"byte_end":13247370,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247371,"byte_end":13247448,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247449,"byte_end":13247525,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247526,"byte_end":13247602,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247603,"byte_end":13247626,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247627,"byte_end":13247630,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247631,"byte_end":13247676,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247677,"byte_end":13247684,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247685,"byte_end":13247720,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247721,"byte_end":13247745,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247746,"byte_end":13247749,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247750,"byte_end":13247779,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247780,"byte_end":13247783,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247784,"byte_end":13247823,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247824,"byte_end":13247827,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247828,"byte_end":13247874,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247875,"byte_end":13247911,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247912,"byte_end":13247915,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13247916,"byte_end":13248007,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248008,"byte_end":13248082,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248083,"byte_end":13248105,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248106,"byte_end":13248139,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248140,"byte_end":13248187,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248188,"byte_end":13248240,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248241,"byte_end":13248316,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248317,"byte_end":13248336,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248337,"byte_end":13248350,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248351,"byte_end":13248354,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248355,"byte_end":13248407,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248408,"byte_end":13248485,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248486,"byte_end":13248550,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248551,"byte_end":13248554,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248555,"byte_end":13248598,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248599,"byte_end":13248639,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248640,"byte_end":13248643,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248644,"byte_end":13248701,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248702,"byte_end":13248748,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248749,"byte_end":13248800,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248801,"byte_end":13248819,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248820,"byte_end":13248829,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248830,"byte_end":13248835,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248836,"byte_end":13248843,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248844,"byte_end":13248847,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248848,"byte_end":13248887,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248888,"byte_end":13248929,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248930,"byte_end":13248966,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13248967,"byte_end":13248999,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249000,"byte_end":13249096,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249097,"byte_end":13249148,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249149,"byte_end":13249202,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249203,"byte_end":13249246,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249247,"byte_end":13249291,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249292,"byte_end":13249340,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249341,"byte_end":13249389,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249390,"byte_end":13249436,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249437,"byte_end":13249476,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251500,"byte_end":13251510,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250343,"byte_end":13250428,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250429,"byte_end":13250432,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250433,"byte_end":13250471,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250472,"byte_end":13250510,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250511,"byte_end":13250514,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250515,"byte_end":13250528,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250529,"byte_end":13250532,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250533,"byte_end":13250614,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250615,"byte_end":13250618,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250619,"byte_end":13250658,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250659,"byte_end":13250692,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250693,"byte_end":13250722,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250723,"byte_end":13250726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250727,"byte_end":13250734,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250735,"byte_end":13250753,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250754,"byte_end":13250784,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250785,"byte_end":13250809,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250810,"byte_end":13250817,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250818,"byte_end":13250847,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250848,"byte_end":13250900,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250901,"byte_end":13250904,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250905,"byte_end":13250923,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250924,"byte_end":13250941,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13250942,"byte_end":13251022,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251023,"byte_end":13251057,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251058,"byte_end":13251111,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251112,"byte_end":13251123,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251124,"byte_end":13251131,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251132,"byte_end":13251137,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251138,"byte_end":13251185,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251186,"byte_end":13251239,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251240,"byte_end":13251298,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251299,"byte_end":13251378,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251379,"byte_end":13251391,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251392,"byte_end":13251399,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251400,"byte_end":13251407,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251408,"byte_end":13251411,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251612,"byte_end":13251615,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251539,"byte_end":13251600,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":491},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253853,"byte_end":13253860,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252567,"byte_end":13252602,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252603,"byte_end":13252606,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252607,"byte_end":13252676,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252677,"byte_end":13252756,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252757,"byte_end":13252829,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252830,"byte_end":13252854,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252855,"byte_end":13252858,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252859,"byte_end":13252927,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13252928,"byte_end":13253005,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253006,"byte_end":13253067,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253068,"byte_end":13253071,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253072,"byte_end":13253133,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253134,"byte_end":13253196,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253197,"byte_end":13253200,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253201,"byte_end":13253264,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253265,"byte_end":13253328,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253329,"byte_end":13253408,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253409,"byte_end":13253483,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253484,"byte_end":13253503,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253504,"byte_end":13253507,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253508,"byte_end":13253576,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253577,"byte_end":13253639,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253640,"byte_end":13253715,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253716,"byte_end":13253756,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253757,"byte_end":13253760,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253761,"byte_end":13253797,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253798,"byte_end":13253842,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":492},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253908,"byte_end":13253912,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253867,"byte_end":13253898,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":493},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254678,"byte_end":13254683,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253919,"byte_end":13253971,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253976,"byte_end":13253979,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13253984,"byte_end":13254053,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254058,"byte_end":13254128,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254133,"byte_end":13254179,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254184,"byte_end":13254187,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254192,"byte_end":13254268,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254273,"byte_end":13254348,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254353,"byte_end":13254428,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254433,"byte_end":13254473,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254478,"byte_end":13254481,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254486,"byte_end":13254560,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254565,"byte_end":13254611,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254616,"byte_end":13254619,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254624,"byte_end":13254668,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257619,"byte_end":13257625,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254707,"byte_end":13254772,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254777,"byte_end":13254780,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254785,"byte_end":13254859,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254864,"byte_end":13254936,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13254941,"byte_end":13255014,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255019,"byte_end":13255062,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255067,"byte_end":13255070,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255075,"byte_end":13255148,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255153,"byte_end":13255216,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255221,"byte_end":13255296,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255301,"byte_end":13255376,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255381,"byte_end":13255404,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255409,"byte_end":13255412,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255417,"byte_end":13255489,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255494,"byte_end":13255568,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255573,"byte_end":13255643,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255648,"byte_end":13255651,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255656,"byte_end":13255724,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255729,"byte_end":13255800,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255805,"byte_end":13255885,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255890,"byte_end":13255902,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255907,"byte_end":13255910,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255915,"byte_end":13255985,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13255990,"byte_end":13256065,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256070,"byte_end":13256107,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256112,"byte_end":13256115,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256120,"byte_end":13256156,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256161,"byte_end":13256205,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256210,"byte_end":13256213,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256218,"byte_end":13256241,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256246,"byte_end":13256249,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256254,"byte_end":13256328,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256333,"byte_end":13256407,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256412,"byte_end":13256465,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256470,"byte_end":13256473,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256478,"byte_end":13256549,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256554,"byte_end":13256624,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256629,"byte_end":13256645,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256650,"byte_end":13256653,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256658,"byte_end":13256671,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256676,"byte_end":13256694,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256699,"byte_end":13256704,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256709,"byte_end":13256735,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256740,"byte_end":13256777,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256782,"byte_end":13256787,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256792,"byte_end":13256813,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256818,"byte_end":13256823,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256828,"byte_end":13256858,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256863,"byte_end":13256877,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256882,"byte_end":13256913,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256918,"byte_end":13256951,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256956,"byte_end":13256959,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13256964,"byte_end":13257057,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257062,"byte_end":13257080,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257085,"byte_end":13257088,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257093,"byte_end":13257165,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257170,"byte_end":13257230,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257235,"byte_end":13257287,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257292,"byte_end":13257354,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257359,"byte_end":13257426,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257431,"byte_end":13257434,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257439,"byte_end":13257467,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257472,"byte_end":13257481,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257486,"byte_end":13257491,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257496,"byte_end":13257503,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257508,"byte_end":13257511,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257516,"byte_end":13257585,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257590,"byte_end":13257611,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258791,"byte_end":13258801,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257706,"byte_end":13257778,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257783,"byte_end":13257832,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257837,"byte_end":13257840,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257845,"byte_end":13257913,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257918,"byte_end":13257985,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13257990,"byte_end":13258058,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258063,"byte_end":13258139,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258144,"byte_end":13258210,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258215,"byte_end":13258218,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258223,"byte_end":13258291,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258296,"byte_end":13258371,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258376,"byte_end":13258451,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258456,"byte_end":13258528,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258533,"byte_end":13258575,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258580,"byte_end":13258583,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258588,"byte_end":13258663,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258668,"byte_end":13258746,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13258751,"byte_end":13258783,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260409,"byte_end":13260415,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259219,"byte_end":13259299,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259304,"byte_end":13259380,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259385,"byte_end":13259388,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259393,"byte_end":13259468,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259473,"byte_end":13259543,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259548,"byte_end":13259619,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259624,"byte_end":13259696,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259701,"byte_end":13259759,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259764,"byte_end":13259767,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259772,"byte_end":13259841,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259846,"byte_end":13259921,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13259926,"byte_end":13260002,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260007,"byte_end":13260029,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260034,"byte_end":13260037,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260042,"byte_end":13260115,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260120,"byte_end":13260193,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260198,"byte_end":13260274,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260279,"byte_end":13260282,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260287,"byte_end":13260323,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260328,"byte_end":13260360,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":13260365,"byte_end":13260401,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":508},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260749,"byte_end":13260756,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260594,"byte_end":13260666,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260667,"byte_end":13260687,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260688,"byte_end":13260691,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260692,"byte_end":13260738,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":510},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261021,"byte_end":13261026,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260769,"byte_end":13260801,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260806,"byte_end":13260809,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260814,"byte_end":13260891,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260896,"byte_end":13260952,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260957,"byte_end":13260960,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13260965,"byte_end":13261011,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261377,"byte_end":13261383,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261050,"byte_end":13261095,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261100,"byte_end":13261103,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261108,"byte_end":13261182,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261187,"byte_end":13261267,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261272,"byte_end":13261310,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261315,"byte_end":13261318,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":13261323,"byte_end":13261369,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275023,"byte_end":13275029,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1458}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276802,"byte_end":13276805,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275171,"byte_end":13275251,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275256,"byte_end":13275337,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275342,"byte_end":13275345,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275350,"byte_end":13275425,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275430,"byte_end":13275500,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275505,"byte_end":13275574,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275579,"byte_end":13275651,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275656,"byte_end":13275714,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275719,"byte_end":13275722,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275727,"byte_end":13275798,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275803,"byte_end":13275880,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275885,"byte_end":13275961,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275966,"byte_end":13275988,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275993,"byte_end":13275996,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276001,"byte_end":13276074,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276079,"byte_end":13276152,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276157,"byte_end":13276233,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276238,"byte_end":13276241,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276246,"byte_end":13276322,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276327,"byte_end":13276403,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276408,"byte_end":13276483,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276488,"byte_end":13276523,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276528,"byte_end":13276531,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276536,"byte_end":13276572,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276577,"byte_end":13276609,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276614,"byte_end":13276651,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276656,"byte_end":13276694,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13276699,"byte_end":13276790,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278413,"byte_end":13278426,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277018,"byte_end":13277098,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277103,"byte_end":13277184,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277189,"byte_end":13277238,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277243,"byte_end":13277246,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277251,"byte_end":13277326,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277331,"byte_end":13277401,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277406,"byte_end":13277475,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277480,"byte_end":13277552,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277557,"byte_end":13277615,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277620,"byte_end":13277623,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277628,"byte_end":13277699,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277704,"byte_end":13277781,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277786,"byte_end":13277862,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277867,"byte_end":13277889,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277894,"byte_end":13277897,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277902,"byte_end":13277975,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13277980,"byte_end":13278053,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278058,"byte_end":13278134,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278139,"byte_end":13278142,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278147,"byte_end":13278183,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278188,"byte_end":13278220,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278225,"byte_end":13278262,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278267,"byte_end":13278305,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278310,"byte_end":13278401,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280573,"byte_end":13280583,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278996,"byte_end":13279076,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279081,"byte_end":13279162,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279167,"byte_end":13279170,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279175,"byte_end":13279250,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279255,"byte_end":13279325,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279330,"byte_end":13279401,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279406,"byte_end":13279478,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279483,"byte_end":13279541,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279546,"byte_end":13279549,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279554,"byte_end":13279625,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279630,"byte_end":13279707,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279712,"byte_end":13279788,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279793,"byte_end":13279815,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279820,"byte_end":13279823,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279828,"byte_end":13279907,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279912,"byte_end":13279989,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13279994,"byte_end":13279997,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280002,"byte_end":13280075,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280080,"byte_end":13280153,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280158,"byte_end":13280234,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280239,"byte_end":13280242,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280247,"byte_end":13280283,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280288,"byte_end":13280320,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280325,"byte_end":13280363,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280368,"byte_end":13280406,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280411,"byte_end":13280465,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280470,"byte_end":13280561,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281218,"byte_end":13281225,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13280935,"byte_end":13280998,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281003,"byte_end":13281016,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281021,"byte_end":13281024,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281029,"byte_end":13281104,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281109,"byte_end":13281179,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281184,"byte_end":13281206,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281569,"byte_end":13281576,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281278,"byte_end":13281349,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281354,"byte_end":13281367,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281372,"byte_end":13281375,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281380,"byte_end":13281455,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281460,"byte_end":13281530,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281535,"byte_end":13281557,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281939,"byte_end":13281950,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281641,"byte_end":13281719,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281724,"byte_end":13281737,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281742,"byte_end":13281745,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281750,"byte_end":13281825,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281830,"byte_end":13281900,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13281905,"byte_end":13281927,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282297,"byte_end":13282302,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282046,"byte_end":13282104,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282109,"byte_end":13282122,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282127,"byte_end":13282130,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282135,"byte_end":13282209,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282214,"byte_end":13282285,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282614,"byte_end":13282623,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282355,"byte_end":13282421,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282426,"byte_end":13282439,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282444,"byte_end":13282447,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282452,"byte_end":13282526,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282531,"byte_end":13282602,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282960,"byte_end":13282969,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282688,"byte_end":13282756,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282761,"byte_end":13282785,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282790,"byte_end":13282793,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282798,"byte_end":13282872,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13282877,"byte_end":13282948,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283660,"byte_end":13283673,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283401,"byte_end":13283467,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283472,"byte_end":13283485,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283490,"byte_end":13283493,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283498,"byte_end":13283572,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283577,"byte_end":13283648,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283819,"byte_end":13283830,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283764,"byte_end":13283807,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283965,"byte_end":13283980,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13283902,"byte_end":13283953,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284120,"byte_end":13284132,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284064,"byte_end":13284108,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284269,"byte_end":13284285,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284205,"byte_end":13284257,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284635,"byte_end":13284645,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284370,"byte_end":13284433,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284438,"byte_end":13284441,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284446,"byte_end":13284521,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284526,"byte_end":13284596,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284601,"byte_end":13284623,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13285017,"byte_end":13285027,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284695,"byte_end":13284769,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284774,"byte_end":13284815,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284820,"byte_end":13284823,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284828,"byte_end":13284903,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284908,"byte_end":13284978,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13284983,"byte_end":13285005,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287001,"byte_end":13287012,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13286686,"byte_end":13286757,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13286758,"byte_end":13286830,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13286831,"byte_end":13286891,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13286892,"byte_end":13286895,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13286896,"byte_end":13286932,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13286950,"byte_end":13286989,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287098,"byte_end":13287100,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287025,"byte_end":13287089,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287132,"byte_end":13287137,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287110,"byte_end":13287123,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287202,"byte_end":13287210,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287147,"byte_end":13287193,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287297,"byte_end":13287306,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1181},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287227,"byte_end":13287288,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287539,"byte_end":13287542,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287487,"byte_end":13287527,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13288271,"byte_end":13288281,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1417}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13288532,"byte_end":13288535,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13288464,"byte_end":13288520,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13288883,"byte_end":13288896,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13288767,"byte_end":13288849,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13288854,"byte_end":13288871,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289650,"byte_end":13289657,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289363,"byte_end":13289426,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289431,"byte_end":13289448,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289453,"byte_end":13289456,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289461,"byte_end":13289536,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289541,"byte_end":13289611,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289616,"byte_end":13289638,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290005,"byte_end":13290012,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289710,"byte_end":13289781,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289786,"byte_end":13289803,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289808,"byte_end":13289811,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289816,"byte_end":13289891,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289896,"byte_end":13289966,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289971,"byte_end":13289993,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290379,"byte_end":13290390,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290077,"byte_end":13290155,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290160,"byte_end":13290177,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290182,"byte_end":13290185,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290190,"byte_end":13290265,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290270,"byte_end":13290340,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290345,"byte_end":13290367,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290755,"byte_end":13290765,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290486,"byte_end":13290553,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290558,"byte_end":13290561,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290566,"byte_end":13290641,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290646,"byte_end":13290716,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290721,"byte_end":13290743,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290877,"byte_end":13290884,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290815,"byte_end":13290865,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291007,"byte_end":13291018,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13290937,"byte_end":13290995,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291183,"byte_end":13291194,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291083,"byte_end":13291142,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291147,"byte_end":13291171,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291710,"byte_end":13291725,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291640,"byte_end":13291698,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291871,"byte_end":13291882,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291816,"byte_end":13291859,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13292012,"byte_end":13292027,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13291949,"byte_end":13292000,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294128,"byte_end":13294139,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1376}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294346,"byte_end":13294349,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294277,"byte_end":13294334,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294907,"byte_end":13294914,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294619,"byte_end":13294682,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294687,"byte_end":13294705,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294710,"byte_end":13294713,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294718,"byte_end":13294793,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294798,"byte_end":13294868,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294873,"byte_end":13294895,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295263,"byte_end":13295270,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294967,"byte_end":13295038,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295043,"byte_end":13295061,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295066,"byte_end":13295069,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295074,"byte_end":13295149,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295154,"byte_end":13295224,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295229,"byte_end":13295251,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295638,"byte_end":13295649,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295335,"byte_end":13295413,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295418,"byte_end":13295436,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295441,"byte_end":13295444,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295449,"byte_end":13295524,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295529,"byte_end":13295599,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295604,"byte_end":13295626,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296015,"byte_end":13296025,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295745,"byte_end":13295813,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295818,"byte_end":13295821,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295826,"byte_end":13295901,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295906,"byte_end":13295976,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13295981,"byte_end":13296003,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296137,"byte_end":13296144,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296075,"byte_end":13296125,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296267,"byte_end":13296278,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296197,"byte_end":13296255,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296444,"byte_end":13296455,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296343,"byte_end":13296403,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296408,"byte_end":13296432,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296973,"byte_end":13296988,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13296903,"byte_end":13296961,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13297135,"byte_end":13297147,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13297079,"byte_end":13297123,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13297278,"byte_end":13297294,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13297214,"byte_end":13297266,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":896},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":1193},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":953},{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":955},{"krate":0,"index":962},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":979},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13298821,"byte_end":13298873,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13298874,"byte_end":13298877,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13298878,"byte_end":13298948,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13298949,"byte_end":13299007,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299008,"byte_end":13299080,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299081,"byte_end":13299151,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299152,"byte_end":13299219,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299220,"byte_end":13299223,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299224,"byte_end":13299245,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299246,"byte_end":13299249,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299250,"byte_end":13299325,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299326,"byte_end":13299397,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299398,"byte_end":13299469,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299470,"byte_end":13299540,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299541,"byte_end":13299581,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299582,"byte_end":13299585,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299586,"byte_end":13299593,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299594,"byte_end":13299637,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299638,"byte_end":13299696,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299697,"byte_end":13299700,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299701,"byte_end":13299756,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299757,"byte_end":13299799,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299800,"byte_end":13299805,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299806,"byte_end":13299858,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299859,"byte_end":13299864,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299865,"byte_end":13299887,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299888,"byte_end":13299895,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299896,"byte_end":13299899,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299900,"byte_end":13299972,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13299973,"byte_end":13300044,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300045,"byte_end":13300064,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300065,"byte_end":13300068,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300069,"byte_end":13300080,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300081,"byte_end":13300130,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300131,"byte_end":13300180,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300181,"byte_end":13300230,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300231,"byte_end":13300238,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300239,"byte_end":13300242,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300243,"byte_end":13300281,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300282,"byte_end":13300285,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300286,"byte_end":13300293,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300294,"byte_end":13300337,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300338,"byte_end":13300396,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300397,"byte_end":13300400,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300401,"byte_end":13300426,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300427,"byte_end":13300448,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300449,"byte_end":13300452,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300453,"byte_end":13300529,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300530,"byte_end":13300539,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300540,"byte_end":13300582,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300583,"byte_end":13300588,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300589,"byte_end":13300662,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300663,"byte_end":13300710,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300711,"byte_end":13300714,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300715,"byte_end":13300752,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300753,"byte_end":13300767,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300768,"byte_end":13300773,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300774,"byte_end":13300781,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300782,"byte_end":13300785,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300786,"byte_end":13300828,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300829,"byte_end":13300832,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300833,"byte_end":13300844,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300845,"byte_end":13300884,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300885,"byte_end":13300924,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300925,"byte_end":13300964,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300965,"byte_end":13300972,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300973,"byte_end":13300976,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300977,"byte_end":13300991,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300992,"byte_end":13300995,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13300996,"byte_end":13301071,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301072,"byte_end":13301145,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301146,"byte_end":13301212,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301213,"byte_end":13301282,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301283,"byte_end":13301348,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301349,"byte_end":13301352,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301353,"byte_end":13301369,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301370,"byte_end":13301373,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301374,"byte_end":13301450,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301451,"byte_end":13301492,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301493,"byte_end":13301496,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301497,"byte_end":13301504,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301505,"byte_end":13301536,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301537,"byte_end":13301587,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301588,"byte_end":13301629,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301630,"byte_end":13301665,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301666,"byte_end":13301714,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301715,"byte_end":13301750,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301751,"byte_end":13301799,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301800,"byte_end":13301849,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301850,"byte_end":13301872,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301873,"byte_end":13301880,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301881,"byte_end":13301903,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301904,"byte_end":13301911,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301912,"byte_end":13301915,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301916,"byte_end":13301964,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301965,"byte_end":13301968,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301969,"byte_end":13301980,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13301981,"byte_end":13302033,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302034,"byte_end":13302099,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302100,"byte_end":13302165,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302166,"byte_end":13302231,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302232,"byte_end":13302239,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302240,"byte_end":13302243,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302244,"byte_end":13302320,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302321,"byte_end":13302395,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302396,"byte_end":13302468,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302469,"byte_end":13302545,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302546,"byte_end":13302588,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302589,"byte_end":13302592,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302593,"byte_end":13302609,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302610,"byte_end":13302613,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302614,"byte_end":13302689,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302690,"byte_end":13302731,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302732,"byte_end":13302735,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302736,"byte_end":13302743,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302744,"byte_end":13302775,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302776,"byte_end":13302826,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302827,"byte_end":13302868,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302869,"byte_end":13302904,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302905,"byte_end":13302953,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302954,"byte_end":13302989,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13302990,"byte_end":13303038,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303039,"byte_end":13303098,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303099,"byte_end":13303121,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303122,"byte_end":13303129,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303130,"byte_end":13303152,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303153,"byte_end":13303160,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303161,"byte_end":13303164,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303165,"byte_end":13303213,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303214,"byte_end":13303217,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303218,"byte_end":13303229,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303230,"byte_end":13303279,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303280,"byte_end":13303334,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303335,"byte_end":13303389,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303390,"byte_end":13303444,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303445,"byte_end":13303452,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303453,"byte_end":13303456,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303457,"byte_end":13303530,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303531,"byte_end":13303598,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303599,"byte_end":13303602,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303603,"byte_end":13303619,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303620,"byte_end":13303623,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303624,"byte_end":13303700,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303701,"byte_end":13303773,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303774,"byte_end":13303813,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303814,"byte_end":13303817,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303818,"byte_end":13303825,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303826,"byte_end":13303857,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303858,"byte_end":13303908,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303909,"byte_end":13303950,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303951,"byte_end":13303986,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13303987,"byte_end":13304035,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304036,"byte_end":13304071,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304072,"byte_end":13304119,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304120,"byte_end":13304140,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304141,"byte_end":13304163,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304164,"byte_end":13304171,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304172,"byte_end":13304194,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304195,"byte_end":13304202,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304203,"byte_end":13304206,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304207,"byte_end":13304255,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304256,"byte_end":13304259,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304260,"byte_end":13304271,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304272,"byte_end":13304324,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304325,"byte_end":13304390,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304391,"byte_end":13304456,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304457,"byte_end":13304522,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304523,"byte_end":13304530,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304531,"byte_end":13304534,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304535,"byte_end":13304607,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304608,"byte_end":13304683,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304684,"byte_end":13304756,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304757,"byte_end":13304833,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304834,"byte_end":13304907,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304908,"byte_end":13304911,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304912,"byte_end":13304928,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304929,"byte_end":13304932,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13304933,"byte_end":13305007,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305008,"byte_end":13305075,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305076,"byte_end":13305079,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305080,"byte_end":13305087,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305088,"byte_end":13305119,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305120,"byte_end":13305170,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305171,"byte_end":13305212,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305213,"byte_end":13305248,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305249,"byte_end":13305297,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305298,"byte_end":13305329,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305330,"byte_end":13305378,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305379,"byte_end":13305399,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305400,"byte_end":13305422,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305423,"byte_end":13305430,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305431,"byte_end":13305453,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305454,"byte_end":13305461,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305462,"byte_end":13305465,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305466,"byte_end":13305514,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305515,"byte_end":13305518,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305519,"byte_end":13305530,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305531,"byte_end":13305557,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305558,"byte_end":13305603,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305604,"byte_end":13305649,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305650,"byte_end":13305695,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305696,"byte_end":13305699,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305700,"byte_end":13305728,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305729,"byte_end":13305774,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305775,"byte_end":13305820,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305821,"byte_end":13305866,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305867,"byte_end":13305874,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305875,"byte_end":13305878,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305879,"byte_end":13305951,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13305952,"byte_end":13306028,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306029,"byte_end":13306099,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306100,"byte_end":13306169,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306170,"byte_end":13306207,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306208,"byte_end":13306211,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306212,"byte_end":13306286,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306287,"byte_end":13306341,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306342,"byte_end":13306345,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306346,"byte_end":13306362,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306363,"byte_end":13306366,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306367,"byte_end":13306440,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306441,"byte_end":13306517,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306518,"byte_end":13306592,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306593,"byte_end":13306606,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306607,"byte_end":13306610,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306611,"byte_end":13306618,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306619,"byte_end":13306650,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306651,"byte_end":13306701,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306702,"byte_end":13306743,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306744,"byte_end":13306779,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306780,"byte_end":13306829,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306830,"byte_end":13306865,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306866,"byte_end":13306914,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306915,"byte_end":13306959,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306960,"byte_end":13306982,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306983,"byte_end":13306990,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13306991,"byte_end":13307013,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307014,"byte_end":13307021,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307022,"byte_end":13307025,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307026,"byte_end":13307074,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307075,"byte_end":13307078,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307079,"byte_end":13307090,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307091,"byte_end":13307117,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307118,"byte_end":13307168,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307169,"byte_end":13307219,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307220,"byte_end":13307270,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307271,"byte_end":13307274,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307275,"byte_end":13307295,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307296,"byte_end":13307326,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307327,"byte_end":13307357,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307358,"byte_end":13307388,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307389,"byte_end":13307396,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307397,"byte_end":13307400,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307401,"byte_end":13307474,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307475,"byte_end":13307550,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307551,"byte_end":13307623,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307624,"byte_end":13307662,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307663,"byte_end":13307666,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307667,"byte_end":13307741,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307742,"byte_end":13307818,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307819,"byte_end":13307892,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307893,"byte_end":13307921,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307922,"byte_end":13307925,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307926,"byte_end":13307942,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307943,"byte_end":13307946,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13307947,"byte_end":13308020,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308021,"byte_end":13308097,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308098,"byte_end":13308172,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308173,"byte_end":13308245,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308246,"byte_end":13308257,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308258,"byte_end":13308261,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308262,"byte_end":13308269,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308270,"byte_end":13308301,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308302,"byte_end":13308352,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308353,"byte_end":13308394,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308395,"byte_end":13308430,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308431,"byte_end":13308480,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308481,"byte_end":13308516,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308517,"byte_end":13308582,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308583,"byte_end":13308603,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308604,"byte_end":13308626,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308627,"byte_end":13308634,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308635,"byte_end":13308642,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308643,"byte_end":13308646,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308647,"byte_end":13308695,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308696,"byte_end":13308699,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308700,"byte_end":13308711,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308712,"byte_end":13308738,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308739,"byte_end":13308789,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308790,"byte_end":13308840,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308841,"byte_end":13308891,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308892,"byte_end":13308895,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308896,"byte_end":13308916,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308917,"byte_end":13308947,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308948,"byte_end":13308978,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13308979,"byte_end":13309009,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309010,"byte_end":13309017,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309018,"byte_end":13309021,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309022,"byte_end":13309095,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309096,"byte_end":13309170,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309171,"byte_end":13309245,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309246,"byte_end":13309319,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309320,"byte_end":13309396,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309397,"byte_end":13309430,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309431,"byte_end":13309434,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309435,"byte_end":13309451,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309452,"byte_end":13309455,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309456,"byte_end":13309530,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309531,"byte_end":13309598,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309599,"byte_end":13309602,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309603,"byte_end":13309610,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309611,"byte_end":13309642,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309643,"byte_end":13309693,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309694,"byte_end":13309735,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309736,"byte_end":13309771,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309772,"byte_end":13309820,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309821,"byte_end":13309852,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309853,"byte_end":13309900,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309901,"byte_end":13309947,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309948,"byte_end":13309970,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309971,"byte_end":13309978,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13309979,"byte_end":13310001,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310002,"byte_end":13310009,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310010,"byte_end":13310013,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310014,"byte_end":13310062,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310063,"byte_end":13310066,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310067,"byte_end":13310078,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310079,"byte_end":13310135,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310136,"byte_end":13310197,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310198,"byte_end":13310259,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310260,"byte_end":13310321,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310322,"byte_end":13310329,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310330,"byte_end":13310333,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310334,"byte_end":13310408,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310409,"byte_end":13310429,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310430,"byte_end":13310433,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310434,"byte_end":13310448,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310449,"byte_end":13310452,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310453,"byte_end":13310528,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310529,"byte_end":13310601,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310602,"byte_end":13310670,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310671,"byte_end":13310747,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310748,"byte_end":13310789,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310790,"byte_end":13310793,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310794,"byte_end":13310864,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310865,"byte_end":13310883,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310884,"byte_end":13310887,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310888,"byte_end":13310895,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310896,"byte_end":13310928,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310929,"byte_end":13310979,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13310980,"byte_end":13311024,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311025,"byte_end":13311038,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311039,"byte_end":13311074,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311075,"byte_end":13311110,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311111,"byte_end":13311134,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311135,"byte_end":13311142,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311143,"byte_end":13311165,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311166,"byte_end":13311173,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311174,"byte_end":13311177,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311178,"byte_end":13311228,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311229,"byte_end":13311232,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311233,"byte_end":13311244,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311245,"byte_end":13311278,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311279,"byte_end":13311312,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311313,"byte_end":13311346,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311347,"byte_end":13311354,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311355,"byte_end":13311358,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311359,"byte_end":13311428,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311429,"byte_end":13311466,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311467,"byte_end":13311506,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311507,"byte_end":13311552,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311553,"byte_end":13311600,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311601,"byte_end":13311631,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311632,"byte_end":13311665,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13312232,"byte_end":13312239,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311914,"byte_end":13311969,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311970,"byte_end":13311973,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13311974,"byte_end":13312049,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13312050,"byte_end":13312130,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13312131,"byte_end":13312190,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13312910,"byte_end":13312935,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":954}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13312825,"byte_end":13312898,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313287,"byte_end":13313307,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13312956,"byte_end":13313030,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313031,"byte_end":13313034,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313035,"byte_end":13313114,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313115,"byte_end":13313158,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313159,"byte_end":13313162,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313163,"byte_end":13313216,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313217,"byte_end":13313220,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313221,"byte_end":13313251,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313651,"byte_end":13313654,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313560,"byte_end":13313639,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313881,"byte_end":13313888,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313778,"byte_end":13313853,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313858,"byte_end":13313869,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314110,"byte_end":13314126,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313938,"byte_end":13313979,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313984,"byte_end":13313987,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313992,"byte_end":13314065,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314070,"byte_end":13314098,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314547,"byte_end":13314567,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314191,"byte_end":13314225,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314230,"byte_end":13314233,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314238,"byte_end":13314308,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314313,"byte_end":13314388,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314393,"byte_end":13314465,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13314470,"byte_end":13314535,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":973},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319356,"byte_end":13319371,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319280,"byte_end":13319341,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320296,"byte_end":13320299,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319750,"byte_end":13319825,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319830,"byte_end":13319841,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319846,"byte_end":13319849,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319854,"byte_end":13319868,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319873,"byte_end":13319876,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319881,"byte_end":13319888,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319893,"byte_end":13319924,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319929,"byte_end":13319977,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319982,"byte_end":13319985,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319990,"byte_end":13320031,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320036,"byte_end":13320071,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320076,"byte_end":13320107,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320112,"byte_end":13320147,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320152,"byte_end":13320181,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320186,"byte_end":13320206,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320211,"byte_end":13320233,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320238,"byte_end":13320245,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320250,"byte_end":13320272,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320277,"byte_end":13320284,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321484,"byte_end":13321494,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13320963,"byte_end":13321012,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321017,"byte_end":13321020,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321025,"byte_end":13321057,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321062,"byte_end":13321065,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321070,"byte_end":13321138,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321143,"byte_end":13321146,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321151,"byte_end":13321165,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321170,"byte_end":13321173,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321178,"byte_end":13321185,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321190,"byte_end":13321221,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321226,"byte_end":13321274,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321279,"byte_end":13321282,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321287,"byte_end":13321328,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321333,"byte_end":13321368,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321373,"byte_end":13321394,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321399,"byte_end":13321421,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321426,"byte_end":13321433,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321438,"byte_end":13321460,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321465,"byte_end":13321472,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322126,"byte_end":13322139,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321593,"byte_end":13321645,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321650,"byte_end":13321653,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321658,"byte_end":13321696,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321701,"byte_end":13321704,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321709,"byte_end":13321777,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321782,"byte_end":13321785,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321790,"byte_end":13321804,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321809,"byte_end":13321812,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321817,"byte_end":13321824,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321829,"byte_end":13321860,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321865,"byte_end":13321913,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321918,"byte_end":13321921,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321926,"byte_end":13321967,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13321972,"byte_end":13322007,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322012,"byte_end":13322036,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322041,"byte_end":13322063,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322068,"byte_end":13322075,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322080,"byte_end":13322102,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322107,"byte_end":13322114,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322772,"byte_end":13322785,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322239,"byte_end":13322291,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322296,"byte_end":13322299,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322304,"byte_end":13322342,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322347,"byte_end":13322350,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322355,"byte_end":13322423,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322428,"byte_end":13322431,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322436,"byte_end":13322450,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322455,"byte_end":13322458,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322463,"byte_end":13322470,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322475,"byte_end":13322506,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322511,"byte_end":13322559,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322564,"byte_end":13322567,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322572,"byte_end":13322613,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322618,"byte_end":13322653,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322658,"byte_end":13322682,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322687,"byte_end":13322709,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322714,"byte_end":13322721,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322726,"byte_end":13322748,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322753,"byte_end":13322760,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323882,"byte_end":13323898,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322954,"byte_end":13322992,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13322997,"byte_end":13323000,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323005,"byte_end":13323077,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323082,"byte_end":13323107,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323112,"byte_end":13323115,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323120,"byte_end":13323192,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323197,"byte_end":13323266,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323271,"byte_end":13323344,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323349,"byte_end":13323361,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323366,"byte_end":13323369,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323374,"byte_end":13323449,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323454,"byte_end":13323515,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323520,"byte_end":13323523,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323528,"byte_end":13323542,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323547,"byte_end":13323550,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323555,"byte_end":13323562,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323567,"byte_end":13323598,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323603,"byte_end":13323651,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323656,"byte_end":13323659,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323664,"byte_end":13323705,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323710,"byte_end":13323745,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323750,"byte_end":13323792,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323797,"byte_end":13323819,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323824,"byte_end":13323831,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323836,"byte_end":13323858,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323863,"byte_end":13323870,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324997,"byte_end":13325014,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13323995,"byte_end":13324065,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324070,"byte_end":13324073,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324078,"byte_end":13324151,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324156,"byte_end":13324176,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324181,"byte_end":13324184,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324189,"byte_end":13324203,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324208,"byte_end":13324211,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324216,"byte_end":13324223,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324228,"byte_end":13324259,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324264,"byte_end":13324312,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324317,"byte_end":13324320,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324325,"byte_end":13324366,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324371,"byte_end":13324406,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324411,"byte_end":13324446,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324451,"byte_end":13324473,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324478,"byte_end":13324485,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324490,"byte_end":13324512,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324517,"byte_end":13324524,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324529,"byte_end":13324532,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324537,"byte_end":13324611,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324616,"byte_end":13324657,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324662,"byte_end":13324665,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324670,"byte_end":13324689,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324694,"byte_end":13324725,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324730,"byte_end":13324780,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324785,"byte_end":13324826,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324831,"byte_end":13324866,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324871,"byte_end":13324907,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324912,"byte_end":13324934,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324939,"byte_end":13324946,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324951,"byte_end":13324973,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13324978,"byte_end":13324985,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325699,"byte_end":13325718,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325135,"byte_end":13325198,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325203,"byte_end":13325206,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325211,"byte_end":13325262,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325267,"byte_end":13325270,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325275,"byte_end":13325343,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325348,"byte_end":13325351,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325356,"byte_end":13325370,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325375,"byte_end":13325378,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325383,"byte_end":13325390,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325395,"byte_end":13325426,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325431,"byte_end":13325479,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325484,"byte_end":13325487,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325492,"byte_end":13325533,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325538,"byte_end":13325573,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325578,"byte_end":13325609,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325614,"byte_end":13325636,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325641,"byte_end":13325648,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325653,"byte_end":13325675,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325680,"byte_end":13325687,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326377,"byte_end":13326396,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325887,"byte_end":13325953,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325958,"byte_end":13325961,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13325966,"byte_end":13326021,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326026,"byte_end":13326029,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326034,"byte_end":13326048,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326053,"byte_end":13326056,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326061,"byte_end":13326068,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326073,"byte_end":13326104,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326109,"byte_end":13326157,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326162,"byte_end":13326165,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326170,"byte_end":13326211,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326216,"byte_end":13326251,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326256,"byte_end":13326287,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326292,"byte_end":13326314,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326319,"byte_end":13326326,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326331,"byte_end":13326353,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326358,"byte_end":13326365,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326950,"byte_end":13326967,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326499,"byte_end":13326572,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326577,"byte_end":13326595,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326600,"byte_end":13326603,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326608,"byte_end":13326622,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326627,"byte_end":13326630,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326635,"byte_end":13326642,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326647,"byte_end":13326678,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326683,"byte_end":13326731,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326736,"byte_end":13326739,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326744,"byte_end":13326785,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326790,"byte_end":13326825,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326830,"byte_end":13326860,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326865,"byte_end":13326887,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326892,"byte_end":13326899,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326904,"byte_end":13326926,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13326931,"byte_end":13326938,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327617,"byte_end":13327625,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327068,"byte_end":13327131,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327136,"byte_end":13327139,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327144,"byte_end":13327205,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327210,"byte_end":13327213,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327218,"byte_end":13327272,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327277,"byte_end":13327280,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327285,"byte_end":13327299,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327304,"byte_end":13327307,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327312,"byte_end":13327319,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327324,"byte_end":13327355,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327360,"byte_end":13327408,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327413,"byte_end":13327416,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327421,"byte_end":13327462,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327467,"byte_end":13327502,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327507,"byte_end":13327527,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327532,"byte_end":13327554,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327559,"byte_end":13327566,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327571,"byte_end":13327593,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327598,"byte_end":13327605,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328149,"byte_end":13328158,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327723,"byte_end":13327786,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327791,"byte_end":13327794,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327799,"byte_end":13327813,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327818,"byte_end":13327821,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327826,"byte_end":13327833,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327838,"byte_end":13327886,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327891,"byte_end":13327912,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327917,"byte_end":13327952,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327957,"byte_end":13327988,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13327993,"byte_end":13328028,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328033,"byte_end":13328062,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328067,"byte_end":13328087,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328092,"byte_end":13328113,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328118,"byte_end":13328125,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328130,"byte_end":13328137,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328818,"byte_end":13328826,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328310,"byte_end":13328363,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328368,"byte_end":13328371,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328376,"byte_end":13328390,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328395,"byte_end":13328398,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328403,"byte_end":13328410,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328415,"byte_end":13328446,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328451,"byte_end":13328499,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328504,"byte_end":13328507,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328512,"byte_end":13328553,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328558,"byte_end":13328593,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328598,"byte_end":13328629,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328634,"byte_end":13328669,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328674,"byte_end":13328703,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328708,"byte_end":13328728,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328733,"byte_end":13328755,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328760,"byte_end":13328767,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328772,"byte_end":13328794,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328799,"byte_end":13328806,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329403,"byte_end":13329412,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13328990,"byte_end":13329044,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329049,"byte_end":13329052,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329057,"byte_end":13329071,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329076,"byte_end":13329079,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329084,"byte_end":13329091,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329096,"byte_end":13329128,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329133,"byte_end":13329183,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329188,"byte_end":13329232,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329237,"byte_end":13329272,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329277,"byte_end":13329312,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329317,"byte_end":13329340,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329345,"byte_end":13329352,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329357,"byte_end":13329379,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329384,"byte_end":13329391,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330025,"byte_end":13330035,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329573,"byte_end":13329622,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329627,"byte_end":13329630,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329635,"byte_end":13329649,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329654,"byte_end":13329657,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329662,"byte_end":13329669,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329674,"byte_end":13329719,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329724,"byte_end":13329774,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329779,"byte_end":13329835,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329840,"byte_end":13329853,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329858,"byte_end":13329893,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329898,"byte_end":13329933,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329938,"byte_end":13329962,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329967,"byte_end":13329974,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13329979,"byte_end":13330001,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330006,"byte_end":13330013,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13331414,"byte_end":13331424,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13331171,"byte_end":13331258,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13331259,"byte_end":13331262,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13331263,"byte_end":13331301,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13331302,"byte_end":13331340,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332524,"byte_end":13332527,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332105,"byte_end":13332165,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332170,"byte_end":13332173,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332178,"byte_end":13332188,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332193,"byte_end":13332196,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332201,"byte_end":13332273,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332278,"byte_end":13332351,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332356,"byte_end":13332423,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332428,"byte_end":13332431,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332436,"byte_end":13332512,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333658,"byte_end":13333677,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332685,"byte_end":13332745,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332750,"byte_end":13332753,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332758,"byte_end":13332821,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332826,"byte_end":13332904,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332909,"byte_end":13332976,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332981,"byte_end":13333053,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333058,"byte_end":13333128,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333133,"byte_end":13333156,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333161,"byte_end":13333164,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333169,"byte_end":13333179,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333184,"byte_end":13333187,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333192,"byte_end":13333267,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333272,"byte_end":13333345,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333350,"byte_end":13333426,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333431,"byte_end":13333504,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333509,"byte_end":13333579,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333584,"byte_end":13333587,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333592,"byte_end":13333646,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334243,"byte_end":13334253,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333805,"byte_end":13333855,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333860,"byte_end":13333863,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333868,"byte_end":13333875,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333880,"byte_end":13333899,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333904,"byte_end":13333942,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333947,"byte_end":13333950,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333955,"byte_end":13333989,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13333994,"byte_end":13334041,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334046,"byte_end":13334053,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334058,"byte_end":13334065,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334070,"byte_end":13334108,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334113,"byte_end":13334116,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334121,"byte_end":13334174,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334179,"byte_end":13334219,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334224,"byte_end":13334231,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338579,"byte_end":13338600,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338533,"byte_end":13338574,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338636,"byte_end":13338638,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1245},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338606,"byte_end":13338631,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338511,"byte_end":13338526,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1248}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338428,"byte_end":13338484,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340560,"byte_end":13340577,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339374,"byte_end":13339515,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339516,"byte_end":13339519,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339520,"byte_end":13339558,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339559,"byte_end":13339597,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339598,"byte_end":13339601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339602,"byte_end":13339615,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339616,"byte_end":13339683,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339684,"byte_end":13339687,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339688,"byte_end":13339721,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339722,"byte_end":13339751,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339752,"byte_end":13339755,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339756,"byte_end":13339763,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339764,"byte_end":13339820,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339821,"byte_end":13339855,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339856,"byte_end":13339859,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339860,"byte_end":13339865,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339866,"byte_end":13339913,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339914,"byte_end":13339967,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13339968,"byte_end":13340045,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340046,"byte_end":13340081,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340082,"byte_end":13340103,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340104,"byte_end":13340154,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340155,"byte_end":13340218,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340219,"byte_end":13340282,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340283,"byte_end":13340346,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340347,"byte_end":13340403,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340404,"byte_end":13340453,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340454,"byte_end":13340466,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340467,"byte_end":13340474,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340475,"byte_end":13340482,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13340483,"byte_end":13340486,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341912,"byte_end":13341915,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341470,"byte_end":13341538,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341543,"byte_end":13341546,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341551,"byte_end":13341561,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341566,"byte_end":13341569,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341574,"byte_end":13341653,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341658,"byte_end":13341732,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341737,"byte_end":13341804,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341809,"byte_end":13341812,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341817,"byte_end":13341900,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343226,"byte_end":13343245,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342195,"byte_end":13342263,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342268,"byte_end":13342271,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342276,"byte_end":13342346,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342351,"byte_end":13342437,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342442,"byte_end":13342512,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342517,"byte_end":13342594,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342599,"byte_end":13342669,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342674,"byte_end":13342697,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342702,"byte_end":13342705,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342710,"byte_end":13342720,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342725,"byte_end":13342728,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342733,"byte_end":13342815,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342820,"byte_end":13342893,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342898,"byte_end":13342975,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13342980,"byte_end":13343053,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343058,"byte_end":13343133,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343138,"byte_end":13343141,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343146,"byte_end":13343214,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13344033,"byte_end":13344043,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343502,"byte_end":13343553,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343558,"byte_end":13343561,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343566,"byte_end":13343573,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343578,"byte_end":13343597,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343602,"byte_end":13343647,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343652,"byte_end":13343655,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343660,"byte_end":13343732,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343737,"byte_end":13343784,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343789,"byte_end":13343796,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343801,"byte_end":13343808,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343813,"byte_end":13343858,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343863,"byte_end":13343866,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343871,"byte_end":13343964,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13343969,"byte_end":13344009,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13344014,"byte_end":13344021,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348139,"byte_end":13348161,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348092,"byte_end":13348134,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348197,"byte_end":13348199,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348167,"byte_end":13348192,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348063,"byte_end":13348085,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1280}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13347979,"byte_end":13348036,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":317}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":6853,"byte_end":6883,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14322,"byte_end":14331,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1286}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14145,"byte_end":14209,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14210,"byte_end":14293,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14594,"byte_end":14600,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14407,"byte_end":14481,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14486,"byte_end":14556,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14561,"byte_end":14582,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8733,"byte_end":8750,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7511,"byte_end":7588,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7589,"byte_end":7599,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7600,"byte_end":7603,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7604,"byte_end":7669,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7670,"byte_end":7744,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7745,"byte_end":7748,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7749,"byte_end":7832,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7833,"byte_end":7836,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7837,"byte_end":7851,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7852,"byte_end":7855,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7856,"byte_end":7869,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7870,"byte_end":7892,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7893,"byte_end":7937,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7938,"byte_end":7941,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7942,"byte_end":7960,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7961,"byte_end":7982,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7983,"byte_end":8028,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8029,"byte_end":8070,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8071,"byte_end":8074,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8075,"byte_end":8126,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8127,"byte_end":8190,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8191,"byte_end":8212,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8213,"byte_end":8262,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8263,"byte_end":8309,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8310,"byte_end":8331,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8332,"byte_end":8349,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8350,"byte_end":8431,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8432,"byte_end":8454,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8455,"byte_end":8472,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8473,"byte_end":8486,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8487,"byte_end":8498,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8499,"byte_end":8502,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8503,"byte_end":8536,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8537,"byte_end":8612,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8613,"byte_end":8640,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8657,"byte_end":8707,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8708,"byte_end":8713,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8714,"byte_end":8721,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8977,"byte_end":9002,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":11108087,"byte_end":11108096,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9986,"byte_end":9989,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9911,"byte_end":9974,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11388,"byte_end":11399,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10121,"byte_end":10192,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10197,"byte_end":10230,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10235,"byte_end":10238,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10243,"byte_end":10314,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10319,"byte_end":10351,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10356,"byte_end":10359,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10364,"byte_end":10378,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10383,"byte_end":10386,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10391,"byte_end":10404,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10409,"byte_end":10431,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10436,"byte_end":10480,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10485,"byte_end":10488,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10493,"byte_end":10511,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10516,"byte_end":10537,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10542,"byte_end":10587,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10592,"byte_end":10638,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10643,"byte_end":10646,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10651,"byte_end":10702,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10707,"byte_end":10770,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10775,"byte_end":10796,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10801,"byte_end":10849,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10854,"byte_end":10900,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10905,"byte_end":10926,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10931,"byte_end":10948,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10953,"byte_end":11034,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11039,"byte_end":11061,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11066,"byte_end":11083,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11088,"byte_end":11101,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11106,"byte_end":11117,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11122,"byte_end":11125,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11130,"byte_end":11163,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11168,"byte_end":11243,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11248,"byte_end":11275,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11280,"byte_end":11291,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11296,"byte_end":11299,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11304,"byte_end":11354,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11359,"byte_end":11364,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11369,"byte_end":11376,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12122,"byte_end":12128,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11534,"byte_end":11606,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11611,"byte_end":11631,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11636,"byte_end":11639,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11644,"byte_end":11711,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11716,"byte_end":11719,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11724,"byte_end":11797,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11802,"byte_end":11877,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11882,"byte_end":11956,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11961,"byte_end":12033,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12038,"byte_end":12110,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12260,"byte_end":12272,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12189,"byte_end":12248,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12631,"byte_end":12640,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12346,"byte_end":12420,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12425,"byte_end":12428,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12433,"byte_end":12507,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12512,"byte_end":12543,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12548,"byte_end":12551,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12556,"byte_end":12575,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12580,"byte_end":12583,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12588,"byte_end":12619,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12984,"byte_end":12994,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12821,"byte_end":12862,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12867,"byte_end":12870,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12875,"byte_end":12947,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12952,"byte_end":12972,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29397,"byte_end":29410,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29302,"byte_end":29368,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29689,"byte_end":29699,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29458,"byte_end":29496,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29501,"byte_end":29504,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29509,"byte_end":29603,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29608,"byte_end":29677,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":30219,"byte_end":30229,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":30081,"byte_end":30138,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":30139,"byte_end":30142,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":30143,"byte_end":30190,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31133,"byte_end":31136,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31090,"byte_end":31121,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":32120,"byte_end":32132,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31459,"byte_end":31513,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31518,"byte_end":31521,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31526,"byte_end":31611,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31616,"byte_end":31632,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31637,"byte_end":31640,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31645,"byte_end":31739,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31744,"byte_end":31830,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31835,"byte_end":31906,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31911,"byte_end":31986,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31991,"byte_end":31994,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31999,"byte_end":32011,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":32016,"byte_end":32019,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":32024,"byte_end":32108,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":34137,"byte_end":34146,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33677,"byte_end":33710,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33715,"byte_end":33718,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33723,"byte_end":33809,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33814,"byte_end":33849,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33854,"byte_end":33857,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33862,"byte_end":33874,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33879,"byte_end":33882,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33887,"byte_end":33971,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33976,"byte_end":33979,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33984,"byte_end":33996,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":34001,"byte_end":34004,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":34009,"byte_end":34105,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":34110,"byte_end":34125,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35165,"byte_end":35174,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35019,"byte_end":35065,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35070,"byte_end":35073,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35078,"byte_end":35153,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35496,"byte_end":35503,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35272,"byte_end":35335,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35340,"byte_end":35343,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35348,"byte_end":35444,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35449,"byte_end":35484,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36301,"byte_end":36306,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35575,"byte_end":35598,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35603,"byte_end":35606,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35611,"byte_end":35705,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35710,"byte_end":35803,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35808,"byte_end":35811,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35816,"byte_end":35910,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35915,"byte_end":36010,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36015,"byte_end":36111,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36116,"byte_end":36171,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36176,"byte_end":36179,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36184,"byte_end":36239,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36244,"byte_end":36289,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":37240,"byte_end":37250,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36944,"byte_end":36992,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36997,"byte_end":37000,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":37005,"byte_end":37089,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":37094,"byte_end":37189,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":37194,"byte_end":37228,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40468,"byte_end":40481,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40337,"byte_end":40410,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40411,"byte_end":40414,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40415,"byte_end":40456,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40684,"byte_end":40687,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40639,"byte_end":40672,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40851,"byte_end":40856,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40814,"byte_end":40839,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40962,"byte_end":40973,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40908,"byte_end":40950,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41088,"byte_end":41098,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41043,"byte_end":41076,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41832,"byte_end":41844,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41159,"byte_end":41207,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41212,"byte_end":41215,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41220,"byte_end":41261,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41266,"byte_end":41269,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41274,"byte_end":41336,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41341,"byte_end":41401,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41406,"byte_end":41466,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41471,"byte_end":41474,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41479,"byte_end":41554,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41559,"byte_end":41627,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41632,"byte_end":41708,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41786,"byte_end":41820,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43272,"byte_end":43289,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":42988,"byte_end":43040,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43045,"byte_end":43048,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43053,"byte_end":43129,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43134,"byte_end":43168,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43173,"byte_end":43176,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43181,"byte_end":43260,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43749,"byte_end":43760,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43362,"byte_end":43404,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43409,"byte_end":43412,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43417,"byte_end":43490,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43495,"byte_end":43535,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43540,"byte_end":43543,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43548,"byte_end":43618,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43623,"byte_end":43657,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43662,"byte_end":43665,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43670,"byte_end":43737,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44908,"byte_end":44925,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44703,"byte_end":44765,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44766,"byte_end":44769,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44770,"byte_end":44837,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44838,"byte_end":44896,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45120,"byte_end":45123,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45037,"byte_end":45108,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45588,"byte_end":45591,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45373,"byte_end":45425,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45430,"byte_end":45433,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45438,"byte_end":45510,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45515,"byte_end":45576,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":46029,"byte_end":46036,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45788,"byte_end":45840,"line_start":43,"line_end":43,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45845,"byte_end":45848,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45853,"byte_end":45926,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45931,"byte_end":46001,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":46006,"byte_end":46017,"line_start":47,"line_end":47,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":47866,"byte_end":47873,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":47802,"byte_end":47854,"line_start":103,"line_end":103,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48159,"byte_end":48163,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48104,"byte_end":48147,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":320},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":1356},{"krate":0,"index":1365},{"krate":0,"index":1369},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":364},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":384}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49304,"byte_end":49339,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51286,"byte_end":51290,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51299,"byte_end":51304,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51267,"byte_end":51273,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1362}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49516,"byte_end":49622,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49623,"byte_end":49626,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49627,"byte_end":49717,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49718,"byte_end":49721,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49722,"byte_end":49757,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49758,"byte_end":49761,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49762,"byte_end":49775,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49776,"byte_end":49779,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49780,"byte_end":49817,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49818,"byte_end":49821,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49822,"byte_end":49841,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49842,"byte_end":49884,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49885,"byte_end":49935,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49936,"byte_end":49987,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49988,"byte_end":50006,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50007,"byte_end":50028,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50029,"byte_end":50071,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50072,"byte_end":50105,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50106,"byte_end":50122,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50123,"byte_end":50217,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50218,"byte_end":50228,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50229,"byte_end":50232,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50233,"byte_end":50280,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50281,"byte_end":50286,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50287,"byte_end":50294,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50295,"byte_end":50298,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50499,"byte_end":50502,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50503,"byte_end":50589,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50590,"byte_end":50600,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50601,"byte_end":50604,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50605,"byte_end":50612,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50613,"byte_end":50648,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50649,"byte_end":50691,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50692,"byte_end":50742,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50743,"byte_end":50794,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50795,"byte_end":50798,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50799,"byte_end":50817,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50818,"byte_end":50839,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50840,"byte_end":50882,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50883,"byte_end":50930,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50931,"byte_end":50947,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50948,"byte_end":50997,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50998,"byte_end":51008,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51009,"byte_end":51012,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51013,"byte_end":51046,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51047,"byte_end":51087,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51088,"byte_end":51120,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51121,"byte_end":51126,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51127,"byte_end":51134,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51135,"byte_end":51157,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251522,"byte_end":13251532,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251683,"byte_end":13251693,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13252020,"byte_end":13252030,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13252254,"byte_end":13252264,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13262501,"byte_end":13262510,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13262742,"byte_end":13262752,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13262903,"byte_end":13262912,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263267,"byte_end":13263277,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263523,"byte_end":13263531,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263628,"byte_end":13263636,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263747,"byte_end":13263755,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263855,"byte_end":13263863,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263973,"byte_end":13263983,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13272270,"byte_end":13272280,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275115,"byte_end":13275121,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278977,"byte_end":13278983,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13285374,"byte_end":13285380,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13285696,"byte_end":13285702,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13286417,"byte_end":13286423,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287463,"byte_end":13287474,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13288401,"byte_end":13288411,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289340,"byte_end":13289350,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13292180,"byte_end":13292190,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13292503,"byte_end":13292513,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13293239,"byte_end":13293249,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294228,"byte_end":13294239,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294595,"byte_end":13294606,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13297451,"byte_end":13297462,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13298226,"byte_end":13298237,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13298478,"byte_end":13298489,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313533,"byte_end":13313553,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13316887,"byte_end":13316907,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13317793,"byte_end":13317813,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319154,"byte_end":13319174,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319736,"byte_end":13319743,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330518,"byte_end":13330525,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330651,"byte_end":13330676,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330834,"byte_end":13330859,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330994,"byte_end":13331019,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332088,"byte_end":13332098,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334640,"byte_end":13334650,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338026,"byte_end":13338036,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338359,"byte_end":13338369,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338676,"byte_end":13338691,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338973,"byte_end":13338988,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13339105,"byte_end":13339120,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341446,"byte_end":13341463,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13344112,"byte_end":13344129,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13347421,"byte_end":13347438,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13347802,"byte_end":13347819,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348237,"byte_end":13348259,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348588,"byte_end":13348610,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348741,"byte_end":13348763,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14391,"byte_end":14400,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14760,"byte_end":14769,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/tree_node.rs","byte_start":17219,"byte_end":17227,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9201,"byte_end":9218,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9443,"byte_end":9460,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9651,"byte_end":9668,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9780,"byte_end":9797,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9887,"byte_end":9904,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13142,"byte_end":13167,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13339,"byte_end":13364,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29435,"byte_end":29448,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29770,"byte_end":29783,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29943,"byte_end":29956,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31070,"byte_end":31080,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":38721,"byte_end":38731,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":39461,"byte_end":39471,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40619,"byte_end":40632,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43844,"byte_end":43857,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44071,"byte_end":44084,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44202,"byte_end":44215,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44427,"byte_end":44440,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45006,"byte_end":45023,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48270,"byte_end":48287,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48585,"byte_end":48602,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48824,"byte_end":48841,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48941,"byte_end":48958,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48987,"byte_end":49004,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":49152,"byte_end":49169,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51910,"byte_end":51916,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52159,"byte_end":52165,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52438,"byte_end":52444,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52772,"byte_end":52778,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53132,"byte_end":53138,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53690,"byte_end":53696,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":438}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":13249934,"byte_end":13249950,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":896}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":320}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251522,"byte_end":13251532,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13251683,"byte_end":13251693,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":491}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13252020,"byte_end":13252030,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":508}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":13252254,"byte_end":13252264,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":508}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13262501,"byte_end":13262510,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1169},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13262742,"byte_end":13262752,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13262903,"byte_end":13262912,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1169},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263267,"byte_end":13263277,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263523,"byte_end":13263531,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263628,"byte_end":13263636,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263747,"byte_end":13263755,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263855,"byte_end":13263863,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13263973,"byte_end":13263983,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1811},"to":{"krate":37,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":13272270,"byte_end":13272280,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1811},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13275115,"byte_end":13275121,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13278977,"byte_end":13278983,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13285374,"byte_end":13285380,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1455},"to":{"krate":37,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13285696,"byte_end":13285702,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1455},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13286417,"byte_end":13286423,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1455},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":13287463,"byte_end":13287474,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13288401,"byte_end":13288411,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13289340,"byte_end":13289350,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13292180,"byte_end":13292190,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1414},"to":{"krate":37,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13292503,"byte_end":13292513,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1414},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":13293239,"byte_end":13293249,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294228,"byte_end":13294239,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13294595,"byte_end":13294606,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13297451,"byte_end":13297462,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1373},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13298226,"byte_end":13298237,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1373},"to":{"krate":37,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":13298478,"byte_end":13298489,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13313533,"byte_end":13313553,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13316887,"byte_end":13316907,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1205},"to":{"krate":0,"index":491}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13317793,"byte_end":13317813,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1205},"to":{"krate":0,"index":508}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319154,"byte_end":13319174,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13319736,"byte_end":13319743,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330518,"byte_end":13330525,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330651,"byte_end":13330676,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330834,"byte_end":13330859,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":13330994,"byte_end":13331019,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":953},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13332088,"byte_end":13332098,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13334640,"byte_end":13334650,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1223},"to":{"krate":0,"index":491}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338026,"byte_end":13338036,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1223},"to":{"krate":0,"index":508}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338359,"byte_end":13338369,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338676,"byte_end":13338691,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13338973,"byte_end":13338988,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":13339105,"byte_end":13339120,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1245},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13341446,"byte_end":13341463,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13344112,"byte_end":13344129,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1253},"to":{"krate":0,"index":491}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13347421,"byte_end":13347438,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1253},"to":{"krate":0,"index":508}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13347802,"byte_end":13347819,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1253},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348237,"byte_end":13348259,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1277},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348588,"byte_end":13348610,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1277},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":13348741,"byte_end":13348763,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1277},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14391,"byte_end":14400,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14760,"byte_end":14769,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1285},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/tree_node.rs","byte_start":17219,"byte_end":17227,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9201,"byte_end":9218,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9443,"byte_end":9460,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9651,"byte_end":9668,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9780,"byte_end":9797,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9887,"byte_end":9904,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13142,"byte_end":13167,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13339,"byte_end":13364,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29435,"byte_end":29448,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29770,"byte_end":29783,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1326},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29943,"byte_end":29956,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1326},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31070,"byte_end":31080,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":38721,"byte_end":38731,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1348},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":39461,"byte_end":39471,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1348},"to":{"krate":19,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40619,"byte_end":40632,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43844,"byte_end":43857,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":226},"to":{"krate":37,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44071,"byte_end":44084,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44202,"byte_end":44215,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44427,"byte_end":44440,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45006,"byte_end":45023,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48270,"byte_end":48287,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48585,"byte_end":48602,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48824,"byte_end":48841,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48941,"byte_end":48958,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3065}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48987,"byte_end":49004,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":49152,"byte_end":49169,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51910,"byte_end":51916,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52159,"byte_end":52165,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1356},"to":{"krate":20,"index":227}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52438,"byte_end":52444,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1356},"to":{"krate":20,"index":185}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52772,"byte_end":52778,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1356},"to":{"krate":20,"index":266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53132,"byte_end":53138,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1356},"to":{"krate":20,"index":306}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53690,"byte_end":53696,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1356},"to":{"krate":37,"index":96}}]}