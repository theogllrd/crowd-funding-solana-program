{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10","program":"/Users/theogaillard/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","reqwest","--edition=2018","/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"__rustls\"","--cfg","feature=\"__tls\"","--cfg","feature=\"blocking\"","--cfg","feature=\"hyper-rustls\"","--cfg","feature=\"json\"","--cfg","feature=\"rustls\"","--cfg","feature=\"rustls-pemfile\"","--cfg","feature=\"rustls-tls\"","--cfg","feature=\"rustls-tls-webpki-roots\"","--cfg","feature=\"serde_json\"","--cfg","feature=\"tokio-rustls\"","--cfg","feature=\"webpki-roots\"","-C","metadata=b8bd5012f53208e6","-C","extra-filename=-b8bd5012f53208e6","--out-dir","/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps","-L","dependency=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps","--extern","base64=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libbase64-251e0abe7fec307c.rmeta","--extern","bytes=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libbytes-86260c84e872cfce.rmeta","--extern","encoding_rs=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libencoding_rs-67ee2a24b8469690.rmeta","--extern","futures_core=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libfutures_core-9445bb4f6094e57d.rmeta","--extern","futures_util=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libfutures_util-fade729d8014f561.rmeta","--extern","h2=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libh2-5b81757e53187cda.rmeta","--extern","http=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libhttp-84062ee946e7767a.rmeta","--extern","http_body=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libhttp_body-1e3c3328830a5080.rmeta","--extern","hyper=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libhyper-8fdda20214015db0.rmeta","--extern","hyper_rustls=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libhyper_rustls-ee69cb29711d9fc9.rmeta","--extern","ipnet=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libipnet-c3a0782e276954b6.rmeta","--extern","lazy_static=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/liblazy_static-6238ad3cb7350337.rmeta","--extern","log=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/liblog-5e5b893e5fa367e7.rmeta","--extern","mime=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libmime-d6fa1787d6b769bc.rmeta","--extern","percent_encoding=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libpercent_encoding-21f30f2cab5e73b5.rmeta","--extern","pin_project_lite=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libpin_project_lite-83109a06a962276d.rmeta","--extern","rustls=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/librustls-fdcd98b96cd40c90.rmeta","--extern","rustls_pemfile=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/librustls_pemfile-a62147bbd6fc0752.rmeta","--extern","serde=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libserde-7bca1a5d1a908d32.rmeta","--extern","serde_json=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libserde_json-8c72b1369a7def0c.rmeta","--extern","serde_urlencoded=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libserde_urlencoded-0dbb43f9935f6f54.rmeta","--extern","tokio=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libtokio-e876783676032de4.rmeta","--extern","tokio_rustls=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libtokio_rustls-f421d4307da7a041.rmeta","--extern","url=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/liburl-e66e67777393865a.rmeta","--extern","webpki_roots=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libwebpki_roots-aea6d6219cf23330.rmeta","--cap-lints","allow","-L","native=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/build/ring-0b89ff0b55a40a4a/out","--error-format=json","--sysroot","/Users/theogaillard/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libreqwest-b8bd5012f53208e6.rmeta"},"prelude":{"crate_id":{"name":"reqwest","disambiguator":[1679505686410763940,0]},"crate_root":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src","external_crates":[{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":18,"id":{"name":"http","disambiguator":[290762826452744929,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":19,"id":{"name":"fnv","disambiguator":[14503348505199419438,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":20,"id":{"name":"bytes","disambiguator":[9168791009346297349,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":21,"id":{"name":"itoa","disambiguator":[3744794735733284544,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":22,"id":{"name":"url","disambiguator":[12579291044345814484,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":23,"id":{"name":"matches","disambiguator":[3872757146782870315,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":24,"id":{"name":"form_urlencoded","disambiguator":[10769443048285176050,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","num":25,"id":{"name":"percent_encoding","disambiguator":[17711869347839234568,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":26,"id":{"name":"idna","disambiguator":[4721119574300650537,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":27,"id":{"name":"unicode_bidi","disambiguator":[13588055476892962328,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":28,"id":{"name":"unicode_normalization","disambiguator":[8187239885301538671,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":29,"id":{"name":"tinyvec","disambiguator":[12924922863080295405,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":30,"id":{"name":"tinyvec_macros","disambiguator":[13381352415925325925,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","num":31,"id":{"name":"lazy_static","disambiguator":[15130840265310738312,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":32,"id":{"name":"futures_core","disambiguator":[16953258249584419152,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":33,"id":{"name":"futures_util","disambiguator":[3340759855399188741,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":34,"id":{"name":"pin_utils","disambiguator":[12644058774972893031,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":35,"id":{"name":"futures_macro","disambiguator":[9828384397567455189,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":36,"id":{"name":"futures_task","disambiguator":[918535662743158888,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":37,"id":{"name":"futures_sink","disambiguator":[16920452021225917514,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":38,"id":{"name":"pin_project_lite","disambiguator":[11425072106896568983,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":39,"id":{"name":"futures_channel","disambiguator":[11712484955585981269,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":40,"id":{"name":"slab","disambiguator":[13312282856459513588,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":41,"id":{"name":"futures_io","disambiguator":[9326164172813176432,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":42,"id":{"name":"memchr","disambiguator":[3732220575258275560,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":43,"id":{"name":"log","disambiguator":[6370244751661190342,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":44,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":45,"id":{"name":"http_body","disambiguator":[6168604803584493893,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":46,"id":{"name":"tokio","disambiguator":[10623337918219934785,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":47,"id":{"name":"parking_lot","disambiguator":[14643033322743774676,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":48,"id":{"name":"instant","disambiguator":[10818540477857358525,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":49,"id":{"name":"lock_api","disambiguator":[5572021129215100917,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":50,"id":{"name":"scopeguard","disambiguator":[794896012219393328,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":51,"id":{"name":"parking_lot_core","disambiguator":[13322027220651691294,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":52,"id":{"name":"smallvec","disambiguator":[13996271574193408785,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":53,"id":{"name":"libc","disambiguator":[15060372080602567917,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":54,"id":{"name":"mio","disambiguator":[9145852623985249445,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":55,"id":{"name":"once_cell","disambiguator":[79243958795129129,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":56,"id":{"name":"tokio_macros","disambiguator":[1393384918991767712,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":57,"id":{"name":"num_cpus","disambiguator":[11844741849393307671,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","num":58,"id":{"name":"signal_hook_registry","disambiguator":[819314954681575439,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":59,"id":{"name":"hyper","disambiguator":[8662883582278938257,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":60,"id":{"name":"tracing","disambiguator":[6433510431941830668,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":61,"id":{"name":"tracing_core","disambiguator":[13166941371739321160,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":62,"id":{"name":"tracing_attributes","disambiguator":[18392422121350649282,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":63,"id":{"name":"tower_service","disambiguator":[12051709534614143958,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":64,"id":{"name":"h2","disambiguator":[3542777410865091418,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":65,"id":{"name":"tokio_util","disambiguator":[11488038345458631713,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":66,"id":{"name":"indexmap","disambiguator":[7490432035440786408,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":67,"id":{"name":"hashbrown","disambiguator":[11856118451179168328,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":68,"id":{"name":"ahash","disambiguator":[16657832944725923112,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":69,"id":{"name":"getrandom","disambiguator":[13418779458414258991,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":70,"id":{"name":"httparse","disambiguator":[15572624031673163076,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":71,"id":{"name":"socket2","disambiguator":[11871060228836240661,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":72,"id":{"name":"want","disambiguator":[5323664946370746490,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":73,"id":{"name":"try_lock","disambiguator":[1498428641221495124,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":74,"id":{"name":"rustls","disambiguator":[12563081250891693236,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":75,"id":{"name":"ring","disambiguator":[582016760169219536,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":76,"id":{"name":"untrusted","disambiguator":[10101274337573092772,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":77,"id":{"name":"webpki","disambiguator":[14951546902328705522,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":78,"id":{"name":"sct","disambiguator":[15957511055025377720,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","num":79,"id":{"name":"base64","disambiguator":[11508491135543313020,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","num":80,"id":{"name":"serde","disambiguator":[11059114237329387704,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","num":81,"id":{"name":"serde_derive","disambiguator":[7440013974443076442,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","num":82,"id":{"name":"serde_json","disambiguator":[17625787672427384150,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","num":83,"id":{"name":"ryu","disambiguator":[4998541848980185873,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","num":84,"id":{"name":"encoding_rs","disambiguator":[5968933206968822206,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","num":85,"id":{"name":"mime","disambiguator":[4965604372958275029,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","num":86,"id":{"name":"serde_urlencoded","disambiguator":[18123332179838555642,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","num":87,"id":{"name":"tokio_rustls","disambiguator":[7599933966701255425,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","num":88,"id":{"name":"ipnet","disambiguator":[4939340088599143767,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","num":89,"id":{"name":"webpki_roots","disambiguator":[8883043024728599567,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","num":90,"id":{"name":"hyper_rustls","disambiguator":[7900052602062688933,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","num":91,"id":{"name":"rustls_pemfile","disambiguator":[17871400893125068332,0]}}],"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":0,"byte_end":10381,"line_start":1,"line_end":331,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":5},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7791,"byte_end":7797,"line_start":220,"line_end":220,"column_start":15,"column_end":21},"alias_span":null,"name":"header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":3003},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7813,"byte_end":7819,"line_start":221,"line_end":221,"column_start":15,"column_end":21},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":3096},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7836,"byte_end":7846,"line_start":222,"line_end":222,"column_start":16,"column_end":26},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":3277},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7848,"byte_end":7855,"line_start":222,"line_end":222,"column_start":28,"column_end":35},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":908},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7871,"byte_end":7874,"line_start":223,"line_end":223,"column_start":14,"column_end":17},"alias_span":null,"name":"Url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7970,"byte_end":7975,"line_start":231,"line_end":231,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7977,"byte_end":7983,"line_start":231,"line_end":231,"column_start":30,"column_end":36},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8010,"byte_end":8017,"line_start":232,"line_end":232,"column_start":25,"column_end":32},"alias_span":null,"name":"IntoUrl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8043,"byte_end":8061,"line_start":233,"line_end":233,"column_start":25,"column_end":43},"alias_span":null,"name":"ResponseBuilderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9584,"byte_end":9588,"line_start":299,"line_end":299,"column_start":9,"column_end":13},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2288},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9590,"byte_end":9596,"line_start":299,"line_end":299,"column_start":15,"column_end":21},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9598,"byte_end":9611,"line_start":299,"line_end":299,"column_start":23,"column_end":36},"alias_span":null,"name":"ClientBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":847},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9613,"byte_end":9620,"line_start":299,"line_end":299,"column_start":38,"column_end":45},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":854},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9622,"byte_end":9636,"line_start":299,"line_end":299,"column_start":47,"column_end":61},"alias_span":null,"name":"RequestBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":991},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9638,"byte_end":9646,"line_start":299,"line_end":299,"column_start":63,"column_end":71},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2376},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9680,"byte_end":9685,"line_start":301,"line_end":301,"column_start":26,"column_end":31},"alias_span":null,"name":"Proxy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2492},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9788,"byte_end":9799,"line_start":304,"line_end":304,"column_start":19,"column_end":30},"alias_span":null,"name":"Certificate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2505},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9801,"byte_end":9809,"line_start":304,"line_end":304,"column_start":32,"column_end":40},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/mod.rs","byte_start":11672842,"byte_end":11672846,"line_start":1,"line_end":1,"column_start":21,"column_end":25},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":213}},{"kind":"Use","ref_id":{"krate":0,"index":2288},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/mod.rs","byte_start":11672871,"byte_end":11672877,"line_start":2,"line_end":2,"column_start":24,"column_end":30},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":213}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/mod.rs","byte_start":11672879,"byte_end":11672892,"line_start":2,"line_end":2,"column_start":32,"column_end":45},"alias_span":null,"name":"ClientBuilder","value":"","parent":{"krate":0,"index":213}},{"kind":"Use","ref_id":{"krate":0,"index":847},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/mod.rs","byte_start":11672919,"byte_end":11672926,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":213}},{"kind":"Use","ref_id":{"krate":0,"index":854},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/mod.rs","byte_start":11672928,"byte_end":11672942,"line_start":3,"line_end":3,"column_start":34,"column_end":48},"alias_span":null,"name":"RequestBuilder","value":"","parent":{"krate":0,"index":213}},{"kind":"Use","ref_id":{"krate":0,"index":991},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/mod.rs","byte_start":11672969,"byte_end":11672977,"line_start":4,"line_end":4,"column_start":25,"column_end":33},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":213}},{"kind":"Use","ref_id":{"krate":0,"index":2298},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811790,"byte_end":11811794,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2302},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811819,"byte_end":11811825,"line_start":76,"line_end":76,"column_start":24,"column_end":30},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":1224},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811827,"byte_end":11811840,"line_start":76,"line_end":76,"column_start":32,"column_end":45},"alias_span":null,"name":"ClientBuilder","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811867,"byte_end":11811874,"line_start":77,"line_end":77,"column_start":25,"column_end":32},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2317},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811876,"byte_end":11811890,"line_start":77,"line_end":77,"column_start":34,"column_end":48},"alias_span":null,"name":"RequestBuilder","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":1561},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811917,"byte_end":11811925,"line_start":78,"line_end":78,"column_start":25,"column_end":33},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":1044}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":0,"byte_end":10381,"line_start":1,"line_end":331,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":89},{"krate":0,"index":118},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":1044},{"krate":0,"index":1666},{"krate":0,"index":1988},{"krate":0,"index":2121},{"krate":0,"index":2188},{"krate":0,"index":2257}],"decl_id":null,"docs":" # reqwest","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":23,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/ # reqwest","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":197,"byte_end":210,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":211,"byte_end":214,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `reqwest` crate provides a convenient, higher-level HTTP","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":215,"byte_end":279,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ [`Client`][client].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":280,"byte_end":303,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":304,"byte_end":307,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ It handles many of the things that most people just expect an HTTP client","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":308,"byte_end":385,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ to do for them.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":386,"byte_end":405,"line_start":13,"line_end":13,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":406,"byte_end":409,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - Async and [blocking](blocking) Clients","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":410,"byte_end":454,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ - Plain bodies, [JSON](#json), [urlencoded](#forms), [multipart](multipart)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":455,"byte_end":534,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ - Customizable [redirect policy](#redirect-policies)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":535,"byte_end":591,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ - HTTP [Proxies](#proxies)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":592,"byte_end":622,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ - Uses system-native [TLS](#tls)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":623,"byte_end":659,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ - Cookies","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":660,"byte_end":673,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":674,"byte_end":677,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The [`reqwest::Client`][client] is asynchronous. For applications wishing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":678,"byte_end":755,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ to only make a few HTTP requests, the [`reqwest::blocking`](blocking) API","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":756,"byte_end":833,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ may be more convenient.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":834,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":862,"byte_end":865,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Additional learning resources include:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":866,"byte_end":908,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":909,"byte_end":912,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ - [The Rust Cookbook](https://rust-lang-nursery.github.io/rust-cookbook/web/clients.html)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":913,"byte_end":1006,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/ - [Reqwest Repository Examples](https://github.com/seanmonstar/reqwest/tree/master/examples)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1007,"byte_end":1103,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1104,"byte_end":1107,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Making a GET request","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1108,"byte_end":1135,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1136,"byte_end":1139,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ For a single request, you can use the [`get`][get] shortcut method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1140,"byte_end":1211,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1212,"byte_end":1215,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1216,"byte_end":1227,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ # async fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1228,"byte_end":1280,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/ let body = reqwest::get(\"https://www.rust-lang.org\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1281,"byte_end":1337,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/     .await?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1338,"byte_end":1353,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     .text()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1354,"byte_end":1369,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1370,"byte_end":1386,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1387,"byte_end":1390,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ println!(\"body = {:?}\", body);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1391,"byte_end":1425,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1426,"byte_end":1438,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1439,"byte_end":1446,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1447,"byte_end":1454,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1455,"byte_end":1458,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If you plan to perform multiple requests, it is best to create a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1459,"byte_end":1537,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ [`Client`][client] and reuse it, taking advantage of keep-alive connection","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1538,"byte_end":1616,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ pooling.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1617,"byte_end":1629,"line_start":49,"line_end":49,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1630,"byte_end":1633,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Making POST requests (or setting request bodies)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1634,"byte_end":1689,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1690,"byte_end":1693,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ There are several ways you can set the body of a request. The basic one is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1694,"byte_end":1772,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ by using the `body()` method of a [`RequestBuilder`][builder]. This lets you set the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1773,"byte_end":1861,"line_start":54,"line_end":54,"column_start":1,"column_end":89}},{"value":"/ exact raw bytes of what the body should be. It accepts various types,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1862,"byte_end":1935,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ including `String` and `Vec<u8>`. If you wish to pass a custom","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":1936,"byte_end":2002,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ type, you can use the `reqwest::Body` constructors.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2003,"byte_end":2058,"line_start":57,"line_end":57,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2059,"byte_end":2062,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2063,"byte_end":2074,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2075,"byte_end":2100,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2101,"byte_end":2106,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2107,"byte_end":2150,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2151,"byte_end":2191,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2192,"byte_end":2244,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"/     .body(\"the exact body that is sent\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2245,"byte_end":2289,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/     .send()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2290,"byte_end":2305,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2306,"byte_end":2322,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2323,"byte_end":2335,"line_start":68,"line_end":68,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2336,"byte_end":2343,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2344,"byte_end":2351,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2352,"byte_end":2355,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### Forms","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2356,"byte_end":2369,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2370,"byte_end":2373,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ It's very common to want to send form data in a request body. This can be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2374,"byte_end":2451,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ done with any type that can be serialized into form data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2452,"byte_end":2513,"line_start":75,"line_end":75,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2514,"byte_end":2517,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This can be an array of tuples, or a `HashMap`, or a custom type that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2518,"byte_end":2591,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ implements [`Serialize`][serde].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2592,"byte_end":2628,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2629,"byte_end":2632,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2633,"byte_end":2644,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2645,"byte_end":2670,"line_start":81,"line_end":81,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2671,"byte_end":2676,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2677,"byte_end":2720,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ // This will POST a body of `foo=bar&baz=quux`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2721,"byte_end":2771,"line_start":84,"line_end":84,"column_start":1,"column_end":51}},{"value":"/ let params = [(\"foo\", \"bar\"), (\"baz\", \"quux\")];","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2772,"byte_end":2823,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2824,"byte_end":2864,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2865,"byte_end":2917,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/     .form(&params)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2918,"byte_end":2940,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/     .send()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2941,"byte_end":2956,"line_start":89,"line_end":89,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2957,"byte_end":2973,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2974,"byte_end":2986,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2987,"byte_end":2994,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":2995,"byte_end":3002,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3003,"byte_end":3006,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ### JSON","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3007,"byte_end":3019,"line_start":95,"line_end":95,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3020,"byte_end":3023,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ There is also a `json` method helper on the [`RequestBuilder`][builder] that works in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3024,"byte_end":3113,"line_start":97,"line_end":97,"column_start":1,"column_end":90}},{"value":"/ a similar fashion the `form` method. It can take any value that can be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3114,"byte_end":3188,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ serialized into JSON. The feature `json` is required.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3189,"byte_end":3246,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3247,"byte_end":3250,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3251,"byte_end":3262,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3263,"byte_end":3288,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3289,"byte_end":3325,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3326,"byte_end":3331,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(feature = \"json\")]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3332,"byte_end":3362,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3363,"byte_end":3406,"line_start":106,"line_end":106,"column_start":1,"column_end":44}},{"value":"/ // This will POST a body of `{\"lang\":\"rust\",\"body\":\"json\"}`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3407,"byte_end":3470,"line_start":107,"line_end":107,"column_start":1,"column_end":64}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3471,"byte_end":3504,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/ map.insert(\"lang\", \"rust\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3505,"byte_end":3536,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/ map.insert(\"body\", \"json\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3537,"byte_end":3568,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3569,"byte_end":3572,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3573,"byte_end":3613,"line_start":112,"line_end":112,"column_start":1,"column_end":41}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3614,"byte_end":3666,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/     .json(&map)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3667,"byte_end":3686,"line_start":114,"line_end":114,"column_start":1,"column_end":20}},{"value":"/     .send()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3687,"byte_end":3702,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3703,"byte_end":3719,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3720,"byte_end":3732,"line_start":117,"line_end":117,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3733,"byte_end":3740,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3741,"byte_end":3748,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3749,"byte_end":3752,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ## Redirect Policies","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3753,"byte_end":3777,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3778,"byte_end":3781,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will automatically handle HTTP redirects, having a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3782,"byte_end":3859,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ maximum redirect chain of 10 hops. To customize this behavior, a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3860,"byte_end":3928,"line_start":124,"line_end":124,"column_start":1,"column_end":69}},{"value":"/ [`redirect::Policy`][redirect] can be used with a `ClientBuilder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":3929,"byte_end":3999,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4000,"byte_end":4003,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Cookies","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4004,"byte_end":4018,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4019,"byte_end":4022,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The automatic storing and sending of session cookies can be enabled with","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4023,"byte_end":4099,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/ the [`cookie_store`][ClientBuilder::cookie_store] method on `ClientBuilder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4100,"byte_end":4180,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4181,"byte_end":4184,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ## Proxies","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4185,"byte_end":4199,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4200,"byte_end":4203,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: System proxies are enabled by default.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4204,"byte_end":4256,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4257,"byte_end":4260,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ System proxies look in environment variables to set HTTP or HTTPS proxies.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4261,"byte_end":4339,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4340,"byte_end":4343,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ `HTTP_PROXY` or `http_proxy` provide http proxies for http connections while","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4344,"byte_end":4424,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ `HTTPS_PROXY` or `https_proxy` provide HTTPS proxies for HTTPS connections.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4425,"byte_end":4504,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4505,"byte_end":4508,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ These can be overwritten by adding a [`Proxy`](Proxy) to `ClientBuilder`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4509,"byte_end":4585,"line_start":141,"line_end":141,"column_start":1,"column_end":77}},{"value":"/ i.e. `let proxy = reqwest::Proxy::http(\"https://secure.example\")?;`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4586,"byte_end":4657,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ or disabled by calling `ClientBuilder::no_proxy()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4658,"byte_end":4713,"line_start":143,"line_end":143,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4714,"byte_end":4717,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ `socks` feature is required if you have configured socks proxy like this:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4718,"byte_end":4795,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4796,"byte_end":4799,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4800,"byte_end":4811,"line_start":147,"line_end":147,"column_start":1,"column_end":12}},{"value":"/ export https_proxy=socks5://127.0.0.1:1086","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4812,"byte_end":4858,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4859,"byte_end":4866,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4867,"byte_end":4870,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ## TLS","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4871,"byte_end":4881,"line_start":151,"line_end":151,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4882,"byte_end":4885,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will make use of system-native transport layer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4886,"byte_end":4959,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ security to connect to HTTPS destinations. This means schannel on Windows,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":4960,"byte_end":5038,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/ Security-Framework on macOS, and OpenSSL on Linux.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5039,"byte_end":5093,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5094,"byte_end":5097,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ - Additional X509 certificates can be configured on a `ClientBuilder` with the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5098,"byte_end":5180,"line_start":157,"line_end":157,"column_start":1,"column_end":83}},{"value":"/   [`Certificate`](Certificate) type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5181,"byte_end":5221,"line_start":158,"line_end":158,"column_start":1,"column_end":41}},{"value":"/ - Client certificates can be add to a `ClientBuilder` with the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5222,"byte_end":5288,"line_start":159,"line_end":159,"column_start":1,"column_end":67}},{"value":"/   [`Identity`][Identity] type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5289,"byte_end":5323,"line_start":160,"line_end":160,"column_start":1,"column_end":35}},{"value":"/ - Various parts of TLS can also be configured or even disabled on the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5324,"byte_end":5397,"line_start":161,"line_end":161,"column_start":1,"column_end":74}},{"value":"/   `ClientBuilder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5398,"byte_end":5420,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5421,"byte_end":5424,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5425,"byte_end":5449,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5450,"byte_end":5453,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The following are a list of [Cargo features][cargo-features] that can be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5454,"byte_end":5530,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ enabled or disabled:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5531,"byte_end":5555,"line_start":167,"line_end":167,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5556,"byte_end":5559,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ - **default-tls** *(enabled by default)*: Provides TLS support to connect","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5560,"byte_end":5637,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/   over HTTPS.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5638,"byte_end":5655,"line_start":170,"line_end":170,"column_start":1,"column_end":18}},{"value":"/ - **native-tls**: Enables TLS functionality provided by `native-tls`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5656,"byte_end":5729,"line_start":171,"line_end":171,"column_start":1,"column_end":74}},{"value":"/ - **native-tls-vendored**: Enables the `vendored` feature of `native-tls`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5730,"byte_end":5808,"line_start":172,"line_end":172,"column_start":1,"column_end":79}},{"value":"/ - **native-tls-alpn**: Enables the `alpn` feature of `native-tls`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5809,"byte_end":5879,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/ - **rustls-tls**: Enables TLS functionality provided by `rustls`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5880,"byte_end":5949,"line_start":174,"line_end":174,"column_start":1,"column_end":70}},{"value":"/   Equivalent to `rustls-tls-webpki-roots`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5950,"byte_end":5996,"line_start":175,"line_end":175,"column_start":1,"column_end":47}},{"value":"/ - **rustls-tls-manual-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":5997,"byte_end":6079,"line_start":176,"line_end":176,"column_start":1,"column_end":83}},{"value":"/   without setting any root certificates. Roots have to be specified manually.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6080,"byte_end":6161,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ - **rustls-tls-webpki-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6162,"byte_end":6244,"line_start":178,"line_end":178,"column_start":1,"column_end":83}},{"value":"/   while using root certificates from the `webpki-roots` crate.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6245,"byte_end":6311,"line_start":179,"line_end":179,"column_start":1,"column_end":67}},{"value":"/ - **rustls-tls-native-roots**: Enables TLS functionality provided by `rustls`,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6312,"byte_end":6394,"line_start":180,"line_end":180,"column_start":1,"column_end":83}},{"value":"/   while using root certificates from the `rustls-native-certs` crate.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6395,"byte_end":6468,"line_start":181,"line_end":181,"column_start":1,"column_end":74}},{"value":"/ - **blocking**: Provides the [blocking][] client API.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6469,"byte_end":6526,"line_start":182,"line_end":182,"column_start":1,"column_end":58}},{"value":"/ - **cookies**: Provides cookie session support.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6527,"byte_end":6578,"line_start":183,"line_end":183,"column_start":1,"column_end":52}},{"value":"/ - **gzip**: Provides response body gzip decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6579,"byte_end":6637,"line_start":184,"line_end":184,"column_start":1,"column_end":59}},{"value":"/ - **brotli**: Provides response body brotli decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6638,"byte_end":6700,"line_start":185,"line_end":185,"column_start":1,"column_end":63}},{"value":"/ - **deflate**: Provides response body deflate decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6701,"byte_end":6765,"line_start":186,"line_end":186,"column_start":1,"column_end":65}},{"value":"/ - **json**: Provides serialization and deserialization for JSON bodies.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6766,"byte_end":6841,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/ - **multipart**: Provides functionality for multipart forms.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6842,"byte_end":6906,"line_start":188,"line_end":188,"column_start":1,"column_end":65}},{"value":"/ - **stream**: Adds support for `futures::Stream`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6907,"byte_end":6960,"line_start":189,"line_end":189,"column_start":1,"column_end":54}},{"value":"/ - **socks**: Provides SOCKS5 proxy support.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":6961,"byte_end":7008,"line_start":190,"line_end":190,"column_start":1,"column_end":48}},{"value":"/ - **trust-dns**: Enables a trust-dns async resolver instead of default","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7009,"byte_end":7083,"line_start":191,"line_end":191,"column_start":1,"column_end":75}},{"value":"/   threadpool using `getaddrinfo`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7084,"byte_end":7121,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7122,"byte_end":7125,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7126,"byte_end":7129,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ [hyper]: http://hyper.rs","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7130,"byte_end":7158,"line_start":195,"line_end":195,"column_start":1,"column_end":29}},{"value":"/ [blocking]: ./blocking/index.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7159,"byte_end":7196,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/ [client]: ./struct.Client.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7197,"byte_end":7231,"line_start":197,"line_end":197,"column_start":1,"column_end":35}},{"value":"/ [response]: ./struct.Response.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7232,"byte_end":7270,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"/ [get]: ./fn.get.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7271,"byte_end":7295,"line_start":199,"line_end":199,"column_start":1,"column_end":25}},{"value":"/ [builder]: ./struct.RequestBuilder.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7296,"byte_end":7339,"line_start":200,"line_end":200,"column_start":1,"column_end":44}},{"value":"/ [serde]: http://serde.rs","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7340,"byte_end":7368,"line_start":201,"line_end":201,"column_start":1,"column_end":29}},{"value":"/ [redirect]: crate::redirect","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7369,"byte_end":7400,"line_start":202,"line_end":202,"column_start":1,"column_end":32}},{"value":"/ [Proxy]: ./struct.Proxy.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7401,"byte_end":7433,"line_start":203,"line_end":203,"column_start":1,"column_end":33}},{"value":"/ [cargo-features]: https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7434,"byte_end":7539,"line_start":204,"line_end":204,"column_start":1,"column_end":106}}]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":10601,"byte_end":10607,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A `Result` alias where the `Err` case is `reqwest::Error`.\n","sig":null,"attributes":[{"value":"/ A `Result` alias where the `Err` case is `reqwest::Error`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":10529,"byte_end":10591,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":10938,"byte_end":10943,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" The Errors that may occur when processing a `Request`.","sig":null,"attributes":[{"value":"/ The Errors that may occur when processing a `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":10645,"byte_end":10703,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":10704,"byte_end":10707,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Note: Errors may include the full URL used to make the `Request`. If the URL","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":10708,"byte_end":10788,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ contains sensitive information (e.g. an API key as a query parameter), be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":10789,"byte_end":10866,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ sure to remove it ([`without_url`](Error::without_url))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":10867,"byte_end":10926,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11938,"byte_end":11941,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"url","qualname":"<Error>::url","value":"pub fn url(&Self) -> Option<&Url>","parent":null,"children":[],"decl_id":null,"docs":" Returns a possible URL related to this error.","sig":null,"attributes":[{"value":"/ Returns a possible URL related to this error.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11426,"byte_end":11475,"line_start":42,"line_end":42,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11480,"byte_end":11483,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11488,"byte_end":11502,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11507,"byte_end":11510,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11515,"byte_end":11522,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # async fn run() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11527,"byte_end":11549,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ // displays last stop of a redirect loop","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11554,"byte_end":11598,"line_start":48,"line_end":48,"column_start":5,"column_end":49}},{"value":"/ let response = reqwest::get(\"http://site.with.redirect.loop\").await;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11603,"byte_end":11675,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ if let Err(e) = response {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11680,"byte_end":11710,"line_start":50,"line_end":50,"column_start":5,"column_end":35}},{"value":"/     if e.is_redirect() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11715,"byte_end":11743,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"/         if let Some(final_stop) = e.url() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11748,"byte_end":11795,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/             println!(\"redirect loop at {}\", final_stop);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11800,"byte_end":11860,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11865,"byte_end":11878,"line_start":54,"line_end":54,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11883,"byte_end":11892,"line_start":55,"line_end":55,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11897,"byte_end":11902,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11907,"byte_end":11914,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11919,"byte_end":11926,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12265,"byte_end":12272,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"url_mut","qualname":"<Error>::url_mut","value":"pub fn url_mut(&mut Self) -> Option<&mut Url>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable referene to the URL related to this error","sig":null,"attributes":[{"value":"/ Returns a mutable referene to the URL related to this error","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12010,"byte_end":12073,"line_start":63,"line_end":63,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12078,"byte_end":12081,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This is useful if you need to remove sensitive information from the URL","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12086,"byte_end":12161,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ (e.g. an API key in the query), but do not want to remove the URL","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12166,"byte_end":12235,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ entirely.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12240,"byte_end":12253,"line_start":67,"line_end":67,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12423,"byte_end":12431,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"with_url","qualname":"<Error>::with_url","value":"pub fn with_url(Self, Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a url related to this error (overwriting any existing)\n","sig":null,"attributes":[{"value":"/ Add a url related to this error (overwriting any existing)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12349,"byte_end":12411,"line_start":72,"line_end":72,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12636,"byte_end":12647,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"without_url","qualname":"<Error>::without_url","value":"pub fn without_url(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Strip the related url from this error (if, for example, it contains\n sensitive information)\n","sig":null,"attributes":[{"value":"/ Strip the related url from this error (if, for example, it contains","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12522,"byte_end":12593,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ sensitive information)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12598,"byte_end":12624,"line_start":79,"line_end":79,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12788,"byte_end":12798,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"is_builder","qualname":"<Error>::is_builder","value":"pub fn is_builder(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from a type Builder.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from a type Builder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12723,"byte_end":12776,"line_start":85,"line_end":85,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12945,"byte_end":12956,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"is_redirect","qualname":"<Error>::is_redirect","value":"pub fn is_redirect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from a `RedirectPolicy`.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from a `RedirectPolicy`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":12876,"byte_end":12933,"line_start":90,"line_end":90,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13114,"byte_end":13123,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"is_status","qualname":"<Error>::is_status","value":"pub fn is_status(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from `Response::error_for_status`.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from `Response::error_for_status`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13035,"byte_end":13102,"line_start":95,"line_end":95,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13269,"byte_end":13279,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<Error>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to a timeout.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to a timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13203,"byte_end":13257,"line_start":100,"line_end":100,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13596,"byte_end":13606,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"is_request","qualname":"<Error>::is_request","value":"pub fn is_request(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to the request\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to the request","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13529,"byte_end":13584,"line_start":114,"line_end":114,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13787,"byte_end":13797,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"is_connect","qualname":"<Error>::is_connect","value":"pub fn is_connect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to connect\n","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13684,"byte_end":13719,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ Returns true if the error is related to connect","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":13724,"byte_end":13775,"line_start":120,"line_end":120,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":14234,"byte_end":14241,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"is_body","qualname":"<Error>::is_body","value":"pub fn is_body(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to the request or response body\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to the request or response body","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":14150,"byte_end":14222,"line_start":137,"line_end":137,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":14400,"byte_end":14409,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"is_decode","qualname":"<Error>::is_decode","value":"pub fn is_decode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is related to decoding the response's body\n","sig":null,"attributes":[{"value":"/ Returns true if the error is related to decoding the response's body","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":14316,"byte_end":14388,"line_start":142,"line_end":142,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":14570,"byte_end":14576,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"status","qualname":"<Error>::status","value":"pub fn status(&Self) -> Option<StatusCode>","parent":null,"children":[],"decl_id":null,"docs":" Returns the status code, if the error was generated from a response.\n","sig":null,"attributes":[{"value":"/ Returns the status code, if the error was generated from a response.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":14486,"byte_end":14558,"line_start":147,"line_end":147,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20352,"byte_end":20359,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"name":"IntoUrl","qualname":"::into_url::IntoUrl","value":"IntoUrl: IntoUrlSealed","parent":null,"children":[],"decl_id":null,"docs":" A trait to try to convert some type into a `Url`.","sig":null,"attributes":[{"value":"/ A trait to try to convert some type into a `Url`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20198,"byte_end":20251,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20252,"byte_end":20255,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait is \"sealed\", such that only types within reqwest can","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20256,"byte_end":20323,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ implement it.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20324,"byte_end":20341,"line_start":6,"line_end":6,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20508,"byte_end":20521,"line_start":14,"line_end":14,"column_start":11,"column_end":24},"name":"IntoUrlSealed","qualname":"::into_url::IntoUrlSealed","value":"IntoUrlSealed","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20670,"byte_end":20678,"line_start":17,"line_end":17,"column_start":8,"column_end":16},"name":"into_url","qualname":"::into_url::IntoUrlSealed::into_url","value":"pub fn into_url(Self) -> crate::Result<Url>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20716,"byte_end":20722,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"as_str","qualname":"::into_url::IntoUrlSealed::as_str","value":"pub fn as_str(&Self) -> &str","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22394,"byte_end":22412,"line_start":9,"line_end":9,"column_start":11,"column_end":29},"name":"ResponseBuilderExt","qualname":"::response::ResponseBuilderExt","value":"ResponseBuilderExt","parent":null,"children":[{"krate":0,"index":123}],"decl_id":null,"docs":" Extension trait for http::response::Builder objects","sig":null,"attributes":[{"value":"/ Extension trait for http::response::Builder objects","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22267,"byte_end":22322,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22323,"byte_end":22326,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Allows the user to add a `Url` to the http::Response","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22327,"byte_end":22383,"line_start":8,"line_end":8,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22554,"byte_end":22557,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"url","qualname":"::response::ResponseBuilderExt::url","value":"pub fn url(Self, Url) -> Self","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" A builder method for the `http::response::Builder` type that allows the user to add a `Url`\n to the `http::Response`\n","sig":null,"attributes":[{"value":"/ A builder method for the `http::response::Builder` type that allows the user to add a `Url`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22419,"byte_end":22514,"line_start":10,"line_end":10,"column_start":5,"column_end":100}},{"value":"/ to the `http::Response`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22519,"byte_end":22546,"line_start":11,"line_end":11,"column_start":5,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8835,"byte_end":8838,"line_start":262,"line_end":262,"column_start":14,"column_end":17},"name":"get","qualname":"::get","value":"pub async fn get<T: IntoUrl>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Shortcut method to quickly make a `GET` request.","sig":null,"attributes":[{"value":"/ Shortcut method to quickly make a `GET` request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8064,"byte_end":8116,"line_start":235,"line_end":235,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8117,"byte_end":8120,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ See also the methods on the [`reqwest::Response`](./struct.Response.html)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8121,"byte_end":8198,"line_start":237,"line_end":237,"column_start":1,"column_end":78}},{"value":"/ type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8199,"byte_end":8208,"line_start":238,"line_end":238,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8209,"byte_end":8212,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: This function creates a new internal `Client` on each call,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8213,"byte_end":8286,"line_start":240,"line_end":240,"column_start":1,"column_end":74}},{"value":"/ and so should not be used if making many requests. Create a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8287,"byte_end":8350,"line_start":241,"line_end":241,"column_start":1,"column_end":64}},{"value":"/ [`Client`](./struct.Client.html) instead.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8351,"byte_end":8396,"line_start":242,"line_end":242,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8397,"byte_end":8400,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8401,"byte_end":8415,"line_start":244,"line_end":244,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8416,"byte_end":8419,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8420,"byte_end":8431,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ # async fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8432,"byte_end":8484,"line_start":247,"line_end":247,"column_start":1,"column_end":53}},{"value":"/ let body = reqwest::get(\"https://www.rust-lang.org\").await?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8485,"byte_end":8548,"line_start":248,"line_end":248,"column_start":1,"column_end":64}},{"value":"/     .text().await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8549,"byte_end":8572,"line_start":249,"line_end":249,"column_start":1,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8573,"byte_end":8585,"line_start":250,"line_end":250,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8586,"byte_end":8593,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8594,"byte_end":8601,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8602,"byte_end":8605,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8606,"byte_end":8618,"line_start":254,"line_end":254,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8619,"byte_end":8622,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ This function fails if:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8623,"byte_end":8650,"line_start":256,"line_end":256,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8651,"byte_end":8654,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ - native TLS backend cannot be initialized","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8655,"byte_end":8701,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ - supplied `Url` cannot be parsed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8702,"byte_end":8739,"line_start":259,"line_end":259,"column_start":1,"column_end":38}},{"value":"/ - there was an error while sending request","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8740,"byte_end":8786,"line_start":260,"line_end":260,"column_start":1,"column_end":47}},{"value":"/ - redirect limit was exhausted","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":8787,"byte_end":8821,"line_start":261,"line_end":261,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":269},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11673566,"byte_end":11673570,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Body","qualname":"::async_impl::body::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":270}],"decl_id":null,"docs":" An asynchronous request body.\n","sig":null,"attributes":[{"value":"/ An asynchronous request body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11673521,"byte_end":11673554,"line_start":16,"line_end":16,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11674280,"byte_end":11674288,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Body>::as_bytes","value":"pub fn as_bytes(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal data of the `Body`.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal data of the `Body`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11674137,"byte_end":11674196,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11674201,"byte_end":11674204,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ `None` is returned, if the underlying data is a stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11674209,"byte_end":11674268,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684387,"byte_end":11684393,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Client","qualname":"::async_impl::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":2289}],"decl_id":null,"docs":" An asynchronous `Client` to make Requests with.","sig":null,"attributes":[{"value":"/ An asynchronous `Client` to make Requests with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11683825,"byte_end":11683876,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11683877,"byte_end":11683880,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The Client has various configuration values to tweak, but the defaults","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11683881,"byte_end":11683955,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ are set to what is usually the most commonly desired value. To configure a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11683956,"byte_end":11684034,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ `Client`, use `Client::builder()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684035,"byte_end":11684073,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684074,"byte_end":11684077,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The `Client` holds a connection pool internally, so it is advised that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684078,"byte_end":11684152,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ you create one and **reuse** it.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684153,"byte_end":11684189,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684190,"byte_end":11684193,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You do **not** have to wrap the `Client` in an [`Rc`] or [`Arc`] to **reuse** it,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684194,"byte_end":11684279,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"/ because it already uses an [`Arc`] internally.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684280,"byte_end":11684330,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684331,"byte_end":11684334,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Rc`]: std::rc::Rc","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684335,"byte_end":11684358,"line_start":57,"line_end":57,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684531,"byte_end":11684544,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"ClientBuilder","qualname":"::async_impl::client::ClientBuilder","value":"ClientBuilder {  }","parent":null,"children":[{"krate":0,"index":522}],"decl_id":null,"docs":" A `ClientBuilder` can be used to create a `Client` with custom configuration.\n","sig":null,"attributes":[{"value":"/ A `ClientBuilder` can be used to create a `Client` with custom configuration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684426,"byte_end":11684507,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"must_use","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11684508,"byte_end":11684519,"line_start":64,"line_end":64,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11686406,"byte_end":11686409,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientBuilder>::new","value":"pub fn new() -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `ClientBuilder`.","sig":null,"attributes":[{"value":"/ Constructs a new `ClientBuilder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11686300,"byte_end":11686337,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11686342,"byte_end":11686345,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Client::builder()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11686350,"byte_end":11686394,"line_start":131,"line_end":131,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11688967,"byte_end":11688972,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"build","qualname":"<ClientBuilder>::build","value":"pub fn build(Self) -> crate::Result<Client>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Client` that uses this `ClientBuilder` configuration.","sig":null,"attributes":[{"value":"/ Returns a `Client` that uses this `ClientBuilder` configuration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11688726,"byte_end":11688794,"line_start":187,"line_end":187,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11688799,"byte_end":11688802,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11688807,"byte_end":11688819,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11688824,"byte_end":11688827,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This method fails if a TLS backend cannot be initialized, or the resolver","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11688832,"byte_end":11688909,"line_start":191,"line_end":191,"column_start":5,"column_end":82}},{"value":"/ cannot load the system configuration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11688914,"byte_end":11688955,"line_start":192,"line_end":192,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703195,"byte_end":11703205,"line_start":533,"line_end":533,"column_start":12,"column_end":22},"name":"user_agent","qualname":"<ClientBuilder>::user_agent","value":"pub fn user_agent<V>(Self, V) -> ClientBuilder where V: TryInto<HeaderValue>,\nV::Error: Into<http::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `User-Agent` header to be used by this client.","sig":null,"attributes":[{"value":"/ Sets the `User-Agent` header to be used by this client.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702586,"byte_end":11702645,"line_start":513,"line_end":513,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702650,"byte_end":11702653,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702658,"byte_end":11702671,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702676,"byte_end":11702679,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702684,"byte_end":11702695,"line_start":517,"line_end":517,"column_start":5,"column_end":16}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702700,"byte_end":11702752,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/ // Name your user agent after your app?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702757,"byte_end":11702800,"line_start":519,"line_end":519,"column_start":5,"column_end":48}},{"value":"/ static APP_USER_AGENT: &str = concat!(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702805,"byte_end":11702847,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/     env!(\"CARGO_PKG_NAME\"),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702852,"byte_end":11702883,"line_start":521,"line_end":521,"column_start":5,"column_end":36}},{"value":"/     \"/\",","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702888,"byte_end":11702900,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/     env!(\"CARGO_PKG_VERSION\"),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702905,"byte_end":11702939,"line_start":523,"line_end":523,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702944,"byte_end":11702950,"line_start":524,"line_end":524,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702955,"byte_end":11702958,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11702963,"byte_end":11703006,"line_start":526,"line_end":526,"column_start":5,"column_end":48}},{"value":"/     .user_agent(APP_USER_AGENT)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703011,"byte_end":11703046,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703051,"byte_end":11703069,"line_start":528,"line_end":528,"column_start":5,"column_end":23}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\").send().await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703074,"byte_end":11703142,"line_start":529,"line_end":529,"column_start":5,"column_end":73}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703147,"byte_end":11703159,"line_start":530,"line_end":530,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703164,"byte_end":11703171,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703176,"byte_end":11703183,"line_start":532,"line_end":532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11705105,"byte_end":11705120,"line_start":592,"line_end":592,"column_start":12,"column_end":27},"name":"default_headers","qualname":"<ClientBuilder>::default_headers","value":"pub fn default_headers(Self, HeaderMap) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the default headers for every request.","sig":null,"attributes":[{"value":"/ Sets the default headers for every request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703616,"byte_end":11703663,"line_start":548,"line_end":548,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703668,"byte_end":11703671,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703676,"byte_end":11703689,"line_start":550,"line_end":550,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703694,"byte_end":11703697,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703702,"byte_end":11703713,"line_start":552,"line_end":552,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703718,"byte_end":11703742,"line_start":553,"line_end":553,"column_start":5,"column_end":29}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703747,"byte_end":11703799,"line_start":554,"line_end":554,"column_start":5,"column_end":57}},{"value":"/ let mut headers = header::HeaderMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703804,"byte_end":11703851,"line_start":555,"line_end":555,"column_start":5,"column_end":52}},{"value":"/ headers.insert(\"X-MY-HEADER\", header::HeaderValue::from_static(\"value\"));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703856,"byte_end":11703933,"line_start":556,"line_end":556,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703938,"byte_end":11703941,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ // Consider marking security-sensitive headers with `set_sensitive`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11703946,"byte_end":11704018,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/ let mut auth_value = header::HeaderValue::from_static(\"secret\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704023,"byte_end":11704091,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ auth_value.set_sensitive(true);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704096,"byte_end":11704131,"line_start":560,"line_end":560,"column_start":5,"column_end":40}},{"value":"/ headers.insert(header::AUTHORIZATION, auth_value);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704136,"byte_end":11704190,"line_start":561,"line_end":561,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704195,"byte_end":11704198,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704203,"byte_end":11704230,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704235,"byte_end":11704278,"line_start":564,"line_end":564,"column_start":5,"column_end":48}},{"value":"/     .default_headers(headers)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704283,"byte_end":11704316,"line_start":565,"line_end":565,"column_start":5,"column_end":38}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704321,"byte_end":11704339,"line_start":566,"line_end":566,"column_start":5,"column_end":23}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\").send().await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704344,"byte_end":11704412,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704417,"byte_end":11704429,"line_start":568,"line_end":568,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704434,"byte_end":11704441,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704446,"byte_end":11704453,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704458,"byte_end":11704461,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Override the default headers:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704466,"byte_end":11704499,"line_start":572,"line_end":572,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704504,"byte_end":11704507,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704512,"byte_end":11704523,"line_start":574,"line_end":574,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704528,"byte_end":11704552,"line_start":575,"line_end":575,"column_start":5,"column_end":29}},{"value":"/ # async fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704557,"byte_end":11704609,"line_start":576,"line_end":576,"column_start":5,"column_end":57}},{"value":"/ let mut headers = header::HeaderMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704614,"byte_end":11704661,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ headers.insert(\"X-MY-HEADER\", header::HeaderValue::from_static(\"value\"));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704666,"byte_end":11704743,"line_start":578,"line_end":578,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704748,"byte_end":11704751,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704756,"byte_end":11704783,"line_start":580,"line_end":580,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704788,"byte_end":11704831,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/     .default_headers(headers)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704836,"byte_end":11704869,"line_start":582,"line_end":582,"column_start":5,"column_end":38}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704874,"byte_end":11704892,"line_start":583,"line_end":583,"column_start":5,"column_end":23}},{"value":"/ let res = client","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704897,"byte_end":11704917,"line_start":584,"line_end":584,"column_start":5,"column_end":25}},{"value":"/     .get(\"https://www.rust-lang.org\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704922,"byte_end":11704963,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/     .header(\"X-MY-HEADER\", \"new_value\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11704968,"byte_end":11705011,"line_start":586,"line_end":586,"column_start":5,"column_end":48}},{"value":"/     .send()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11705016,"byte_end":11705031,"line_start":587,"line_end":587,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11705036,"byte_end":11705052,"line_start":588,"line_end":588,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11705057,"byte_end":11705069,"line_start":589,"line_end":589,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11705074,"byte_end":11705081,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11705086,"byte_end":11705093,"line_start":591,"line_end":591,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710109,"byte_end":11710116,"line_start":714,"line_end":714,"column_start":12,"column_end":19},"name":"no_gzip","qualname":"<ClientBuilder>::no_gzip","value":"pub fn no_gzip(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body gzip decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body gzip decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11709804,"byte_end":11709854,"line_start":709,"line_end":709,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11709859,"byte_end":11709862,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `gzip` feature is not enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11709867,"byte_end":11709941,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ This can be used to ensure a `Client` doesn't use gzip decompression","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11709946,"byte_end":11710018,"line_start":712,"line_end":712,"column_start":5,"column_end":77}},{"value":"/ even if another dependency were to enable the optional `gzip` feature.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710023,"byte_end":11710097,"line_start":713,"line_end":713,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710624,"byte_end":11710633,"line_start":731,"line_end":731,"column_start":12,"column_end":21},"name":"no_brotli","qualname":"<ClientBuilder>::no_brotli","value":"pub fn no_brotli(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body brotli decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body brotli decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710311,"byte_end":11710363,"line_start":726,"line_end":726,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710368,"byte_end":11710371,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `brotli` feature is not enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710376,"byte_end":11710452,"line_start":728,"line_end":728,"column_start":5,"column_end":81}},{"value":"/ This can be used to ensure a `Client` doesn't use brotli decompression","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710457,"byte_end":11710531,"line_start":729,"line_end":729,"column_start":5,"column_end":79}},{"value":"/ even if another dependency were to enable the optional `brotli` feature.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710536,"byte_end":11710612,"line_start":730,"line_end":730,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711151,"byte_end":11711161,"line_start":748,"line_end":748,"column_start":12,"column_end":22},"name":"no_deflate","qualname":"<ClientBuilder>::no_deflate","value":"pub fn no_deflate(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body deflate decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body deflate decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710834,"byte_end":11710887,"line_start":743,"line_end":743,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710892,"byte_end":11710895,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `deflate` feature is not enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710900,"byte_end":11710977,"line_start":745,"line_end":745,"column_start":5,"column_end":82}},{"value":"/ This can be used to ensure a `Client` doesn't use deflate decompression","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11710982,"byte_end":11711057,"line_start":746,"line_end":746,"column_start":5,"column_end":80}},{"value":"/ even if another dependency were to enable the optional `deflate` feature.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711062,"byte_end":11711139,"line_start":747,"line_end":747,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711514,"byte_end":11711522,"line_start":765,"line_end":765,"column_start":12,"column_end":20},"name":"redirect","qualname":"<ClientBuilder>::redirect","value":"pub fn redirect(Self, redirect::Policy) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set a `RedirectPolicy` for this client.","sig":null,"attributes":[{"value":"/ Set a `RedirectPolicy` for this client.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711390,"byte_end":11711433,"line_start":762,"line_end":762,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711438,"byte_end":11711441,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ Default will follow redirects up to a maximum of 10.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711446,"byte_end":11711502,"line_start":764,"line_end":764,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711759,"byte_end":11711766,"line_start":773,"line_end":773,"column_start":12,"column_end":19},"name":"referer","qualname":"<ClientBuilder>::referer","value":"pub fn referer(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable automatic setting of the `Referer` header.","sig":null,"attributes":[{"value":"/ Enable or disable automatic setting of the `Referer` header.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711648,"byte_end":11711712,"line_start":770,"line_end":770,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711717,"byte_end":11711720,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711725,"byte_end":11711747,"line_start":772,"line_end":772,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712079,"byte_end":11712084,"line_start":785,"line_end":785,"column_start":12,"column_end":17},"name":"proxy","qualname":"<ClientBuilder>::proxy","value":"pub fn proxy(Self, Proxy) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a `Proxy` to the list of proxies the `Client` will use.","sig":null,"attributes":[{"value":"/ Add a `Proxy` to the list of proxies the `Client` will use.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711894,"byte_end":11711957,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711962,"byte_end":11711965,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711970,"byte_end":11711980,"line_start":782,"line_end":782,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711985,"byte_end":11711988,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ Adding a proxy will disable the automatic usage of the \"system\" proxy.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11711993,"byte_end":11712067,"line_start":784,"line_end":784,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712390,"byte_end":11712398,"line_start":794,"line_end":794,"column_start":12,"column_end":20},"name":"no_proxy","qualname":"<ClientBuilder>::no_proxy","value":"pub fn no_proxy(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Clear all `Proxies`, so `Client` will use no proxy anymore.","sig":null,"attributes":[{"value":"/ Clear all `Proxies`, so `Client` will use no proxy anymore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712237,"byte_end":11712300,"line_start":791,"line_end":791,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712305,"byte_end":11712308,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This also disables the automatic usage of the \"system\" proxy.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712313,"byte_end":11712378,"line_start":793,"line_end":793,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712763,"byte_end":11712770,"line_start":808,"line_end":808,"column_start":12,"column_end":19},"name":"timeout","qualname":"<ClientBuilder>::timeout","value":"pub fn timeout(Self, Duration) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enables a request timeout.","sig":null,"attributes":[{"value":"/ Enables a request timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712557,"byte_end":11712587,"line_start":802,"line_end":802,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712592,"byte_end":11712595,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ The timeout is applied from when the request starts connecting until the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712600,"byte_end":11712676,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ response body has finished.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712681,"byte_end":11712712,"line_start":805,"line_end":805,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712717,"byte_end":11712720,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Default is no timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712725,"byte_end":11712751,"line_start":807,"line_end":807,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713130,"byte_end":11713145,"line_start":821,"line_end":821,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<ClientBuilder>::connect_timeout","value":"pub fn connect_timeout(Self, Duration) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout for only the connect phase of a `Client`.","sig":null,"attributes":[{"value":"/ Set a timeout for only the connect phase of a `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712888,"byte_end":11712947,"line_start":813,"line_end":813,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712952,"byte_end":11712955,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712960,"byte_end":11712982,"line_start":815,"line_end":815,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712987,"byte_end":11712990,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11712995,"byte_end":11713005,"line_start":817,"line_end":817,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713010,"byte_end":11713013,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ This **requires** the futures be executed in a tokio runtime with","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713018,"byte_end":11713087,"line_start":819,"line_end":819,"column_start":5,"column_end":74}},{"value":"/ a tokio timer enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713092,"byte_end":11713118,"line_start":820,"line_end":820,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713527,"byte_end":11713545,"line_start":832,"line_end":832,"column_start":12,"column_end":30},"name":"connection_verbose","qualname":"<ClientBuilder>::connection_verbose","value":"pub fn connection_verbose(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set whether connections should emit verbose logs.","sig":null,"attributes":[{"value":"/ Set whether connections should emit verbose logs.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713271,"byte_end":11713324,"line_start":826,"line_end":826,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713329,"byte_end":11713332,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ Enabling this option will emit [log][] messages at the `TRACE` level","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713337,"byte_end":11713409,"line_start":828,"line_end":828,"column_start":5,"column_end":77}},{"value":"/ for read and write operations on connections.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713414,"byte_end":11713463,"line_start":829,"line_end":829,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713468,"byte_end":11713471,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ [log]: https://crates.io/crates/log","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713476,"byte_end":11713515,"line_start":831,"line_end":831,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713846,"byte_end":11713863,"line_start":844,"line_end":844,"column_start":12,"column_end":29},"name":"pool_idle_timeout","qualname":"<ClientBuilder>::pool_idle_timeout","value":"pub fn pool_idle_timeout<D>(Self, D) -> ClientBuilder where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set an optional timeout for idle sockets being kept-alive.","sig":null,"attributes":[{"value":"/ Set an optional timeout for idle sockets being kept-alive.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713685,"byte_end":11713747,"line_start":839,"line_end":839,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713752,"byte_end":11713755,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713760,"byte_end":11713795,"line_start":841,"line_end":841,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713800,"byte_end":11713803,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ Default is 90 seconds.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11713808,"byte_end":11713834,"line_start":843,"line_end":843,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714107,"byte_end":11714129,"line_start":853,"line_end":853,"column_start":12,"column_end":34},"name":"pool_max_idle_per_host","qualname":"<ClientBuilder>::pool_max_idle_per_host","value":"pub fn pool_max_idle_per_host(Self, usize) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection per host allowed in the pool.\n","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection per host allowed in the pool.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714029,"byte_end":11714095,"line_start":852,"line_end":852,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714309,"byte_end":11714333,"line_start":859,"line_end":859,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<ClientBuilder>::http1_title_case_headers","value":"pub fn http1_title_case_headers(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send headers as title case instead of lowercase.\n","sig":null,"attributes":[{"value":"/ Send headers as title case instead of lowercase.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714245,"byte_end":11714297,"line_start":858,"line_end":858,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714472,"byte_end":11714482,"line_start":865,"line_end":865,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<ClientBuilder>::http1_only","value":"pub fn http1_only(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Only use HTTP/1.\n","sig":null,"attributes":[{"value":"/ Only use HTTP/1.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714440,"byte_end":11714460,"line_start":864,"line_end":864,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714640,"byte_end":11714656,"line_start":871,"line_end":871,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<ClientBuilder>::http09_responses","value":"pub fn http09_responses(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Allow HTTP/0.9 responses\n","sig":null,"attributes":[{"value":"/ Allow HTTP/0.9 responses","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714600,"byte_end":11714628,"line_start":870,"line_end":870,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714787,"byte_end":11714808,"line_start":877,"line_end":877,"column_start":12,"column_end":33},"name":"http2_prior_knowledge","qualname":"<ClientBuilder>::http2_prior_knowledge","value":"pub fn http2_prior_knowledge(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Only use HTTP/2.\n","sig":null,"attributes":[{"value":"/ Only use HTTP/2.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714755,"byte_end":11714775,"line_start":876,"line_end":876,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715124,"byte_end":11715156,"line_start":885,"line_end":885,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<ClientBuilder>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `SETTINGS_INITIAL_WINDOW_SIZE` option for HTTP2 stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the `SETTINGS_INITIAL_WINDOW_SIZE` option for HTTP2 stream-level flow control.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11714926,"byte_end":11715013,"line_start":882,"line_end":882,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715018,"byte_end":11715021,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ Default is currently 65,535 but may change internally to optimize for common uses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715026,"byte_end":11715112,"line_start":884,"line_end":884,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715471,"byte_end":11715507,"line_start":893,"line_end":893,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<ClientBuilder>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715304,"byte_end":11715360,"line_start":890,"line_end":890,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715365,"byte_end":11715368,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Default is currently 65,535 but may change internally to optimize for common uses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715373,"byte_end":11715459,"line_start":892,"line_end":892,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715892,"byte_end":11715913,"line_start":905,"line_end":905,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<ClientBuilder>::http2_adaptive_window","value":"pub fn http2_adaptive_window(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715682,"byte_end":11715731,"line_start":901,"line_end":901,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715736,"byte_end":11715739,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in `http2_initial_stream_window_size` and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715744,"byte_end":11715832,"line_start":903,"line_end":903,"column_start":5,"column_end":93}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11715837,"byte_end":11715880,"line_start":904,"line_end":904,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716195,"byte_end":11716215,"line_start":913,"line_end":913,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<ClientBuilder>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716035,"byte_end":11716084,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716089,"byte_end":11716092,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ Default is currently 16,384 but may change internally to optimize for common uses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716097,"byte_end":11716183,"line_start":912,"line_end":912,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716468,"byte_end":11716479,"line_start":923,"line_end":923,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<ClientBuilder>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set whether sockets have `SO_NODELAY` enabled.","sig":null,"attributes":[{"value":"/ Set whether sockets have `SO_NODELAY` enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716371,"byte_end":11716421,"line_start":920,"line_end":920,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716426,"byte_end":11716429,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716434,"byte_end":11716456,"line_start":922,"line_end":922,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716890,"byte_end":11716903,"line_start":939,"line_end":939,"column_start":12,"column_end":25},"name":"local_address","qualname":"<ClientBuilder>::local_address","value":"pub fn local_address<T>(Self, T) -> ClientBuilder where\nT: Into<Option<IpAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Bind to a local IP Address.","sig":null,"attributes":[{"value":"/ Bind to a local IP Address.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716587,"byte_end":11716618,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716623,"byte_end":11716626,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716631,"byte_end":11716644,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716649,"byte_end":11716652,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716657,"byte_end":11716664,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use std::net::IpAddr;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716669,"byte_end":11716694,"line_start":933,"line_end":933,"column_start":5,"column_end":30}},{"value":"/ let local_addr = IpAddr::from([12, 4, 1, 8]);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716699,"byte_end":11716748,"line_start":934,"line_end":934,"column_start":5,"column_end":54}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716753,"byte_end":11716796,"line_start":935,"line_end":935,"column_start":5,"column_end":48}},{"value":"/     .local_address(local_addr)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716801,"byte_end":11716835,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/     .build().unwrap();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716840,"byte_end":11716866,"line_start":937,"line_end":937,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11716871,"byte_end":11716878,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717208,"byte_end":11717221,"line_start":950,"line_end":950,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<ClientBuilder>::tcp_keepalive","value":"pub fn tcp_keepalive<D>(Self, D) -> ClientBuilder where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717065,"byte_end":11717141,"line_start":947,"line_end":947,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717146,"byte_end":11717149,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ If `None`, the option will not be set.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717154,"byte_end":11717196,"line_start":949,"line_end":949,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717923,"byte_end":11717943,"line_start":978,"line_end":978,"column_start":12,"column_end":32},"name":"add_root_certificate","qualname":"<ClientBuilder>::add_root_certificate","value":"pub fn add_root_certificate(Self, Certificate) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a custom root certificate.","sig":null,"attributes":[{"value":"/ Add a custom root certificate.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717403,"byte_end":11717437,"line_start":960,"line_end":960,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717442,"byte_end":11717445,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This can be used to connect to a server that has a self-signed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717450,"byte_end":11717516,"line_start":962,"line_end":962,"column_start":5,"column_end":71}},{"value":"/ certificate for example.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717521,"byte_end":11717549,"line_start":963,"line_end":963,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717554,"byte_end":11717557,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717562,"byte_end":11717576,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717581,"byte_end":11717584,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717589,"byte_end":11717670,"line_start":967,"line_end":967,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717675,"byte_end":11717701,"line_start":968,"line_end":968,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11717706,"byte_end":11717731,"line_start":969,"line_end":969,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718593,"byte_end":11718616,"line_start":1000,"line_end":1000,"column_start":12,"column_end":35},"name":"tls_built_in_root_certs","qualname":"<ClientBuilder>::tls_built_in_root_certs","value":"pub fn tls_built_in_root_certs(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Controls the use of built-in/preloaded certificates during certificate validation.","sig":null,"attributes":[{"value":"/ Controls the use of built-in/preloaded certificates during certificate validation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718059,"byte_end":11718145,"line_start":983,"line_end":983,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718150,"byte_end":11718153,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true` -- built-in system certs will be used.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718158,"byte_end":11718219,"line_start":985,"line_end":985,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718224,"byte_end":11718227,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718232,"byte_end":11718246,"line_start":987,"line_end":987,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718251,"byte_end":11718254,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718259,"byte_end":11718340,"line_start":989,"line_end":989,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718345,"byte_end":11718371,"line_start":990,"line_end":990,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718376,"byte_end":11718401,"line_start":991,"line_end":991,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11719140,"byte_end":11719148,"line_start":1013,"line_end":1013,"column_start":12,"column_end":20},"name":"identity","qualname":"<ClientBuilder>::identity","value":"pub fn identity(Self, Identity) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the identity to be used for client certificate authentication.","sig":null,"attributes":[{"value":"/ Sets the identity to be used for client certificate authentication.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718772,"byte_end":11718843,"line_start":1005,"line_end":1005,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718848,"byte_end":11718851,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718856,"byte_end":11718870,"line_start":1007,"line_end":1007,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718875,"byte_end":11718878,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `native-tls` or `rustls-tls(-...)` feature to be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718883,"byte_end":11718962,"line_start":1009,"line_end":1009,"column_start":5,"column_end":84}},{"value":"/ enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718967,"byte_end":11718979,"line_start":1010,"line_end":1010,"column_start":5,"column_end":17}},{"value":"cfg(any(feature = \"native-tls\", feature = \"__rustls\"))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11718984,"byte_end":11719041,"line_start":1011,"line_end":1011,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720893,"byte_end":11720920,"line_start":1067,"line_end":1067,"column_start":12,"column_end":39},"name":"danger_accept_invalid_certs","qualname":"<ClientBuilder>::danger_accept_invalid_certs","value":"pub fn danger_accept_invalid_certs(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Controls the use of certificate validation.","sig":null,"attributes":[{"value":"/ Controls the use of certificate validation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720085,"byte_end":11720132,"line_start":1042,"line_end":1042,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720137,"byte_end":11720140,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720145,"byte_end":11720169,"line_start":1044,"line_end":1044,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720174,"byte_end":11720177,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720182,"byte_end":11720195,"line_start":1046,"line_end":1046,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720200,"byte_end":11720203,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ You should think very carefully before using this method. If","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720208,"byte_end":11720272,"line_start":1048,"line_end":1048,"column_start":5,"column_end":69}},{"value":"/ invalid certificates are trusted, *any* certificate for *any* site","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720277,"byte_end":11720347,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ will be trusted for use. This includes expired certificates. This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720352,"byte_end":11720421,"line_start":1050,"line_end":1050,"column_start":5,"column_end":74}},{"value":"/ introduces significant vulnerabilities, and should only be used","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720426,"byte_end":11720493,"line_start":1051,"line_end":1051,"column_start":5,"column_end":72}},{"value":"/ as a last resort.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720498,"byte_end":11720519,"line_start":1052,"line_end":1052,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720524,"byte_end":11720527,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720532,"byte_end":11720546,"line_start":1054,"line_end":1054,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720551,"byte_end":11720554,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720559,"byte_end":11720640,"line_start":1056,"line_end":1056,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720645,"byte_end":11720671,"line_start":1057,"line_end":1057,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11720676,"byte_end":11720701,"line_start":1058,"line_end":1058,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721845,"byte_end":11721860,"line_start":1096,"line_end":1096,"column_start":12,"column_end":27},"name":"min_tls_version","qualname":"<ClientBuilder>::min_tls_version","value":"pub fn min_tls_version(Self, tls::Version) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum required TLS version for connections.","sig":null,"attributes":[{"value":"/ Set the minimum required TLS version for connections.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721066,"byte_end":11721123,"line_start":1072,"line_end":1072,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721128,"byte_end":11721131,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ By default the TLS backend's own default is used.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721136,"byte_end":11721189,"line_start":1074,"line_end":1074,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721194,"byte_end":11721197,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721202,"byte_end":11721214,"line_start":1076,"line_end":1076,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721219,"byte_end":11721222,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ A value of `tls::Version::TLS_1_3` will cause an error with the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721227,"byte_end":11721294,"line_start":1078,"line_end":1078,"column_start":5,"column_end":72}},{"value":"/ `native-tls`/`default-tls` backend. This does not mean the version","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721299,"byte_end":11721369,"line_start":1079,"line_end":1079,"column_start":5,"column_end":75}},{"value":"/ isn't supported, just that it can't be set as a minimum due to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721374,"byte_end":11721440,"line_start":1080,"line_end":1080,"column_start":5,"column_end":71}},{"value":"/ technical limitations.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721445,"byte_end":11721471,"line_start":1081,"line_end":1081,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721476,"byte_end":11721479,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721484,"byte_end":11721498,"line_start":1083,"line_end":1083,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721503,"byte_end":11721506,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721511,"byte_end":11721592,"line_start":1085,"line_end":1085,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721597,"byte_end":11721623,"line_start":1086,"line_end":1086,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721628,"byte_end":11721653,"line_start":1087,"line_end":1087,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722749,"byte_end":11722764,"line_start":1125,"line_end":1125,"column_start":12,"column_end":27},"name":"max_tls_version","qualname":"<ClientBuilder>::max_tls_version","value":"pub fn max_tls_version(Self, tls::Version) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum allowed TLS version for connections.","sig":null,"attributes":[{"value":"/ Set the maximum allowed TLS version for connections.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11721990,"byte_end":11722046,"line_start":1101,"line_end":1101,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722051,"byte_end":11722054,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ By default there's no maximum.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722059,"byte_end":11722093,"line_start":1103,"line_end":1103,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722098,"byte_end":11722101,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722106,"byte_end":11722118,"line_start":1105,"line_end":1105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722123,"byte_end":11722126,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ A value of `tls::Version::TLS_1_3` will cause an error with the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722131,"byte_end":11722198,"line_start":1107,"line_end":1107,"column_start":5,"column_end":72}},{"value":"/ `native-tls`/`default-tls` backend. This does not mean the version","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722203,"byte_end":11722273,"line_start":1108,"line_end":1108,"column_start":5,"column_end":75}},{"value":"/ isn't supported, just that it can't be set as a maximum due to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722278,"byte_end":11722344,"line_start":1109,"line_end":1109,"column_start":5,"column_end":71}},{"value":"/ technical limitations.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722349,"byte_end":11722375,"line_start":1110,"line_end":1110,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722380,"byte_end":11722383,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722388,"byte_end":11722402,"line_start":1112,"line_end":1112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722407,"byte_end":11722410,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722415,"byte_end":11722496,"line_start":1114,"line_end":1114,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722501,"byte_end":11722527,"line_start":1115,"line_end":1115,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11722532,"byte_end":11722557,"line_start":1116,"line_end":1116,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723823,"byte_end":11723837,"line_start":1155,"line_end":1155,"column_start":12,"column_end":26},"name":"use_rustls_tls","qualname":"<ClientBuilder>::use_rustls_tls","value":"pub fn use_rustls_tls(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Force using the Rustls TLS backend.","sig":null,"attributes":[{"value":"/ Force using the Rustls TLS backend.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723416,"byte_end":11723455,"line_start":1145,"line_end":1145,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723460,"byte_end":11723463,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ Since multiple TLS backends can be optionally enabled, this option will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723468,"byte_end":11723543,"line_start":1147,"line_end":1147,"column_start":5,"column_end":80}},{"value":"/ force the `rustls` backend to be used for this `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723548,"byte_end":11723608,"line_start":1148,"line_end":1148,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723613,"byte_end":11723616,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723621,"byte_end":11723635,"line_start":1150,"line_end":1150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723640,"byte_end":11723643,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `rustls-tls(-...)` feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723648,"byte_end":11723720,"line_start":1152,"line_end":1152,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"__rustls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723725,"byte_end":11723753,"line_start":1153,"line_end":1153,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724817,"byte_end":11724838,"line_start":1180,"line_end":1180,"column_start":12,"column_end":33},"name":"use_preconfigured_tls","qualname":"<ClientBuilder>::use_preconfigured_tls","value":"pub fn use_preconfigured_tls<impl Any: Any>(Self, impl Any) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Use a preconfigured TLS backend.","sig":null,"attributes":[{"value":"/ Use a preconfigured TLS backend.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723937,"byte_end":11723973,"line_start":1160,"line_end":1160,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723978,"byte_end":11723981,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ If the passed `Any` argument is not a TLS backend that reqwest","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11723986,"byte_end":11724052,"line_start":1162,"line_end":1162,"column_start":5,"column_end":71}},{"value":"/ understands, the `ClientBuilder` will error when calling `build`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724057,"byte_end":11724126,"line_start":1163,"line_end":1163,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724131,"byte_end":11724134,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ # Advanced","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724139,"byte_end":11724153,"line_start":1165,"line_end":1165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724158,"byte_end":11724161,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ This is an advanced option, and can be somewhat brittle. Usage requires","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724166,"byte_end":11724241,"line_start":1167,"line_end":1167,"column_start":5,"column_end":80}},{"value":"/ keeping the preconfigured TLS argument version in sync with reqwest,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724246,"byte_end":11724318,"line_start":1168,"line_end":1168,"column_start":5,"column_end":77}},{"value":"/ since version mismatches will result in an \"unknown\" TLS backend.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724323,"byte_end":11724392,"line_start":1169,"line_end":1169,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724397,"byte_end":11724400,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ If possible, it's preferable to use the methods on `ClientBuilder`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724405,"byte_end":11724475,"line_start":1171,"line_end":1171,"column_start":5,"column_end":75}},{"value":"/ to configure reqwest's TLS.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724480,"byte_end":11724511,"line_start":1172,"line_end":1172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724516,"byte_end":11724519,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724524,"byte_end":11724538,"line_start":1174,"line_end":1174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724543,"byte_end":11724546,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ This requires one of the optional features `native-tls` or","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724551,"byte_end":11724613,"line_start":1176,"line_end":1176,"column_start":5,"column_end":67}},{"value":"/ `rustls-tls(-...)` to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724618,"byte_end":11724655,"line_start":1177,"line_end":1177,"column_start":5,"column_end":42}},{"value":"cfg(any(feature = \"native-tls\", feature = \"__rustls\",))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11724660,"byte_end":11724718,"line_start":1178,"line_end":1178,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11726752,"byte_end":11726764,"line_start":1229,"line_end":1229,"column_start":12,"column_end":24},"name":"no_trust_dns","qualname":"<ClientBuilder>::no_trust_dns","value":"pub fn no_trust_dns(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disables the trust-dns async resolver.","sig":null,"attributes":[{"value":"/ Disables the trust-dns async resolver.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11726435,"byte_end":11726477,"line_start":1224,"line_end":1224,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11726482,"byte_end":11726485,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `trust-dns` feature is not enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11726490,"byte_end":11726569,"line_start":1226,"line_end":1226,"column_start":5,"column_end":84}},{"value":"/ This can be used to ensure a `Client` doesn't use the trust-dns async resolver","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11726574,"byte_end":11726656,"line_start":1227,"line_end":1227,"column_start":5,"column_end":87}},{"value":"/ even if another dependency were to enable the optional `trust-dns` feature.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11726661,"byte_end":11726740,"line_start":1228,"line_end":1228,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727081,"byte_end":11727091,"line_start":1244,"line_end":1244,"column_start":12,"column_end":22},"name":"https_only","qualname":"<ClientBuilder>::https_only","value":"pub fn https_only(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Restrict the Client to be used with HTTPS only requests.","sig":null,"attributes":[{"value":"/ Restrict the Client to be used with HTTPS only requests.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11726974,"byte_end":11727034,"line_start":1241,"line_end":1241,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727039,"byte_end":11727042,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ Defaults to false.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727047,"byte_end":11727069,"line_start":1243,"line_end":1243,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727627,"byte_end":11727634,"line_start":1257,"line_end":1257,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ClientBuilder>::resolve","value":"pub fn resolve(Self, &str, SocketAddr) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Override DNS resolution for specific domains to particular IP addresses.","sig":null,"attributes":[{"value":"/ Override DNS resolution for specific domains to particular IP addresses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727202,"byte_end":11727278,"line_start":1249,"line_end":1249,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727283,"byte_end":11727286,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ Warning","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727291,"byte_end":11727302,"line_start":1251,"line_end":1251,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727307,"byte_end":11727310,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ Since the DNS protocol has no notion of ports, if you wish to send","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727315,"byte_end":11727385,"line_start":1253,"line_end":1253,"column_start":5,"column_end":75}},{"value":"/ traffic to a particular port you must include this port in the URL","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727390,"byte_end":11727460,"line_start":1254,"line_end":1254,"column_start":5,"column_end":75}},{"value":"/ itself, any port in the overridden addr will be ignored and traffic sent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727465,"byte_end":11727541,"line_start":1255,"line_end":1255,"column_start":5,"column_end":81}},{"value":"/ to the conventional port for the given scheme (e.g. 80 for http).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727546,"byte_end":11727615,"line_start":1256,"line_end":1256,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728279,"byte_end":11728282,"line_start":1281,"line_end":1281,"column_start":12,"column_end":15},"name":"new","qualname":"<Client>::new","value":"pub fn new() -> Client","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Client`.","sig":null,"attributes":[{"value":"/ Constructs a new `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727957,"byte_end":11727987,"line_start":1272,"line_end":1272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727992,"byte_end":11727995,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728000,"byte_end":11728012,"line_start":1274,"line_end":1274,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728017,"byte_end":11728020,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ This method panics if a TLS backend cannot be initialized, or the resolver","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728025,"byte_end":11728103,"line_start":1276,"line_end":1276,"column_start":5,"column_end":83}},{"value":"/ cannot load the system configuration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728108,"byte_end":11728149,"line_start":1277,"line_end":1277,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728154,"byte_end":11728157,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ Use `Client::builder()` if you wish to handle the failure as an `Error`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728162,"byte_end":11728237,"line_start":1279,"line_end":1279,"column_start":5,"column_end":80}},{"value":"/ instead of panicking.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728242,"byte_end":11728267,"line_start":1280,"line_end":1280,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728495,"byte_end":11728502,"line_start":1288,"line_end":1288,"column_start":12,"column_end":19},"name":"builder","qualname":"<Client>::builder","value":"pub fn builder() -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ClientBuilder` to configure a `Client`.","sig":null,"attributes":[{"value":"/ Creates a `ClientBuilder` to configure a `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728369,"byte_end":11728423,"line_start":1285,"line_end":1285,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728428,"byte_end":11728431,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ This is the same as `ClientBuilder::new()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728436,"byte_end":11728483,"line_start":1287,"line_end":1287,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728737,"byte_end":11728740,"line_start":1297,"line_end":1297,"column_start":12,"column_end":15},"name":"get","qualname":"<Client>::get","value":"pub fn get<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `GET` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `GET` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728564,"byte_end":11728620,"line_start":1292,"line_end":1292,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728625,"byte_end":11728628,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728633,"byte_end":11728645,"line_start":1294,"line_end":1294,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728650,"byte_end":11728653,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728658,"byte_end":11728725,"line_start":1296,"line_end":1296,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729012,"byte_end":11729016,"line_start":1306,"line_end":1306,"column_start":12,"column_end":16},"name":"post","qualname":"<Client>::post","value":"pub fn post<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `POST` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `POST` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728838,"byte_end":11728895,"line_start":1301,"line_end":1301,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728900,"byte_end":11728903,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728908,"byte_end":11728920,"line_start":1303,"line_end":1303,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728925,"byte_end":11728928,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11728933,"byte_end":11729000,"line_start":1305,"line_end":1305,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729288,"byte_end":11729291,"line_start":1315,"line_end":1315,"column_start":12,"column_end":15},"name":"put","qualname":"<Client>::put","value":"pub fn put<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `PUT` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `PUT` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729115,"byte_end":11729171,"line_start":1310,"line_end":1310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729176,"byte_end":11729179,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729184,"byte_end":11729196,"line_start":1312,"line_end":1312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729201,"byte_end":11729204,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729209,"byte_end":11729276,"line_start":1314,"line_end":1314,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729564,"byte_end":11729569,"line_start":1324,"line_end":1324,"column_start":12,"column_end":17},"name":"patch","qualname":"<Client>::patch","value":"pub fn patch<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `PATCH` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `PATCH` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729389,"byte_end":11729447,"line_start":1319,"line_end":1319,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729452,"byte_end":11729455,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729460,"byte_end":11729472,"line_start":1321,"line_end":1321,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729477,"byte_end":11729480,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729485,"byte_end":11729552,"line_start":1323,"line_end":1323,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729845,"byte_end":11729851,"line_start":1333,"line_end":1333,"column_start":12,"column_end":18},"name":"delete","qualname":"<Client>::delete","value":"pub fn delete<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `DELETE` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `DELETE` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729669,"byte_end":11729728,"line_start":1328,"line_end":1328,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729733,"byte_end":11729736,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729741,"byte_end":11729753,"line_start":1330,"line_end":1330,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729758,"byte_end":11729761,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729766,"byte_end":11729833,"line_start":1332,"line_end":1332,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730126,"byte_end":11730130,"line_start":1342,"line_end":1342,"column_start":12,"column_end":16},"name":"head","qualname":"<Client>::head","value":"pub fn head<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `HEAD` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `HEAD` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11729952,"byte_end":11730009,"line_start":1337,"line_end":1337,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730014,"byte_end":11730017,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730022,"byte_end":11730034,"line_start":1339,"line_end":1339,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730039,"byte_end":11730042,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730047,"byte_end":11730114,"line_start":1341,"line_end":1341,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730527,"byte_end":11730534,"line_start":1354,"line_end":1354,"column_start":12,"column_end":19},"name":"request","qualname":"<Client>::request","value":"pub fn request<U: IntoUrl>(&Self, Method, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Start building a `Request` with the `Method` and `Url`.","sig":null,"attributes":[{"value":"/ Start building a `Request` with the `Method` and `Url`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730229,"byte_end":11730288,"line_start":1346,"line_end":1346,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730293,"byte_end":11730296,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ Returns a `RequestBuilder`, which will allow setting headers and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730301,"byte_end":11730369,"line_start":1348,"line_end":1348,"column_start":5,"column_end":73}},{"value":"/ the request body before sending.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730374,"byte_end":11730410,"line_start":1349,"line_end":1349,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730415,"byte_end":11730418,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730423,"byte_end":11730435,"line_start":1351,"line_end":1351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730440,"byte_end":11730443,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730448,"byte_end":11730515,"line_start":1353,"line_end":1353,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11731187,"byte_end":11731194,"line_start":1371,"line_end":1371,"column_start":12,"column_end":19},"name":"execute","qualname":"<Client>::execute","value":"pub fn execute(&Self, Request) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes a `Request`.","sig":null,"attributes":[{"value":"/ Executes a `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730732,"byte_end":11730757,"line_start":1359,"line_end":1359,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730762,"byte_end":11730765,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ A `Request` can be built manually with `Request::new()` or obtained","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730770,"byte_end":11730841,"line_start":1361,"line_end":1361,"column_start":5,"column_end":76}},{"value":"/ from a RequestBuilder with `RequestBuilder::build()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730846,"byte_end":11730903,"line_start":1362,"line_end":1362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730908,"byte_end":11730911,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ You should prefer to use the `RequestBuilder` and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730916,"byte_end":11730969,"line_start":1364,"line_end":1364,"column_start":5,"column_end":58}},{"value":"/ `RequestBuilder::send()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11730974,"byte_end":11731003,"line_start":1365,"line_end":1365,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11731008,"byte_end":11731011,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11731016,"byte_end":11731028,"line_start":1367,"line_end":1367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11731033,"byte_end":11731036,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ This method fails if there was an error while sending request,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11731041,"byte_end":11731107,"line_start":1369,"line_end":1369,"column_start":5,"column_end":71}},{"value":"/ redirect loop was detected or redirect limit was exhausted.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11731112,"byte_end":11731175,"line_start":1370,"line_end":1370,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764068,"byte_end":11764075,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Request","qualname":"::async_impl::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853}],"decl_id":null,"docs":" A request which can be executed with `Client::execute()`.\n","sig":null,"attributes":[{"value":"/ A request which can be executed with `Client::execute()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11763995,"byte_end":11764056,"line_start":23,"line_end":23,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":854},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764427,"byte_end":11764441,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"RequestBuilder","qualname":"::async_impl::request::RequestBuilder","value":"RequestBuilder {  }","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"decl_id":null,"docs":" A builder to construct the properties of a `Request`.","sig":null,"attributes":[{"value":"/ A builder to construct the properties of a `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764216,"byte_end":11764273,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764274,"byte_end":11764277,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ To construct a `RequestBuilder`, refer to the `Client` documentation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764278,"byte_end":11764351,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"must_use = \"RequestBuilder does nothing until you 'send' it\"","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764352,"byte_end":11764415,"line_start":36,"line_end":36,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764578,"byte_end":11764581,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"pub fn new(Method, Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new request.\n","sig":null,"attributes":[{"value":"/ Constructs a new request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764523,"byte_end":11764552,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764557,"byte_end":11764566,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764870,"byte_end":11764876,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"pub fn method(&Self) -> &Method","parent":null,"children":[],"decl_id":null,"docs":" Get the method.\n","sig":null,"attributes":[{"value":"/ Get the method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764825,"byte_end":11764844,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764849,"byte_end":11764858,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764997,"byte_end":11765007,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"method_mut","qualname":"<Request>::method_mut","value":"pub fn method_mut(&mut Self) -> &mut Method","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the method.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764929,"byte_end":11764971,"line_start":62,"line_end":62,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764976,"byte_end":11764985,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765114,"byte_end":11765117,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"url","qualname":"<Request>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the url.\n","sig":null,"attributes":[{"value":"/ Get the url.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765072,"byte_end":11765088,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765093,"byte_end":11765102,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765229,"byte_end":11765236,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"url_mut","qualname":"<Request>::url_mut","value":"pub fn url_mut(&mut Self) -> &mut Url","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the url.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the url.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765164,"byte_end":11765203,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765208,"byte_end":11765217,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765341,"byte_end":11765348,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get the headers.\n","sig":null,"attributes":[{"value":"/ Get the headers.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765295,"byte_end":11765315,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765320,"byte_end":11765329,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765474,"byte_end":11765485,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Request>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the headers.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the headers.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765405,"byte_end":11765448,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765453,"byte_end":11765462,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765597,"byte_end":11765601,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"body","qualname":"<Request>::body","value":"pub fn body(&Self) -> Option<&Body>","parent":null,"children":[],"decl_id":null,"docs":" Get the body.\n","sig":null,"attributes":[{"value":"/ Get the body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765554,"byte_end":11765571,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765576,"byte_end":11765585,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765732,"byte_end":11765740,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"body_mut","qualname":"<Request>::body_mut","value":"pub fn body_mut(&mut Self) -> &mut Option<Body>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the body.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765666,"byte_end":11765706,"line_start":98,"line_end":98,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765711,"byte_end":11765720,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765855,"byte_end":11765862,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Request>::timeout","value":"pub fn timeout(&Self) -> Option<&Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get the timeout.\n","sig":null,"attributes":[{"value":"/ Get the timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765809,"byte_end":11765829,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765834,"byte_end":11765843,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766003,"byte_end":11766014,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"timeout_mut","qualname":"<Request>::timeout_mut","value":"pub fn timeout_mut(&mut Self) -> &mut Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the timeout.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765934,"byte_end":11765977,"line_start":110,"line_end":110,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11765982,"byte_end":11765991,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766141,"byte_end":11766148,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"version","qualname":"<Request>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the http version.\n","sig":null,"attributes":[{"value":"/ Get the http version.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766090,"byte_end":11766115,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766120,"byte_end":11766129,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766275,"byte_end":11766286,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"version_mut","qualname":"<Request>::version_mut","value":"pub fn version_mut(&mut Self) -> &mut Version","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the http version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the http version.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766201,"byte_end":11766249,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766254,"byte_end":11766263,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766497,"byte_end":11766506,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Request>::try_clone","value":"pub fn try_clone(&Self) -> Option<Request>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to clone the request.","sig":null,"attributes":[{"value":"/ Attempt to clone the request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766353,"byte_end":11766386,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766391,"byte_end":11766394,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the request can not be cloned, i.e. if the body is a stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11766399,"byte_end":11766485,"line_start":130,"line_end":130,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11767833,"byte_end":11767839,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"header","qualname":"<RequestBuilder>::header","value":"pub fn header<K, V>(Self, K, V) -> RequestBuilder where\nHeaderName: TryFrom<K>, <HeaderName as TryFrom<K>>::Error: Into<http::Error>,\nHeaderValue: TryFrom<V>, <HeaderValue as TryFrom<V>>::Error: Into<http::Error>","parent":null,"children":[],"decl_id":null,"docs":" Add a `Header` to this Request.\n","sig":null,"attributes":[{"value":"/ Add a `Header` to this Request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11767786,"byte_end":11767821,"line_start":182,"line_end":182,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769380,"byte_end":11769387,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"headers","qualname":"<RequestBuilder>::headers","value":"pub fn headers(Self, crate::header::HeaderMap) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a set of Headers to the existing ones on this Request.","sig":null,"attributes":[{"value":"/ Add a set of Headers to the existing ones on this Request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769240,"byte_end":11769302,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769307,"byte_end":11769310,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The headers will be merged in to any already set.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769315,"byte_end":11769368,"line_start":222,"line_end":222,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11770009,"byte_end":11770019,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"basic_auth","qualname":"<RequestBuilder>::basic_auth","value":"pub fn basic_auth<U, P>(Self, U, Option<P>) -> RequestBuilder where\nU: fmt::Display, P: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Enable HTTP basic authentication.","sig":null,"attributes":[{"value":"/ Enable HTTP basic authentication.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769605,"byte_end":11769642,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769647,"byte_end":11769650,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769655,"byte_end":11769666,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769671,"byte_end":11769696,"line_start":233,"line_end":233,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769701,"byte_end":11769704,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769709,"byte_end":11769752,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769757,"byte_end":11769797,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ let resp = client.delete(\"http://httpbin.org/delete\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769802,"byte_end":11769859,"line_start":237,"line_end":237,"column_start":5,"column_end":62}},{"value":"/     .basic_auth(\"admin\", Some(\"good password\"))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769864,"byte_end":11769915,"line_start":238,"line_end":238,"column_start":5,"column_end":56}},{"value":"/     .send()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769920,"byte_end":11769935,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769940,"byte_end":11769956,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769961,"byte_end":11769973,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769978,"byte_end":11769985,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11769990,"byte_end":11769997,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11770700,"byte_end":11770711,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"bearer_auth","qualname":"<RequestBuilder>::bearer_auth","value":"pub fn bearer_auth<T>(Self, T) -> RequestBuilder where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Enable HTTP bearer authentication.\n","sig":null,"attributes":[{"value":"/ Enable HTTP bearer authentication.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11770650,"byte_end":11770688,"line_start":262,"line_end":262,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11770974,"byte_end":11770978,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"body","qualname":"<RequestBuilder>::body","value":"pub fn body<T: Into<Body>>(Self, T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the request body.\n","sig":null,"attributes":[{"value":"/ Set the request body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11770937,"byte_end":11770962,"line_start":271,"line_end":271,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11771439,"byte_end":11771446,"line_start":284,"line_end":284,"column_start":12,"column_end":19},"name":"timeout","qualname":"<RequestBuilder>::timeout","value":"pub fn timeout(Self, Duration) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enables a request timeout.","sig":null,"attributes":[{"value":"/ Enables a request timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11771164,"byte_end":11771194,"line_start":279,"line_end":279,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11771199,"byte_end":11771202,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The timeout is applied from when the request starts connecting until the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11771207,"byte_end":11771283,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ response body has finished. It affects only this request and overrides","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11771288,"byte_end":11771362,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/ the timeout configured using `ClientBuilder::timeout()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11771367,"byte_end":11771427,"line_start":283,"line_end":283,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773644,"byte_end":11773649,"line_start":347,"line_end":347,"column_start":12,"column_end":17},"name":"query","qualname":"<RequestBuilder>::query","value":"pub fn query<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Modify the query string of the URL.","sig":null,"attributes":[{"value":"/ Modify the query string of the URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11772753,"byte_end":11772792,"line_start":329,"line_end":329,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11772797,"byte_end":11772800,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Modifies the URL of this request, adding the parameters provided.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11772805,"byte_end":11772874,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ This method appends and does not overwrite. This means that it can","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11772879,"byte_end":11772949,"line_start":332,"line_end":332,"column_start":5,"column_end":75}},{"value":"/ be called multiple times and that existing query parameters are not","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11772954,"byte_end":11773025,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ overwritten if the same key is used. The key will simply show up","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773030,"byte_end":11773098,"line_start":334,"line_end":334,"column_start":5,"column_end":73}},{"value":"/ twice in the query string.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773103,"byte_end":11773133,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ Calling `.query(&[(\"foo\", \"a\"), (\"foo\", \"b\")])` gives `\"foo=a&foo=b\"`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773138,"byte_end":11773212,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773217,"byte_end":11773220,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773225,"byte_end":11773235,"line_start":338,"line_end":338,"column_start":5,"column_end":15}},{"value":"/ This method does not support serializing a single key-value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773240,"byte_end":11773303,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/ pair. Instead of using `.query((\"key\", \"val\"))`, use a sequence, such","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773308,"byte_end":11773381,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ as `.query(&[(\"key\", \"val\")])`. It's also possible to serialize structs","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773386,"byte_end":11773461,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ and maps into a key-value pair.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773466,"byte_end":11773501,"line_start":342,"line_end":342,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773506,"byte_end":11773509,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773514,"byte_end":11773526,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/ This method will fail if the object you provide cannot be serialized","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773531,"byte_end":11773603,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ into a query string.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11773608,"byte_end":11773632,"line_start":346,"line_end":346,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774406,"byte_end":11774413,"line_start":370,"line_end":370,"column_start":12,"column_end":19},"name":"version","qualname":"<RequestBuilder>::version","value":"pub fn version(Self, Version) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set HTTP version\n","sig":null,"attributes":[{"value":"/ Set HTTP version","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774374,"byte_end":11774394,"line_start":369,"line_end":369,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775367,"byte_end":11775371,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"form","qualname":"<RequestBuilder>::form","value":"pub fn form<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send a form body.","sig":null,"attributes":[{"value":"/ Send a form body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774579,"byte_end":11774600,"line_start":377,"line_end":377,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774605,"byte_end":11774608,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Sets the body to the url encoded serialization of the passed value,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774613,"byte_end":11774684,"line_start":379,"line_end":379,"column_start":5,"column_end":76}},{"value":"/ and also sets the `Content-Type: application/x-www-form-urlencoded`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774689,"byte_end":11774760,"line_start":380,"line_end":380,"column_start":5,"column_end":76}},{"value":"/ header.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774765,"byte_end":11774776,"line_start":381,"line_end":381,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774781,"byte_end":11774784,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774789,"byte_end":11774800,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774805,"byte_end":11774830,"line_start":384,"line_end":384,"column_start":5,"column_end":30}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774835,"byte_end":11774871,"line_start":385,"line_end":385,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774876,"byte_end":11774881,"line_start":386,"line_end":386,"column_start":5,"column_end":10}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774886,"byte_end":11774929,"line_start":387,"line_end":387,"column_start":5,"column_end":48}},{"value":"/ let mut params = HashMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774934,"byte_end":11774970,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ params.insert(\"lang\", \"rust\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11774975,"byte_end":11775009,"line_start":389,"line_end":389,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775014,"byte_end":11775017,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775022,"byte_end":11775062,"line_start":391,"line_end":391,"column_start":5,"column_end":45}},{"value":"/ let res = client.post(\"http://httpbin.org\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775067,"byte_end":11775114,"line_start":392,"line_end":392,"column_start":5,"column_end":52}},{"value":"/     .form(&params)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775119,"byte_end":11775141,"line_start":393,"line_end":393,"column_start":5,"column_end":27}},{"value":"/     .send()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775146,"byte_end":11775161,"line_start":394,"line_end":394,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775166,"byte_end":11775182,"line_start":395,"line_end":395,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775187,"byte_end":11775199,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775204,"byte_end":11775211,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775216,"byte_end":11775223,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775228,"byte_end":11775231,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775236,"byte_end":11775248,"line_start":400,"line_end":400,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775253,"byte_end":11775256,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This method fails if the passed value cannot be serialized into","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775261,"byte_end":11775328,"line_start":402,"line_end":402,"column_start":5,"column_end":72}},{"value":"/ url encoded format","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11775333,"byte_end":11775355,"line_start":403,"line_end":403,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776449,"byte_end":11776453,"line_start":436,"line_end":436,"column_start":12,"column_end":16},"name":"json","qualname":"<RequestBuilder>::json","value":"pub fn json<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send a JSON body.","sig":null,"attributes":[{"value":"/ Send a JSON body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776066,"byte_end":11776087,"line_start":424,"line_end":424,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776092,"byte_end":11776095,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776100,"byte_end":11776114,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776119,"byte_end":11776122,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `json` feature enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776127,"byte_end":11776181,"line_start":428,"line_end":428,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776186,"byte_end":11776189,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776194,"byte_end":11776206,"line_start":430,"line_end":430,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776211,"byte_end":11776214,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776219,"byte_end":11776295,"line_start":432,"line_end":432,"column_start":5,"column_end":81}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776300,"byte_end":11776356,"line_start":433,"line_end":433,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"json\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11776361,"byte_end":11776385,"line_start":434,"line_end":434,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777374,"byte_end":11777392,"line_start":463,"line_end":463,"column_start":12,"column_end":30},"name":"fetch_mode_no_cors","qualname":"<RequestBuilder>::fetch_mode_no_cors","value":"pub fn fetch_mode_no_cors(Self) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable CORS on fetching the request.","sig":null,"attributes":[{"value":"/ Disable CORS on fetching the request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777076,"byte_end":11777117,"line_start":454,"line_end":454,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777122,"byte_end":11777125,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # WASM","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777130,"byte_end":11777140,"line_start":456,"line_end":456,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777145,"byte_end":11777148,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This option is only effective with WebAssembly target.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777153,"byte_end":11777211,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777216,"byte_end":11777219,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ The [request mode][mdn] will be set to 'no-cors'.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777224,"byte_end":11777277,"line_start":460,"line_end":460,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777282,"byte_end":11777285,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/Request/mode","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777290,"byte_end":11777362,"line_start":462,"line_end":462,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777557,"byte_end":11777562,"line_start":469,"line_end":469,"column_start":12,"column_end":17},"name":"build","qualname":"<RequestBuilder>::build","value":"pub fn build(Self) -> crate::Result<Request>","parent":null,"children":[],"decl_id":null,"docs":" Build a `Request`, which can be inspected, modified and executed with\n `Client::execute()`.\n","sig":null,"attributes":[{"value":"/ Build a `Request`, which can be inspected, modified and executed with","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777443,"byte_end":11777516,"line_start":467,"line_end":467,"column_start":5,"column_end":78}},{"value":"/ `Client::execute()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777521,"byte_end":11777545,"line_start":468,"line_end":468,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778213,"byte_end":11778217,"line_start":494,"line_end":494,"column_start":12,"column_end":16},"name":"send","qualname":"<RequestBuilder>::send","value":"pub fn send(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Constructs the Request and sends it to the target URL, returning a\n future Response.","sig":null,"attributes":[{"value":"/ Constructs the Request and sends it to the target URL, returning a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777629,"byte_end":11777699,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/ future Response.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777704,"byte_end":11777724,"line_start":474,"line_end":474,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777729,"byte_end":11777732,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777737,"byte_end":11777749,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777754,"byte_end":11777757,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This method fails if there was an error while sending request,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777762,"byte_end":11777828,"line_start":478,"line_end":478,"column_start":5,"column_end":71}},{"value":"/ redirect loop was detected or redirect limit was exhausted.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777833,"byte_end":11777896,"line_start":479,"line_end":479,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777901,"byte_end":11777904,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777909,"byte_end":11777922,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777927,"byte_end":11777930,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777935,"byte_end":11777948,"line_start":483,"line_end":483,"column_start":5,"column_end":18}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777953,"byte_end":11777978,"line_start":484,"line_end":484,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777983,"byte_end":11777988,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11777993,"byte_end":11778036,"line_start":486,"line_end":486,"column_start":5,"column_end":48}},{"value":"/ let response = reqwest::Client::new()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778041,"byte_end":11778082,"line_start":487,"line_end":487,"column_start":5,"column_end":46}},{"value":"/     .get(\"https://hyper.rs\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778087,"byte_end":11778119,"line_start":488,"line_end":488,"column_start":5,"column_end":37}},{"value":"/     .send()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778124,"byte_end":11778139,"line_start":489,"line_end":489,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778144,"byte_end":11778160,"line_start":490,"line_end":490,"column_start":5,"column_end":21}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778165,"byte_end":11778177,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778182,"byte_end":11778189,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778194,"byte_end":11778201,"line_start":493,"line_end":493,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778996,"byte_end":11779005,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<RequestBuilder>::try_clone","value":"pub fn try_clone(&Self) -> Option<RequestBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to clone the RequestBuilder.","sig":null,"attributes":[{"value":"/ Attempt to clone the RequestBuilder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778436,"byte_end":11778476,"line_start":501,"line_end":501,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778481,"byte_end":11778484,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the RequestBuilder can not be cloned,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778489,"byte_end":11778552,"line_start":503,"line_end":503,"column_start":5,"column_end":68}},{"value":"/ i.e. if the request body is a stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778557,"byte_end":11778598,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778603,"byte_end":11778606,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778611,"byte_end":11778625,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778630,"byte_end":11778633,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778638,"byte_end":11778645,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778650,"byte_end":11778675,"line_start":509,"line_end":509,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778680,"byte_end":11778685,"line_start":510,"line_end":510,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778690,"byte_end":11778727,"line_start":511,"line_end":511,"column_start":5,"column_end":42}},{"value":"/ let client = reqwest::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778732,"byte_end":11778772,"line_start":512,"line_end":512,"column_start":5,"column_end":45}},{"value":"/ let builder = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778777,"byte_end":11778833,"line_start":513,"line_end":513,"column_start":5,"column_end":61}},{"value":"/     .body(\"from a &str!\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778838,"byte_end":11778868,"line_start":514,"line_end":514,"column_start":5,"column_end":35}},{"value":"/ let clone = builder.try_clone();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778873,"byte_end":11778909,"line_start":515,"line_end":515,"column_start":5,"column_end":41}},{"value":"/ assert!(clone.is_some());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778914,"byte_end":11778943,"line_start":516,"line_end":516,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778948,"byte_end":11778960,"line_start":517,"line_end":517,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778965,"byte_end":11778972,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11778977,"byte_end":11778984,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":991},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11796274,"byte_end":11796282,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"Response","qualname":"::async_impl::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"decl_id":null,"docs":" A Response to a submitted `Request`.\n","sig":null,"attributes":[{"value":"/ A Response to a submitted `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11796222,"byte_end":11796262,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797271,"byte_end":11797277,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"pub fn status(&Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the `StatusCode` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the `StatusCode` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797201,"byte_end":11797245,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797250,"byte_end":11797259,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797404,"byte_end":11797411,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"version","qualname":"<Response>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP `Version` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the HTTP `Version` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797332,"byte_end":11797378,"line_start":68,"line_end":68,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797383,"byte_end":11797392,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797531,"byte_end":11797538,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get the `Headers` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the `Headers` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797464,"byte_end":11797505,"line_start":74,"line_end":74,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797510,"byte_end":11797519,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797685,"byte_end":11797696,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Response>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the `Headers` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the `Headers` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797595,"byte_end":11797659,"line_start":80,"line_end":80,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797664,"byte_end":11797673,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11798060,"byte_end":11798074,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"content_length","qualname":"<Response>::content_length","value":"pub fn content_length(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the content-length of this response, if known.","sig":null,"attributes":[{"value":"/ Get the content-length of this response, if known.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797765,"byte_end":11797819,"line_start":86,"line_end":86,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797824,"byte_end":11797827,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Reasons it may not be known:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797832,"byte_end":11797864,"line_start":88,"line_end":88,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797869,"byte_end":11797872,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ - The server didn't send a `content-length` header.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797877,"byte_end":11797932,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/ - The response is compressed and automatically decoded (thus changing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11797937,"byte_end":11798010,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/   the actual decoded length).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11798015,"byte_end":11798048,"line_start":92,"line_end":92,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11798751,"byte_end":11798754,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"url","qualname":"<Response>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the final `Url` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the final `Url` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11798682,"byte_end":11798725,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11798730,"byte_end":11798739,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11798868,"byte_end":11798879,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Response>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address used to get this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the remote address used to get this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11798801,"byte_end":11798856,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799086,"byte_end":11799096,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Response>::extensions","value":"pub fn extensions(&Self) -> &http::Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the associated extensions.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799021,"byte_end":11799074,"line_start":125,"line_end":125,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799236,"byte_end":11799250,"line_start":131,"line_end":131,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<Response>::extensions_mut","value":"pub fn extensions_mut(&mut Self) -> &mut http::Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the associated extensions.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799163,"byte_end":11799224,"line_start":130,"line_end":130,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800019,"byte_end":11800023,"line_start":157,"line_end":157,"column_start":18,"column_end":22},"name":"text","qualname":"<Response>::text","value":"pub async fn text(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response text.","sig":null,"attributes":[{"value":"/ Get the full response text.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799350,"byte_end":11799381,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799386,"byte_end":11799389,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method decodes the response body with BOM sniffing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799394,"byte_end":11799453,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ and with malformed sequences replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799458,"byte_end":11799531,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ Encoding is determinated from the `charset` parameter of `Content-Type` header,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799536,"byte_end":11799619,"line_start":141,"line_end":141,"column_start":5,"column_end":88}},{"value":"/ and defaults to `utf-8` if not presented.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799624,"byte_end":11799669,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799674,"byte_end":11799677,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799682,"byte_end":11799695,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799700,"byte_end":11799703,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799708,"byte_end":11799715,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799720,"byte_end":11799784,"line_start":147,"line_end":147,"column_start":5,"column_end":69}},{"value":"/ let content = reqwest::get(\"http://httpbin.org/range/26\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799789,"byte_end":11799850,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/     .await?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799855,"byte_end":11799870,"line_start":149,"line_end":149,"column_start":5,"column_end":20}},{"value":"/     .text()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799875,"byte_end":11799890,"line_start":150,"line_end":150,"column_start":5,"column_end":20}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799895,"byte_end":11799911,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799916,"byte_end":11799919,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ println!(\"text: {:?}\", content);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799924,"byte_end":11799960,"line_start":153,"line_end":153,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799965,"byte_end":11799977,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799982,"byte_end":11799989,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11799994,"byte_end":11800001,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11801062,"byte_end":11801079,"line_start":184,"line_end":184,"column_start":18,"column_end":35},"name":"text_with_charset","qualname":"<Response>::text_with_charset","value":"pub async fn text_with_charset<'_>(Self, &'_ str) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response text given a specific encoding.","sig":null,"attributes":[{"value":"/ Get the full response text given a specific encoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800114,"byte_end":11800171,"line_start":161,"line_end":161,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800176,"byte_end":11800179,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This method decodes the response body with BOM sniffing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800184,"byte_end":11800243,"line_start":163,"line_end":163,"column_start":5,"column_end":64}},{"value":"/ and with malformed sequences replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800248,"byte_end":11800321,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/ You can provide a default encoding for decoding the raw message, while the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800326,"byte_end":11800404,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/ `charset` parameter of `Content-Type` header is still prioritized. For more information","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800409,"byte_end":11800500,"line_start":166,"line_end":166,"column_start":5,"column_end":96}},{"value":"/ about the possible encoding name, please go to [`encoding_rs`] docs.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800505,"byte_end":11800577,"line_start":167,"line_end":167,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800582,"byte_end":11800585,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [`encoding_rs`]: https://docs.rs/encoding_rs/0.8/encoding_rs/#relationship-with-windows-code-pages","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800590,"byte_end":11800692,"line_start":169,"line_end":169,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800697,"byte_end":11800700,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800705,"byte_end":11800718,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800723,"byte_end":11800726,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800731,"byte_end":11800738,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800743,"byte_end":11800807,"line_start":174,"line_end":174,"column_start":5,"column_end":69}},{"value":"/ let content = reqwest::get(\"http://httpbin.org/range/26\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800812,"byte_end":11800873,"line_start":175,"line_end":175,"column_start":5,"column_end":66}},{"value":"/     .await?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800878,"byte_end":11800893,"line_start":176,"line_end":176,"column_start":5,"column_end":20}},{"value":"/     .text_with_charset(\"utf-8\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800898,"byte_end":11800933,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800938,"byte_end":11800954,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800959,"byte_end":11800962,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ println!(\"text: {:?}\", content);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11800967,"byte_end":11801003,"line_start":180,"line_end":180,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11801008,"byte_end":11801020,"line_start":181,"line_end":181,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11801025,"byte_end":11801032,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11801037,"byte_end":11801044,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803215,"byte_end":11803219,"line_start":252,"line_end":252,"column_start":18,"column_end":22},"name":"json","qualname":"<Response>::json","value":"pub async fn json<T: DeserializeOwned>(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Try to deserialize the response body as JSON.","sig":null,"attributes":[{"value":"/ Try to deserialize the response body as JSON.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11801996,"byte_end":11802045,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802050,"byte_end":11802053,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802058,"byte_end":11802072,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802077,"byte_end":11802080,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `json` feature enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802085,"byte_end":11802139,"line_start":213,"line_end":213,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802144,"byte_end":11802147,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802152,"byte_end":11802166,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802171,"byte_end":11802174,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802179,"byte_end":11802186,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802191,"byte_end":11802218,"line_start":218,"line_end":218,"column_start":5,"column_end":32}},{"value":"/ # extern crate serde;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802223,"byte_end":11802248,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802253,"byte_end":11802258,"line_start":220,"line_end":220,"column_start":5,"column_end":10}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802263,"byte_end":11802288,"line_start":221,"line_end":221,"column_start":5,"column_end":30}},{"value":"/ # use serde::Deserialize;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802293,"byte_end":11802322,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802327,"byte_end":11802332,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ // This `derive` requires the `serde` dependency.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802337,"byte_end":11802390,"line_start":224,"line_end":224,"column_start":5,"column_end":58}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802395,"byte_end":11802421,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"/ struct Ip {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802426,"byte_end":11802441,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     origin: String,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802446,"byte_end":11802469,"line_start":227,"line_end":227,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802474,"byte_end":11802479,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802484,"byte_end":11802487,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # async fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802492,"byte_end":11802535,"line_start":230,"line_end":230,"column_start":5,"column_end":48}},{"value":"/ let ip = reqwest::get(\"http://httpbin.org/ip\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802540,"byte_end":11802590,"line_start":231,"line_end":231,"column_start":5,"column_end":55}},{"value":"/     .await?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802595,"byte_end":11802610,"line_start":232,"line_end":232,"column_start":5,"column_end":20}},{"value":"/     .json::<Ip>()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802615,"byte_end":11802636,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802641,"byte_end":11802657,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802662,"byte_end":11802665,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ println!(\"ip: {}\", ip.origin);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802670,"byte_end":11802704,"line_start":236,"line_end":236,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802709,"byte_end":11802721,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802726,"byte_end":11802733,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802738,"byte_end":11802743,"line_start":239,"line_end":239,"column_start":5,"column_end":10}},{"value":"/ # fn main() { }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802748,"byte_end":11802767,"line_start":240,"line_end":240,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802772,"byte_end":11802779,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802784,"byte_end":11802787,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802792,"byte_end":11802804,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802809,"byte_end":11802812,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the response body is not in JSON format","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802817,"byte_end":11802887,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ or it cannot be properly deserialized to target type `T`. For more","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802892,"byte_end":11802962,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/ details please see [`serde_json::from_reader`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11802967,"byte_end":11803018,"line_start":247,"line_end":247,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803023,"byte_end":11803026,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`serde_json::from_reader`]: https://docs.serde.rs/serde_json/fn.from_reader.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803031,"byte_end":11803116,"line_start":249,"line_end":249,"column_start":5,"column_end":90}},{"value":"cfg(feature = \"json\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803121,"byte_end":11803145,"line_start":250,"line_end":250,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803773,"byte_end":11803778,"line_start":273,"line_end":273,"column_start":18,"column_end":23},"name":"bytes","qualname":"<Response>::bytes","value":"pub async fn bytes(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the full response body as `Bytes`.","sig":null,"attributes":[{"value":"/ Get the full response body as `Bytes`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803389,"byte_end":11803431,"line_start":258,"line_end":258,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803436,"byte_end":11803439,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803444,"byte_end":11803457,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803462,"byte_end":11803465,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803470,"byte_end":11803477,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803482,"byte_end":11803546,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/ let bytes = reqwest::get(\"http://httpbin.org/ip\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803551,"byte_end":11803604,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/     .await?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803609,"byte_end":11803624,"line_start":265,"line_end":265,"column_start":5,"column_end":20}},{"value":"/     .bytes()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803629,"byte_end":11803645,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/     .await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803650,"byte_end":11803666,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803671,"byte_end":11803674,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ println!(\"bytes: {:?}\", bytes);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803679,"byte_end":11803714,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803719,"byte_end":11803731,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803736,"byte_end":11803743,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803748,"byte_end":11803755,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804345,"byte_end":11804350,"line_start":293,"line_end":293,"column_start":18,"column_end":23},"name":"chunk","qualname":"<Response>::chunk","value":"pub async fn chunk<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Stream a chunk of the response body.","sig":null,"attributes":[{"value":"/ Stream a chunk of the response body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803869,"byte_end":11803909,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803914,"byte_end":11803917,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ When the response body has been exhausted, this will return `None`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803922,"byte_end":11803993,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11803998,"byte_end":11804001,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804006,"byte_end":11804019,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804024,"byte_end":11804027,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804032,"byte_end":11804039,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ # async fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804044,"byte_end":11804108,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ let mut res = reqwest::get(\"https://hyper.rs\").await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804113,"byte_end":11804171,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804176,"byte_end":11804179,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ while let Some(chunk) = res.chunk().await? {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804184,"byte_end":11804232,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/     println!(\"Chunk: {:?}\", chunk);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804237,"byte_end":11804276,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804281,"byte_end":11804286,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804291,"byte_end":11804303,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804308,"byte_end":11804315,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11804320,"byte_end":11804327,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806010,"byte_end":11806026,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"error_for_status","qualname":"<Response>::error_for_status","value":"pub fn error_for_status(Self) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a response into an error if the server returned an error.","sig":null,"attributes":[{"value":"/ Turn a response into an error if the server returned an error.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805358,"byte_end":11805424,"line_start":331,"line_end":331,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805429,"byte_end":11805432,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805437,"byte_end":11805450,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805455,"byte_end":11805458,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805463,"byte_end":11805470,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Response;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805475,"byte_end":11805503,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/ fn on_response(res: Response) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805508,"byte_end":11805543,"line_start":337,"line_end":337,"column_start":5,"column_end":40}},{"value":"/     match res.error_for_status() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805548,"byte_end":11805586,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/         Ok(_res) => (),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805591,"byte_end":11805618,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805623,"byte_end":11805648,"line_start":340,"line_end":340,"column_start":5,"column_end":30}},{"value":"/             // asserting a 400 as an example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805653,"byte_end":11805701,"line_start":341,"line_end":341,"column_start":5,"column_end":53}},{"value":"/             // it could be any status between 400...599","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805706,"byte_end":11805765,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/             assert_eq!(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805770,"byte_end":11805797,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/                 err.status(),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805802,"byte_end":11805835,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/                 Some(reqwest::StatusCode::BAD_REQUEST)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805840,"byte_end":11805898,"line_start":345,"line_end":345,"column_start":5,"column_end":63}},{"value":"/             );","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805903,"byte_end":11805921,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805926,"byte_end":11805939,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805944,"byte_end":11805953,"line_start":348,"line_end":348,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805958,"byte_end":11805963,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805968,"byte_end":11805986,"line_start":350,"line_end":350,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11805991,"byte_end":11805998,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806932,"byte_end":11806952,"line_start":381,"line_end":381,"column_start":12,"column_end":32},"name":"error_for_status_ref","qualname":"<Response>::error_for_status_ref","value":"pub fn error_for_status_ref(&Self) -> crate::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a reference to a response into an error if the server returned an error.","sig":null,"attributes":[{"value":"/ Turn a reference to a response into an error if the server returned an error.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806260,"byte_end":11806341,"line_start":360,"line_end":360,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806346,"byte_end":11806349,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806354,"byte_end":11806367,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806372,"byte_end":11806375,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806380,"byte_end":11806387,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ # use reqwest::Response;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806392,"byte_end":11806420,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/ fn on_response(res: &Response) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806425,"byte_end":11806461,"line_start":366,"line_end":366,"column_start":5,"column_end":41}},{"value":"/     match res.error_for_status_ref() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806466,"byte_end":11806508,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/         Ok(_res) => (),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806513,"byte_end":11806540,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806545,"byte_end":11806570,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/             // asserting a 400 as an example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806575,"byte_end":11806623,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/             // it could be any status between 400...599","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806628,"byte_end":11806687,"line_start":371,"line_end":371,"column_start":5,"column_end":64}},{"value":"/             assert_eq!(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806692,"byte_end":11806719,"line_start":372,"line_end":372,"column_start":5,"column_end":32}},{"value":"/                 err.status(),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806724,"byte_end":11806757,"line_start":373,"line_end":373,"column_start":5,"column_end":38}},{"value":"/                 Some(reqwest::StatusCode::BAD_REQUEST)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806762,"byte_end":11806820,"line_start":374,"line_end":374,"column_start":5,"column_end":63}},{"value":"/             );","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806825,"byte_end":11806843,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806848,"byte_end":11806861,"line_start":376,"line_end":376,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806866,"byte_end":11806875,"line_start":377,"line_end":377,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806880,"byte_end":11806885,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806890,"byte_end":11806908,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11806913,"byte_end":11806920,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blocking","qualname":"::blocking","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1138},{"krate":0,"index":1380},{"krate":0,"index":1507},{"krate":0,"index":1606},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1664}],"decl_id":null,"docs":" A blocking Client API.","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7716,"byte_end":7751,"line_start":215,"line_end":215,"column_start":9,"column_end":44}},{"value":"cfg(feature = \"blocking\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9913,"byte_end":9941,"line_start":310,"line_end":310,"column_start":5,"column_end":33}},{"value":"/ A blocking Client API.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809248,"byte_end":11809274,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809275,"byte_end":11809278,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The blocking `Client` will block the current thread to execute, instead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809279,"byte_end":11809354,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ of returning futures that need to be executed on a runtime.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809355,"byte_end":11809418,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809419,"byte_end":11809422,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Conversely, the functionality in `reqwest::blocking` must *not* be executed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809423,"byte_end":11809502,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ within an async runtime, or it will panic when attempting to block. If","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809503,"byte_end":11809577,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ calling directly from an async function, consider using an async","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809578,"byte_end":11809646,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`reqwest::Client`][crate::Client] instead. If the immediate context is only","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809647,"byte_end":11809727,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ synchronous, but a transitive caller is async, consider changing that caller","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809728,"byte_end":11809808,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ to use [`tokio::task::spawn_blocking`] around the calls that need to block.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809809,"byte_end":11809888,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809889,"byte_end":11809892,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809893,"byte_end":11809907,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809908,"byte_end":11809911,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This requires the optional `blocking` feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809912,"byte_end":11809976,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809977,"byte_end":11809980,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Making a GET request","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11809981,"byte_end":11810007,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810008,"byte_end":11810011,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For a single request, you can use the [`get`](get) shortcut method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810012,"byte_end":11810083,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810084,"byte_end":11810087,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810088,"byte_end":11810099,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::{Error, Response};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810100,"byte_end":11810137,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810138,"byte_end":11810141,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810142,"byte_end":11810179,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let body = reqwest::blocking::get(\"https://www.rust-lang.org\")?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810180,"byte_end":11810247,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/     .text()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810248,"byte_end":11810265,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810266,"byte_end":11810269,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ println!(\"body = {:?}\", body);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810270,"byte_end":11810304,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810305,"byte_end":11810317,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810318,"byte_end":11810325,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810326,"byte_end":11810333,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810334,"byte_end":11810337,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Additionally, the blocking [`Response`](Response) struct implements Rust's","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810338,"byte_end":11810416,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ `Read` trait, so many useful standard library and third party crates will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810417,"byte_end":11810494,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ have convenience methods that take a `Response` anywhere `T: Read` is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810495,"byte_end":11810568,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ acceptable.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810569,"byte_end":11810584,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810585,"byte_end":11810588,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If you plan to perform multiple requests, it is best to create a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810589,"byte_end":11810667,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ [`Client`](Client) and reuse it, taking advantage of keep-alive connection","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810668,"byte_end":11810746,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ pooling.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810747,"byte_end":11810759,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810760,"byte_end":11810763,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Making POST requests (or setting request bodies)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810764,"byte_end":11810818,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810819,"byte_end":11810822,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ There are several ways you can set the body of a request. The basic one is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810823,"byte_end":11810901,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ by using the `body()` method of a [`RequestBuilder`](RequestBuilder). This lets you set the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810902,"byte_end":11810997,"line_start":45,"line_end":45,"column_start":1,"column_end":96}},{"value":"/ exact raw bytes of what the body should be. It accepts various types,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11810998,"byte_end":11811071,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ including `String`, `Vec<u8>`, and `File`. If you wish to pass a custom","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811072,"byte_end":11811147,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ Reader, you can use the `reqwest::blocking::Body::new()` constructor.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811148,"byte_end":11811221,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811222,"byte_end":11811225,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811226,"byte_end":11811237,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811238,"byte_end":11811263,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811264,"byte_end":11811269,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811270,"byte_end":11811307,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811308,"byte_end":11811358,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811359,"byte_end":11811411,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/     .body(\"the exact body that is sent\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811412,"byte_end":11811456,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811457,"byte_end":11811474,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811475,"byte_end":11811487,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811488,"byte_end":11811495,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811496,"byte_end":11811503,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811504,"byte_end":11811507,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## And More","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811508,"byte_end":11811523,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811524,"byte_end":11811527,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Most features available to the asynchronous `Client` are also available,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811528,"byte_end":11811604,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/ on the blocking `Client`, see those docs for more.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811605,"byte_end":11811659,"line_start":65,"line_end":65,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813316,"byte_end":11813320,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Body","qualname":"::blocking::body::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":2299}],"decl_id":null,"docs":" The body of a `Request`.","sig":null,"attributes":[{"value":"/ The body of a `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813004,"byte_end":11813032,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813033,"byte_end":11813036,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ In most cases, this is not needed directly, as the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813037,"byte_end":11813091,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ [`RequestBuilder.body`][builder] method uses `Into<Body>`, which allows","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813092,"byte_end":11813167,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ passing many things (like a string or vector of bytes).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813168,"byte_end":11813227,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813228,"byte_end":11813231,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [builder]: ./struct.RequestBuilder.html#method.body","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813232,"byte_end":11813287,"line_start":21,"line_end":21,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814472,"byte_end":11814475,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Body>::new","value":"pub fn new<R: Read + Send + 'static>(R) -> Body","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a `Body` from a reader.","sig":null,"attributes":[{"value":"/ Instantiate a `Body` from a reader.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813358,"byte_end":11813397,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813402,"byte_end":11813405,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813410,"byte_end":11813420,"line_start":30,"line_end":30,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813425,"byte_end":11813428,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ While allowing for many types to be used, these bodies do not have","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813433,"byte_end":11813503,"line_start":32,"line_end":32,"column_start":5,"column_end":75}},{"value":"/ a way to reset to the beginning and be reused. This means that when","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813508,"byte_end":11813579,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ encountering a 307 or 308 status code, instead of repeating the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813584,"byte_end":11813651,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/ request at the new location, the `Response` will be returned with","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813656,"byte_end":11813725,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ the redirect status code set.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813730,"byte_end":11813763,"line_start":36,"line_end":36,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813768,"byte_end":11813771,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813776,"byte_end":11813787,"line_start":38,"line_end":38,"column_start":5,"column_end":16}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813792,"byte_end":11813816,"line_start":39,"line_end":39,"column_start":5,"column_end":29}},{"value":"/ # use reqwest::blocking::Body;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813821,"byte_end":11813855,"line_start":40,"line_end":40,"column_start":5,"column_end":39}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813860,"byte_end":11813914,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"/ let file = File::open(\"national_secrets.txt\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813919,"byte_end":11813970,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/ let body = Body::new(file);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813975,"byte_end":11814006,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814011,"byte_end":11814023,"line_start":44,"line_end":44,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814028,"byte_end":11814035,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814040,"byte_end":11814047,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814052,"byte_end":11814055,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If you have a set of bytes, like `String` or `Vec<u8>`, using the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814060,"byte_end":11814129,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ `From` implementations for `Body` will store the data in a manner","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814134,"byte_end":11814203,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ it can be reused.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814208,"byte_end":11814229,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814234,"byte_end":11814237,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814242,"byte_end":11814253,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::blocking::Body;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814258,"byte_end":11814292,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814297,"byte_end":11814351,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/ let s = \"A stringy body\";","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814356,"byte_end":11814385,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/ let body = Body::from(s);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814390,"byte_end":11814419,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814424,"byte_end":11814436,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814441,"byte_end":11814448,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814453,"byte_end":11814460,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815176,"byte_end":11815181,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"sized","qualname":"<Body>::sized","value":"pub fn sized<R: Read + Send + 'static>(R, u64) -> Body","parent":null,"children":[],"decl_id":null,"docs":" Create a `Body` from a `Read` where the size is known in advance\n but the data should not be fully loaded into memory. This will\n set the `Content-Length` header and stream from the `Read`.","sig":null,"attributes":[{"value":"/ Create a `Body` from a `Read` where the size is known in advance","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814616,"byte_end":11814684,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ but the data should not be fully loaded into memory. This will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814689,"byte_end":11814755,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/ set the `Content-Length` header and stream from the `Read`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814760,"byte_end":11814823,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814828,"byte_end":11814831,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814836,"byte_end":11814847,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814852,"byte_end":11814876,"line_start":71,"line_end":71,"column_start":5,"column_end":29}},{"value":"/ # use reqwest::blocking::Body;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814881,"byte_end":11814915,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814920,"byte_end":11814974,"line_start":73,"line_end":73,"column_start":5,"column_end":59}},{"value":"/ let file = File::open(\"a_large_file.txt\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11814979,"byte_end":11815026,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/ let file_size = file.metadata()?.len();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815031,"byte_end":11815074,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"/ let body = Body::sized(file, file_size);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815079,"byte_end":11815123,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815128,"byte_end":11815140,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815145,"byte_end":11815152,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815157,"byte_end":11815164,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815486,"byte_end":11815494,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Body>::as_bytes","value":"pub fn as_bytes(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the body as a byte slice if the body is already buffered in\n memory. For streamed requests this method returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns the body as a byte slice if the body is already buffered in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815337,"byte_end":11815408,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ memory. For streamed requests this method returns `None`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815413,"byte_end":11815474,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815981,"byte_end":11815987,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Body>::buffer","value":"pub fn buffer(&mut Self) -> Result<&[u8], crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts streamed requests to their buffered equivalent and\n returns a reference to the buffer. If the request is already\n buffered, this has no effect.","sig":null,"attributes":[{"value":"/ Converts streamed requests to their buffered equivalent and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815668,"byte_end":11815731,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/ returns a reference to the buffer. If the request is already","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815736,"byte_end":11815800,"line_start":96,"line_end":96,"column_start":5,"column_end":69}},{"value":"/ buffered, this has no effect.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815805,"byte_end":11815838,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815843,"byte_end":11815846,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Be aware that for large requests this method is expensive","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815851,"byte_end":11815912,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ and may cause your program to run out of memory.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11815917,"byte_end":11815969,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2302},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824568,"byte_end":11824574,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"Client","qualname":"::blocking::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":2303}],"decl_id":null,"docs":" A `Client` to make Requests with.","sig":null,"attributes":[{"value":"/ A `Client` to make Requests with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11823921,"byte_end":11823958,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11823959,"byte_end":11823962,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The Client has various configuration values to tweak, but the defaults","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11823963,"byte_end":11824037,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ are set to what is usually the most commonly desired value. To configure a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824038,"byte_end":11824116,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ `Client`, use `Client::builder()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824117,"byte_end":11824155,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824156,"byte_end":11824159,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The `Client` holds a connection pool internally, so it is advised that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824160,"byte_end":11824234,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ you create one and **reuse** it.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824235,"byte_end":11824271,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824272,"byte_end":11824275,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824276,"byte_end":11824290,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824291,"byte_end":11824294,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824295,"byte_end":11824306,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use reqwest::blocking::Client;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824307,"byte_end":11824341,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824342,"byte_end":11824347,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824348,"byte_end":11824394,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ let client = Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824395,"byte_end":11824426,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ let resp = client.get(\"http://httpbin.org/\").send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824427,"byte_end":11824484,"line_start":43,"line_end":43,"column_start":1,"column_end":58}},{"value":"/ #   drop(resp);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824485,"byte_end":11824504,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ #   Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824505,"byte_end":11824519,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824520,"byte_end":11824527,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824528,"byte_end":11824531,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824532,"byte_end":11824539,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824965,"byte_end":11824978,"line_start":69,"line_end":69,"column_start":12,"column_end":25},"name":"ClientBuilder","qualname":"::blocking::client::ClientBuilder","value":"ClientBuilder {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"decl_id":null,"docs":" A `ClientBuilder` can be used to create a `Client` with  custom configuration.","sig":null,"attributes":[{"value":"/ A `ClientBuilder` can be used to create a `Client` with  custom configuration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824605,"byte_end":11824687,"line_start":54,"line_end":54,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824688,"byte_end":11824691,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824692,"byte_end":11824705,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824706,"byte_end":11824709,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824710,"byte_end":11824717,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ # fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824718,"byte_end":11824764,"line_start":59,"line_end":59,"column_start":1,"column_end":47}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824765,"byte_end":11824793,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824794,"byte_end":11824797,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let client = reqwest::blocking::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824798,"byte_end":11824851,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824852,"byte_end":11824893,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824894,"byte_end":11824912,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824913,"byte_end":11824925,"line_start":65,"line_end":65,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824926,"byte_end":11824933,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824934,"byte_end":11824941,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11824942,"byte_end":11824953,"line_start":68,"line_end":68,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825264,"byte_end":11825267,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<ClientBuilder>::new","value":"pub fn new() -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `ClientBuilder`.","sig":null,"attributes":[{"value":"/ Constructs a new `ClientBuilder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825158,"byte_end":11825195,"line_start":81,"line_end":81,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825200,"byte_end":11825203,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Client::builder()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825208,"byte_end":11825252,"line_start":83,"line_end":83,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825839,"byte_end":11825844,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"build","qualname":"<ClientBuilder>::build","value":"pub fn build(Self) -> crate::Result<Client>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Client` that uses this `ClientBuilder` configuration.","sig":null,"attributes":[{"value":"/ Returns a `Client` that uses this `ClientBuilder` configuration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825428,"byte_end":11825496,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825501,"byte_end":11825504,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825509,"byte_end":11825521,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825526,"byte_end":11825529,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This method fails if TLS backend cannot be initialized, or the resolver","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825534,"byte_end":11825609,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ cannot load the system configuration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825614,"byte_end":11825655,"line_start":96,"line_end":96,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825660,"byte_end":11825663,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825668,"byte_end":11825680,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825685,"byte_end":11825688,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This method panics if called from within an async runtime. See docs on","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825693,"byte_end":11825767,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ [`reqwest::blocking`][crate::blocking] for details.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825772,"byte_end":11825827,"line_start":101,"line_end":101,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826596,"byte_end":11826606,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"user_agent","qualname":"<ClientBuilder>::user_agent","value":"pub fn user_agent<V>(Self, V) -> ClientBuilder where V: TryInto<HeaderValue>,\nV::Error: Into<http::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `User-Agent` header to be used by this client.","sig":null,"attributes":[{"value":"/ Sets the `User-Agent` header to be used by this client.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825989,"byte_end":11826048,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826053,"byte_end":11826056,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826061,"byte_end":11826074,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826079,"byte_end":11826082,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826087,"byte_end":11826098,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ # fn doc() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826103,"byte_end":11826149,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/ // Name your user agent after your app?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826154,"byte_end":11826197,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ static APP_USER_AGENT: &str = concat!(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826202,"byte_end":11826244,"line_start":115,"line_end":115,"column_start":5,"column_end":47}},{"value":"/     env!(\"CARGO_PKG_NAME\"),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826249,"byte_end":11826280,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/     \"/\",","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826285,"byte_end":11826297,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/     env!(\"CARGO_PKG_VERSION\"),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826302,"byte_end":11826336,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826341,"byte_end":11826347,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826352,"byte_end":11826355,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let client = reqwest::blocking::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826360,"byte_end":11826413,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/     .user_agent(APP_USER_AGENT)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826418,"byte_end":11826453,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826458,"byte_end":11826476,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\").send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826481,"byte_end":11826543,"line_start":124,"line_end":124,"column_start":5,"column_end":67}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826548,"byte_end":11826560,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826565,"byte_end":11826572,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826577,"byte_end":11826584,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828383,"byte_end":11828398,"line_start":180,"line_end":180,"column_start":12,"column_end":27},"name":"default_headers","qualname":"<ClientBuilder>::default_headers","value":"pub fn default_headers(Self, header::HeaderMap) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the default headers for every request.","sig":null,"attributes":[{"value":"/ Sets the default headers for every request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826802,"byte_end":11826849,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826854,"byte_end":11826857,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826862,"byte_end":11826875,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826880,"byte_end":11826883,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826888,"byte_end":11826899,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826904,"byte_end":11826928,"line_start":141,"line_end":141,"column_start":5,"column_end":29}},{"value":"/ # fn build_client() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826933,"byte_end":11826988,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/ let mut headers = header::HeaderMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11826993,"byte_end":11827040,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/ headers.insert(\"X-MY-HEADER\", header::HeaderValue::from_static(\"value\"));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827045,"byte_end":11827122,"line_start":144,"line_end":144,"column_start":5,"column_end":82}},{"value":"/ headers.insert(header::AUTHORIZATION, header::HeaderValue::from_static(\"secret\"));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827127,"byte_end":11827213,"line_start":145,"line_end":145,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827218,"byte_end":11827221,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ // Consider marking security-sensitive headers with `set_sensitive`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827226,"byte_end":11827298,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ let mut auth_value = header::HeaderValue::from_static(\"secret\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827303,"byte_end":11827371,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/ auth_value.set_sensitive(true);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827376,"byte_end":11827411,"line_start":149,"line_end":149,"column_start":5,"column_end":40}},{"value":"/ headers.insert(header::AUTHORIZATION, auth_value);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827416,"byte_end":11827470,"line_start":150,"line_end":150,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827475,"byte_end":11827478,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827483,"byte_end":11827510,"line_start":152,"line_end":152,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::blocking::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827515,"byte_end":11827568,"line_start":153,"line_end":153,"column_start":5,"column_end":58}},{"value":"/     .default_headers(headers)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827573,"byte_end":11827606,"line_start":154,"line_end":154,"column_start":5,"column_end":38}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827611,"byte_end":11827629,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\").send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827634,"byte_end":11827696,"line_start":156,"line_end":156,"column_start":5,"column_end":67}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827701,"byte_end":11827713,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827718,"byte_end":11827725,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827730,"byte_end":11827737,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827742,"byte_end":11827745,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Override the default headers:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827750,"byte_end":11827783,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827788,"byte_end":11827791,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827796,"byte_end":11827807,"line_start":163,"line_end":163,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827812,"byte_end":11827836,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ # fn build_client() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827841,"byte_end":11827896,"line_start":165,"line_end":165,"column_start":5,"column_end":60}},{"value":"/ let mut headers = header::HeaderMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827901,"byte_end":11827948,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ headers.insert(\"X-MY-HEADER\", header::HeaderValue::from_static(\"value\"));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11827953,"byte_end":11828030,"line_start":167,"line_end":167,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828035,"byte_end":11828038,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828043,"byte_end":11828070,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::blocking::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828075,"byte_end":11828128,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/     .default_headers(headers)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828133,"byte_end":11828166,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828171,"byte_end":11828189,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ let res = client","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828194,"byte_end":11828214,"line_start":173,"line_end":173,"column_start":5,"column_end":25}},{"value":"/     .get(\"https://www.rust-lang.org\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828219,"byte_end":11828260,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/     .header(\"X-MY-HEADER\", \"new_value\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828265,"byte_end":11828308,"line_start":175,"line_end":175,"column_start":5,"column_end":48}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828313,"byte_end":11828330,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828335,"byte_end":11828347,"line_start":177,"line_end":177,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828352,"byte_end":11828359,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11828364,"byte_end":11828371,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833225,"byte_end":11833232,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"no_gzip","qualname":"<ClientBuilder>::no_gzip","value":"pub fn no_gzip(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body gzip decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body gzip decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11832920,"byte_end":11832970,"line_start":285,"line_end":285,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11832975,"byte_end":11832978,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `gzip` feature is not enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11832983,"byte_end":11833057,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ This can be used to ensure a `Client` doesn't use gzip decompression","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833062,"byte_end":11833134,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"/ even if another dependency were to enable the optional `gzip` feature.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833139,"byte_end":11833213,"line_start":289,"line_end":289,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833631,"byte_end":11833640,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"no_brotli","qualname":"<ClientBuilder>::no_brotli","value":"pub fn no_brotli(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body brotli decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body brotli decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833318,"byte_end":11833370,"line_start":294,"line_end":294,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833375,"byte_end":11833378,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `brotli` feature is not enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833383,"byte_end":11833459,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ This can be used to ensure a `Client` doesn't use brotli decompression","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833464,"byte_end":11833538,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ even if another dependency were to enable the optional `brotli` feature.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833543,"byte_end":11833619,"line_start":298,"line_end":298,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834045,"byte_end":11834055,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"no_deflate","qualname":"<ClientBuilder>::no_deflate","value":"pub fn no_deflate(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disable auto response body deflate decompression.","sig":null,"attributes":[{"value":"/ Disable auto response body deflate decompression.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833728,"byte_end":11833781,"line_start":303,"line_end":303,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833786,"byte_end":11833789,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `deflate` feature is not enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833794,"byte_end":11833871,"line_start":305,"line_end":305,"column_start":5,"column_end":82}},{"value":"/ This can be used to ensure a `Client` doesn't use deflate decompression","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833876,"byte_end":11833951,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ even if another dependency were to enable the optional `deflate` feature.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11833956,"byte_end":11834033,"line_start":307,"line_end":307,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834295,"byte_end":11834303,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"redirect","qualname":"<ClientBuilder>::redirect","value":"pub fn redirect(Self, redirect::Policy) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set a `redirect::Policy` for this client.","sig":null,"attributes":[{"value":"/ Set a `redirect::Policy` for this client.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834169,"byte_end":11834214,"line_start":314,"line_end":314,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834219,"byte_end":11834222,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Default will follow redirects up to a maximum of 10.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834227,"byte_end":11834283,"line_start":316,"line_end":316,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834538,"byte_end":11834545,"line_start":324,"line_end":324,"column_start":12,"column_end":19},"name":"referer","qualname":"<ClientBuilder>::referer","value":"pub fn referer(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable automatic setting of the `Referer` header.","sig":null,"attributes":[{"value":"/ Enable or disable automatic setting of the `Referer` header.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834427,"byte_end":11834491,"line_start":321,"line_end":321,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834496,"byte_end":11834499,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834504,"byte_end":11834526,"line_start":323,"line_end":323,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834858,"byte_end":11834863,"line_start":335,"line_end":335,"column_start":12,"column_end":17},"name":"proxy","qualname":"<ClientBuilder>::proxy","value":"pub fn proxy(Self, Proxy) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a `Proxy` to the list of proxies the `Client` will use.","sig":null,"attributes":[{"value":"/ Add a `Proxy` to the list of proxies the `Client` will use.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834673,"byte_end":11834736,"line_start":330,"line_end":330,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834741,"byte_end":11834744,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834749,"byte_end":11834759,"line_start":332,"line_end":332,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834764,"byte_end":11834767,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Adding a proxy will disable the automatic usage of the \"system\" proxy.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834772,"byte_end":11834846,"line_start":334,"line_end":334,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835124,"byte_end":11835132,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"no_proxy","qualname":"<ClientBuilder>::no_proxy","value":"pub fn no_proxy(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Clear all `Proxies`, so `Client` will use no proxy anymore.","sig":null,"attributes":[{"value":"/ Clear all `Proxies`, so `Client` will use no proxy anymore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11834971,"byte_end":11835034,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835039,"byte_end":11835042,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This also disables the automatic usage of the \"system\" proxy.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835047,"byte_end":11835112,"line_start":341,"line_end":341,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835418,"byte_end":11835425,"line_start":353,"line_end":353,"column_start":12,"column_end":19},"name":"timeout","qualname":"<ClientBuilder>::timeout","value":"pub fn timeout<T>(Self, T) -> ClientBuilder where T: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout for connect, read and write operations of a `Client`.","sig":null,"attributes":[{"value":"/ Set a timeout for connect, read and write operations of a `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835248,"byte_end":11835319,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835324,"byte_end":11835327,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Default is 30 seconds.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835332,"byte_end":11835358,"line_start":350,"line_end":350,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835363,"byte_end":11835366,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835371,"byte_end":11835406,"line_start":352,"line_end":352,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835697,"byte_end":11835712,"line_start":364,"line_end":364,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<ClientBuilder>::connect_timeout","value":"pub fn connect_timeout<T>(Self, T) -> ClientBuilder where\nT: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set a timeout for only the connect phase of a `Client`.","sig":null,"attributes":[{"value":"/ Set a timeout for only the connect phase of a `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835591,"byte_end":11835650,"line_start":361,"line_end":361,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835655,"byte_end":11835658,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835663,"byte_end":11835685,"line_start":363,"line_end":363,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836252,"byte_end":11836270,"line_start":382,"line_end":382,"column_start":12,"column_end":30},"name":"connection_verbose","qualname":"<ClientBuilder>::connection_verbose","value":"pub fn connection_verbose(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set whether connections should emit verbose logs.","sig":null,"attributes":[{"value":"/ Set whether connections should emit verbose logs.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11835996,"byte_end":11836049,"line_start":376,"line_end":376,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836054,"byte_end":11836057,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Enabling this option will emit [log][] messages at the `TRACE` level","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836062,"byte_end":11836134,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ for read and write operations on connections.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836139,"byte_end":11836188,"line_start":379,"line_end":379,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836193,"byte_end":11836196,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ [log]: https://crates.io/crates/log","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836201,"byte_end":11836240,"line_start":381,"line_end":381,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836576,"byte_end":11836593,"line_start":393,"line_end":393,"column_start":12,"column_end":29},"name":"pool_idle_timeout","qualname":"<ClientBuilder>::pool_idle_timeout","value":"pub fn pool_idle_timeout<D>(Self, D) -> ClientBuilder where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set an optional timeout for idle sockets being kept-alive.","sig":null,"attributes":[{"value":"/ Set an optional timeout for idle sockets being kept-alive.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836415,"byte_end":11836477,"line_start":388,"line_end":388,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836482,"byte_end":11836485,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836490,"byte_end":11836525,"line_start":390,"line_end":390,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836530,"byte_end":11836533,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Default is 90 seconds.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836538,"byte_end":11836564,"line_start":392,"line_end":392,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836830,"byte_end":11836852,"line_start":401,"line_end":401,"column_start":12,"column_end":34},"name":"pool_max_idle_per_host","qualname":"<ClientBuilder>::pool_max_idle_per_host","value":"pub fn pool_max_idle_per_host(Self, usize) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection per host allowed in the pool.\n","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection per host allowed in the pool.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836752,"byte_end":11836818,"line_start":400,"line_end":400,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837037,"byte_end":11837061,"line_start":406,"line_end":406,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<ClientBuilder>::http1_title_case_headers","value":"pub fn http1_title_case_headers(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send headers as title case instead of lowercase.\n","sig":null,"attributes":[{"value":"/ Send headers as title case instead of lowercase.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11836973,"byte_end":11837025,"line_start":405,"line_end":405,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837196,"byte_end":11837206,"line_start":411,"line_end":411,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<ClientBuilder>::http1_only","value":"pub fn http1_only(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Only use HTTP/1.\n","sig":null,"attributes":[{"value":"/ Only use HTTP/1.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837164,"byte_end":11837184,"line_start":410,"line_end":410,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837335,"byte_end":11837351,"line_start":416,"line_end":416,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<ClientBuilder>::http09_responses","value":"pub fn http09_responses(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Allow HTTP/0.9 responses\n","sig":null,"attributes":[{"value":"/ Allow HTTP/0.9 responses","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837295,"byte_end":11837323,"line_start":415,"line_end":415,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837478,"byte_end":11837499,"line_start":421,"line_end":421,"column_start":12,"column_end":33},"name":"http2_prior_knowledge","qualname":"<ClientBuilder>::http2_prior_knowledge","value":"pub fn http2_prior_knowledge(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Only use HTTP/2.\n","sig":null,"attributes":[{"value":"/ Only use HTTP/2.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837446,"byte_end":11837466,"line_start":420,"line_end":420,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837797,"byte_end":11837829,"line_start":428,"line_end":428,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<ClientBuilder>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the `SETTINGS_INITIAL_WINDOW_SIZE` option for HTTP2 stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the `SETTINGS_INITIAL_WINDOW_SIZE` option for HTTP2 stream-level flow control.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837599,"byte_end":11837686,"line_start":425,"line_end":425,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837691,"byte_end":11837694,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Default is currently 65,535 but may change internally to optimize for common uses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837699,"byte_end":11837785,"line_start":427,"line_end":427,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838137,"byte_end":11838173,"line_start":435,"line_end":435,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<ClientBuilder>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11837970,"byte_end":11838026,"line_start":432,"line_end":432,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838031,"byte_end":11838034,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Default is currently 65,535 but may change internally to optimize for common uses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838039,"byte_end":11838125,"line_start":434,"line_end":434,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838528,"byte_end":11838549,"line_start":443,"line_end":443,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<ClientBuilder>::http2_adaptive_window","value":"pub fn http2_adaptive_window(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838318,"byte_end":11838367,"line_start":439,"line_end":439,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838372,"byte_end":11838375,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in `http2_initial_stream_window_size` and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838380,"byte_end":11838468,"line_start":441,"line_end":441,"column_start":5,"column_end":93}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838473,"byte_end":11838516,"line_start":442,"line_end":442,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838831,"byte_end":11838851,"line_start":450,"line_end":450,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<ClientBuilder>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\nimpl Into<Option<u32>>) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838671,"byte_end":11838720,"line_start":447,"line_end":447,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838725,"byte_end":11838728,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Default is currently 16,384 but may change internally to optimize for common uses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11838733,"byte_end":11838819,"line_start":449,"line_end":449,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839097,"byte_end":11839108,"line_start":459,"line_end":459,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<ClientBuilder>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set whether sockets have `SO_NODELAY` enabled.","sig":null,"attributes":[{"value":"/ Set whether sockets have `SO_NODELAY` enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839000,"byte_end":11839050,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839055,"byte_end":11839058,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839063,"byte_end":11839085,"line_start":458,"line_end":458,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839538,"byte_end":11839551,"line_start":474,"line_end":474,"column_start":12,"column_end":25},"name":"local_address","qualname":"<ClientBuilder>::local_address","value":"pub fn local_address<T>(Self, T) -> ClientBuilder where\nT: Into<Option<IpAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Bind to a local IP Address.","sig":null,"attributes":[{"value":"/ Bind to a local IP Address.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839225,"byte_end":11839256,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839261,"byte_end":11839264,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839269,"byte_end":11839282,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839287,"byte_end":11839290,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839295,"byte_end":11839302,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ use std::net::IpAddr;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839307,"byte_end":11839332,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/ let local_addr = IpAddr::from([12, 4, 1, 8]);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839337,"byte_end":11839386,"line_start":469,"line_end":469,"column_start":5,"column_end":54}},{"value":"/ let client = reqwest::blocking::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839391,"byte_end":11839444,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/     .local_address(local_addr)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839449,"byte_end":11839483,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/     .build().unwrap();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839488,"byte_end":11839514,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839519,"byte_end":11839526,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839854,"byte_end":11839867,"line_start":484,"line_end":484,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<ClientBuilder>::tcp_keepalive","value":"pub fn tcp_keepalive<D>(Self, D) -> ClientBuilder where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839711,"byte_end":11839787,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839792,"byte_end":11839795,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ If `None`, the option will not be set.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11839800,"byte_end":11839842,"line_start":483,"line_end":483,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841228,"byte_end":11841248,"line_start":533,"line_end":533,"column_start":12,"column_end":32},"name":"add_root_certificate","qualname":"<ClientBuilder>::add_root_certificate","value":"pub fn add_root_certificate(Self, Certificate) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a custom root certificate.","sig":null,"attributes":[{"value":"/ Add a custom root certificate.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840047,"byte_end":11840081,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840086,"byte_end":11840089,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This allows connecting to a server that has a self-signed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840094,"byte_end":11840155,"line_start":495,"line_end":495,"column_start":5,"column_end":66}},{"value":"/ certificate for example. This **does not** replace the existing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840160,"byte_end":11840227,"line_start":496,"line_end":496,"column_start":5,"column_end":72}},{"value":"/ trusted store.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840232,"byte_end":11840250,"line_start":497,"line_end":497,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840255,"byte_end":11840258,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840263,"byte_end":11840276,"line_start":499,"line_end":499,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840281,"byte_end":11840284,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840289,"byte_end":11840296,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840301,"byte_end":11840325,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840330,"byte_end":11840354,"line_start":503,"line_end":503,"column_start":5,"column_end":29}},{"value":"/ # fn build_client() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840359,"byte_end":11840426,"line_start":504,"line_end":504,"column_start":5,"column_end":72}},{"value":"/ // read a local binary DER encoded certificate","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840431,"byte_end":11840481,"line_start":505,"line_end":505,"column_start":5,"column_end":55}},{"value":"/ let der = std::fs::read(\"my-cert.der\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840486,"byte_end":11840530,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840535,"byte_end":11840538,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ // create a certificate","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840543,"byte_end":11840570,"line_start":508,"line_end":508,"column_start":5,"column_end":32}},{"value":"/ let cert = reqwest::Certificate::from_der(&der)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840575,"byte_end":11840628,"line_start":509,"line_end":509,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840633,"byte_end":11840636,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ // get a client builder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840641,"byte_end":11840668,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/ let client = reqwest::blocking::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840673,"byte_end":11840726,"line_start":512,"line_end":512,"column_start":5,"column_end":58}},{"value":"/     .add_root_certificate(cert)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840731,"byte_end":11840766,"line_start":513,"line_end":513,"column_start":5,"column_end":40}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840771,"byte_end":11840789,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ # drop(client);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840794,"byte_end":11840813,"line_start":515,"line_end":515,"column_start":5,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840818,"byte_end":11840830,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840835,"byte_end":11840842,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840847,"byte_end":11840854,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840859,"byte_end":11840862,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840867,"byte_end":11840881,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840886,"byte_end":11840889,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840894,"byte_end":11840975,"line_start":522,"line_end":522,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11840980,"byte_end":11841006,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841011,"byte_end":11841036,"line_start":524,"line_end":524,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841915,"byte_end":11841938,"line_start":554,"line_end":554,"column_start":12,"column_end":35},"name":"tls_built_in_root_certs","qualname":"<ClientBuilder>::tls_built_in_root_certs","value":"pub fn tls_built_in_root_certs(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Controls the use of built-in system certificates during certificate validation.\n         \n Defaults to `true` -- built-in system certs will be used.","sig":null,"attributes":[{"value":"/ Controls the use of built-in system certificates during certificate validation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841375,"byte_end":11841458,"line_start":537,"line_end":537,"column_start":5,"column_end":88}},{"value":"/         ","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841463,"byte_end":11841475,"line_start":538,"line_end":538,"column_start":5,"column_end":17}},{"value":"/ Defaults to `true` -- built-in system certs will be used.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841480,"byte_end":11841541,"line_start":539,"line_end":539,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841546,"byte_end":11841549,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841554,"byte_end":11841568,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841573,"byte_end":11841576,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841581,"byte_end":11841662,"line_start":543,"line_end":543,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841667,"byte_end":11841693,"line_start":544,"line_end":544,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11841698,"byte_end":11841723,"line_start":545,"line_end":545,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11842467,"byte_end":11842475,"line_start":566,"line_end":566,"column_start":12,"column_end":20},"name":"identity","qualname":"<ClientBuilder>::identity","value":"pub fn identity(Self, Identity) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the identity to be used for client certificate authentication.","sig":null,"attributes":[{"value":"/ Sets the identity to be used for client certificate authentication.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11842099,"byte_end":11842170,"line_start":558,"line_end":558,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11842175,"byte_end":11842178,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11842183,"byte_end":11842197,"line_start":560,"line_end":560,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11842202,"byte_end":11842205,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `native-tls` or `rustls-tls(-...)` feature to be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11842210,"byte_end":11842289,"line_start":562,"line_end":562,"column_start":5,"column_end":84}},{"value":"/ enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11842294,"byte_end":11842306,"line_start":563,"line_end":563,"column_start":5,"column_end":17}},{"value":"cfg(any(feature = \"native-tls\", feature = \"__rustls\"))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11842311,"byte_end":11842368,"line_start":564,"line_end":564,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844053,"byte_end":11844080,"line_start":610,"line_end":610,"column_start":12,"column_end":39},"name":"danger_accept_invalid_certs","qualname":"<ClientBuilder>::danger_accept_invalid_certs","value":"pub fn danger_accept_invalid_certs(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Controls the use of certificate validation.","sig":null,"attributes":[{"value":"/ Controls the use of certificate validation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843397,"byte_end":11843444,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843449,"byte_end":11843452,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843457,"byte_end":11843481,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843486,"byte_end":11843489,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843494,"byte_end":11843507,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843512,"byte_end":11843515,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ You should think very carefully before using this method. If","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843520,"byte_end":11843584,"line_start":596,"line_end":596,"column_start":5,"column_end":69}},{"value":"/ invalid certificates are trusted, *any* certificate for *any* site","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843589,"byte_end":11843659,"line_start":597,"line_end":597,"column_start":5,"column_end":75}},{"value":"/ will be trusted for use. This includes expired certificates. This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843664,"byte_end":11843733,"line_start":598,"line_end":598,"column_start":5,"column_end":74}},{"value":"/ introduces significant vulnerabilities, and should only be used","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843738,"byte_end":11843805,"line_start":599,"line_end":599,"column_start":5,"column_end":72}},{"value":"/ as a last resort.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843810,"byte_end":11843831,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11843836,"byte_end":11843861,"line_start":601,"line_end":601,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845013,"byte_end":11845028,"line_start":638,"line_end":638,"column_start":12,"column_end":27},"name":"min_tls_version","qualname":"<ClientBuilder>::min_tls_version","value":"pub fn min_tls_version(Self, tls::Version) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum required TLS version for connections.","sig":null,"attributes":[{"value":"/ Set the minimum required TLS version for connections.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844234,"byte_end":11844291,"line_start":614,"line_end":614,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844296,"byte_end":11844299,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ By default the TLS backend's own default is used.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844304,"byte_end":11844357,"line_start":616,"line_end":616,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844362,"byte_end":11844365,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844370,"byte_end":11844382,"line_start":618,"line_end":618,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844387,"byte_end":11844390,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ A value of `tls::Version::TLS_1_3` will cause an error with the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844395,"byte_end":11844462,"line_start":620,"line_end":620,"column_start":5,"column_end":72}},{"value":"/ `native-tls`/`default-tls` backend. This does not mean the version","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844467,"byte_end":11844537,"line_start":621,"line_end":621,"column_start":5,"column_end":75}},{"value":"/ isn't supported, just that it can't be set as a minimum due to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844542,"byte_end":11844608,"line_start":622,"line_end":622,"column_start":5,"column_end":71}},{"value":"/ technical limitations.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844613,"byte_end":11844639,"line_start":623,"line_end":623,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844644,"byte_end":11844647,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844652,"byte_end":11844666,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844671,"byte_end":11844674,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844679,"byte_end":11844760,"line_start":627,"line_end":627,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844765,"byte_end":11844791,"line_start":628,"line_end":628,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11844796,"byte_end":11844821,"line_start":629,"line_end":629,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845911,"byte_end":11845926,"line_start":666,"line_end":666,"column_start":12,"column_end":27},"name":"max_tls_version","qualname":"<ClientBuilder>::max_tls_version","value":"pub fn max_tls_version(Self, tls::Version) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum allowed TLS version for connections.","sig":null,"attributes":[{"value":"/ Set the maximum allowed TLS version for connections.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845152,"byte_end":11845208,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845213,"byte_end":11845216,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ By default there's no maximum.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845221,"byte_end":11845255,"line_start":644,"line_end":644,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845260,"byte_end":11845263,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845268,"byte_end":11845280,"line_start":646,"line_end":646,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845285,"byte_end":11845288,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ A value of `tls::Version::TLS_1_3` will cause an error with the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845293,"byte_end":11845360,"line_start":648,"line_end":648,"column_start":5,"column_end":72}},{"value":"/ `native-tls`/`default-tls` backend. This does not mean the version","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845365,"byte_end":11845435,"line_start":649,"line_end":649,"column_start":5,"column_end":75}},{"value":"/ isn't supported, just that it can't be set as a maximum due to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845440,"byte_end":11845506,"line_start":650,"line_end":650,"column_start":5,"column_end":71}},{"value":"/ technical limitations.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845511,"byte_end":11845537,"line_start":651,"line_end":651,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845542,"byte_end":11845545,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845550,"byte_end":11845564,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845569,"byte_end":11845572,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `default-tls`, `native-tls`, or `rustls-tls(-...)`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845577,"byte_end":11845658,"line_start":655,"line_end":655,"column_start":5,"column_end":86}},{"value":"/ feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845663,"byte_end":11845689,"line_start":656,"line_end":656,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11845694,"byte_end":11845719,"line_start":657,"line_end":657,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846976,"byte_end":11846990,"line_start":694,"line_end":694,"column_start":12,"column_end":26},"name":"use_rustls_tls","qualname":"<ClientBuilder>::use_rustls_tls","value":"pub fn use_rustls_tls(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Force using the Rustls TLS backend.","sig":null,"attributes":[{"value":"/ Force using the Rustls TLS backend.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846569,"byte_end":11846608,"line_start":684,"line_end":684,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846613,"byte_end":11846616,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Since multiple TLS backends can be optionally enabled, this option will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846621,"byte_end":11846696,"line_start":686,"line_end":686,"column_start":5,"column_end":80}},{"value":"/ force the `rustls` backend to be used for this `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846701,"byte_end":11846761,"line_start":687,"line_end":687,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846766,"byte_end":11846769,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846774,"byte_end":11846788,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846793,"byte_end":11846796,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `rustls-tls(-...)` feature to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846801,"byte_end":11846873,"line_start":691,"line_end":691,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"__rustls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11846878,"byte_end":11846906,"line_start":692,"line_end":692,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847968,"byte_end":11847989,"line_start":718,"line_end":718,"column_start":12,"column_end":33},"name":"use_preconfigured_tls","qualname":"<ClientBuilder>::use_preconfigured_tls","value":"pub fn use_preconfigured_tls<impl Any: Any>(Self, impl Any) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Use a preconfigured TLS backend.","sig":null,"attributes":[{"value":"/ Use a preconfigured TLS backend.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847088,"byte_end":11847124,"line_start":698,"line_end":698,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847129,"byte_end":11847132,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ If the passed `Any` argument is not a TLS backend that reqwest","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847137,"byte_end":11847203,"line_start":700,"line_end":700,"column_start":5,"column_end":71}},{"value":"/ understands, the `ClientBuilder` will error when calling `build`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847208,"byte_end":11847277,"line_start":701,"line_end":701,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847282,"byte_end":11847285,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Advanced","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847290,"byte_end":11847304,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847309,"byte_end":11847312,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This is an advanced option, and can be somewhat brittle. Usage requires","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847317,"byte_end":11847392,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/ keeping the preconfigured TLS argument version in sync with reqwest,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847397,"byte_end":11847469,"line_start":706,"line_end":706,"column_start":5,"column_end":77}},{"value":"/ since version mismatches will result in an \"unknown\" TLS backend.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847474,"byte_end":11847543,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847548,"byte_end":11847551,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ If possible, it's preferable to use the methods on `ClientBuilder`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847556,"byte_end":11847626,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ to configure reqwest's TLS.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847631,"byte_end":11847662,"line_start":710,"line_end":710,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847667,"byte_end":11847670,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847675,"byte_end":11847689,"line_start":712,"line_end":712,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847694,"byte_end":11847697,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This requires one of the optional features `native-tls` or","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847702,"byte_end":11847764,"line_start":714,"line_end":714,"column_start":5,"column_end":67}},{"value":"/ `rustls-tls(-...)` to be enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847769,"byte_end":11847806,"line_start":715,"line_end":715,"column_start":5,"column_end":42}},{"value":"cfg(any(feature = \"native-tls\", feature = \"__rustls\",))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11847811,"byte_end":11847869,"line_start":716,"line_end":716,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11848956,"byte_end":11848968,"line_start":740,"line_end":740,"column_start":12,"column_end":24},"name":"no_trust_dns","qualname":"<ClientBuilder>::no_trust_dns","value":"pub fn no_trust_dns(Self) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Disables the trust-dns async resolver.","sig":null,"attributes":[{"value":"/ Disables the trust-dns async resolver.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11848639,"byte_end":11848681,"line_start":735,"line_end":735,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11848686,"byte_end":11848689,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This method exists even if the optional `trust-dns` feature is not enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11848694,"byte_end":11848773,"line_start":737,"line_end":737,"column_start":5,"column_end":84}},{"value":"/ This can be used to ensure a `Client` doesn't use the trust-dns async resolver","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11848778,"byte_end":11848860,"line_start":738,"line_end":738,"column_start":5,"column_end":87}},{"value":"/ even if another dependency were to enable the optional `trust-dns` feature.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11848865,"byte_end":11848944,"line_start":739,"line_end":739,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849166,"byte_end":11849176,"line_start":747,"line_end":747,"column_start":12,"column_end":22},"name":"https_only","qualname":"<ClientBuilder>::https_only","value":"pub fn https_only(Self, bool) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Restrict the Client to be used with HTTPS only requests.","sig":null,"attributes":[{"value":"/ Restrict the Client to be used with HTTPS only requests.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849059,"byte_end":11849119,"line_start":744,"line_end":744,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849124,"byte_end":11849127,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ Defaults to false.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849132,"byte_end":11849154,"line_start":746,"line_end":746,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849712,"byte_end":11849719,"line_start":759,"line_end":759,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ClientBuilder>::resolve","value":"pub fn resolve(Self, &str, SocketAddr) -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Override DNS resolution for specific domains to particular IP addresses.","sig":null,"attributes":[{"value":"/ Override DNS resolution for specific domains to particular IP addresses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849287,"byte_end":11849363,"line_start":751,"line_end":751,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849368,"byte_end":11849371,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ Warning","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849376,"byte_end":11849387,"line_start":753,"line_end":753,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849392,"byte_end":11849395,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ Since the DNS protocol has no notion of ports, if you wish to send","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849400,"byte_end":11849470,"line_start":755,"line_end":755,"column_start":5,"column_end":75}},{"value":"/ traffic to a particular port you must include this port in the URL","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849475,"byte_end":11849545,"line_start":756,"line_end":756,"column_start":5,"column_end":75}},{"value":"/ itself, any port in the overridden addr will be ignored and traffic sent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849550,"byte_end":11849626,"line_start":757,"line_end":757,"column_start":5,"column_end":81}},{"value":"/ to the conventional port for the given scheme (e.g. 80 for http).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11849631,"byte_end":11849700,"line_start":758,"line_end":758,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850859,"byte_end":11850862,"line_start":802,"line_end":802,"column_start":12,"column_end":15},"name":"new","qualname":"<Client>::new","value":"pub fn new() -> Client","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Client`.","sig":null,"attributes":[{"value":"/ Constructs a new `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850388,"byte_end":11850418,"line_start":790,"line_end":790,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850423,"byte_end":11850426,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850431,"byte_end":11850442,"line_start":792,"line_end":792,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850447,"byte_end":11850450,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ This method panics if TLS backend cannot be initialized, or the resolver","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850455,"byte_end":11850531,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/ cannot load the system configuration.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850536,"byte_end":11850577,"line_start":795,"line_end":795,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850582,"byte_end":11850585,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ Use `Client::builder()` if you wish to handle the failure as an `Error`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850590,"byte_end":11850665,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ instead of panicking.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850670,"byte_end":11850695,"line_start":798,"line_end":798,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850700,"byte_end":11850703,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ This method also panics if called from within an async runtime. See docs","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850708,"byte_end":11850784,"line_start":800,"line_end":800,"column_start":5,"column_end":81}},{"value":"/ on [`reqwest::blocking`][crate::blocking] for details.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850789,"byte_end":11850847,"line_start":801,"line_end":801,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851075,"byte_end":11851082,"line_start":809,"line_end":809,"column_start":12,"column_end":19},"name":"builder","qualname":"<Client>::builder","value":"pub fn builder() -> ClientBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ClientBuilder` to configure a `Client`.","sig":null,"attributes":[{"value":"/ Creates a `ClientBuilder` to configure a `Client`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850949,"byte_end":11851003,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851008,"byte_end":11851011,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ This is the same as `ClientBuilder::new()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851016,"byte_end":11851063,"line_start":808,"line_end":808,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851313,"byte_end":11851316,"line_start":818,"line_end":818,"column_start":12,"column_end":15},"name":"get","qualname":"<Client>::get","value":"pub fn get<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `GET` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `GET` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851144,"byte_end":11851200,"line_start":813,"line_end":813,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851205,"byte_end":11851208,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851213,"byte_end":11851225,"line_start":815,"line_end":815,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851230,"byte_end":11851233,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851238,"byte_end":11851301,"line_start":817,"line_end":817,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851584,"byte_end":11851588,"line_start":827,"line_end":827,"column_start":12,"column_end":16},"name":"post","qualname":"<Client>::post","value":"pub fn post<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `POST` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `POST` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851414,"byte_end":11851471,"line_start":822,"line_end":822,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851476,"byte_end":11851479,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851484,"byte_end":11851496,"line_start":824,"line_end":824,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851501,"byte_end":11851504,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851509,"byte_end":11851572,"line_start":826,"line_end":826,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851856,"byte_end":11851859,"line_start":836,"line_end":836,"column_start":12,"column_end":15},"name":"put","qualname":"<Client>::put","value":"pub fn put<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `PUT` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `PUT` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851687,"byte_end":11851743,"line_start":831,"line_end":831,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851748,"byte_end":11851751,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851756,"byte_end":11851768,"line_start":833,"line_end":833,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851773,"byte_end":11851776,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851781,"byte_end":11851844,"line_start":835,"line_end":835,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852128,"byte_end":11852133,"line_start":845,"line_end":845,"column_start":12,"column_end":17},"name":"patch","qualname":"<Client>::patch","value":"pub fn patch<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `PATCH` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `PATCH` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11851957,"byte_end":11852015,"line_start":840,"line_end":840,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852020,"byte_end":11852023,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852028,"byte_end":11852040,"line_start":842,"line_end":842,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852045,"byte_end":11852048,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852053,"byte_end":11852116,"line_start":844,"line_end":844,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852405,"byte_end":11852411,"line_start":854,"line_end":854,"column_start":12,"column_end":18},"name":"delete","qualname":"<Client>::delete","value":"pub fn delete<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `DELETE` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `DELETE` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852233,"byte_end":11852292,"line_start":849,"line_end":849,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852297,"byte_end":11852300,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852305,"byte_end":11852317,"line_start":851,"line_end":851,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852322,"byte_end":11852325,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852330,"byte_end":11852393,"line_start":853,"line_end":853,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852682,"byte_end":11852686,"line_start":863,"line_end":863,"column_start":12,"column_end":16},"name":"head","qualname":"<Client>::head","value":"pub fn head<U: IntoUrl>(&Self, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to make a `HEAD` request to a URL.","sig":null,"attributes":[{"value":"/ Convenience method to make a `HEAD` request to a URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852512,"byte_end":11852569,"line_start":858,"line_end":858,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852574,"byte_end":11852577,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852582,"byte_end":11852594,"line_start":860,"line_end":860,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852599,"byte_end":11852602,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852607,"byte_end":11852670,"line_start":862,"line_end":862,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853075,"byte_end":11853082,"line_start":875,"line_end":875,"column_start":12,"column_end":19},"name":"request","qualname":"<Client>::request","value":"pub fn request<U: IntoUrl>(&Self, Method, U) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Start building a `Request` with the `Method` and `Url`.","sig":null,"attributes":[{"value":"/ Start building a `Request` with the `Method` and `Url`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852785,"byte_end":11852844,"line_start":867,"line_end":867,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852849,"byte_end":11852852,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Returns a `RequestBuilder`, which will allow setting headers and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852857,"byte_end":11852925,"line_start":869,"line_end":869,"column_start":5,"column_end":73}},{"value":"/ request body before sending.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852930,"byte_end":11852962,"line_start":870,"line_end":870,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852967,"byte_end":11852970,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852975,"byte_end":11852987,"line_start":872,"line_end":872,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11852992,"byte_end":11852995,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever supplied `Url` cannot be parsed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853000,"byte_end":11853063,"line_start":874,"line_end":874,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853708,"byte_end":11853715,"line_start":892,"line_end":892,"column_start":12,"column_end":19},"name":"execute","qualname":"<Client>::execute","value":"pub fn execute(&Self, Request) -> crate::Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Executes a `Request`.","sig":null,"attributes":[{"value":"/ Executes a `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853280,"byte_end":11853305,"line_start":880,"line_end":880,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853310,"byte_end":11853313,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ A `Request` can be built manually with `Request::new()` or obtained","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853318,"byte_end":11853389,"line_start":882,"line_end":882,"column_start":5,"column_end":76}},{"value":"/ from a RequestBuilder with `RequestBuilder::build()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853394,"byte_end":11853451,"line_start":883,"line_end":883,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853456,"byte_end":11853459,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ You should prefer to use the `RequestBuilder` and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853464,"byte_end":11853517,"line_start":885,"line_end":885,"column_start":5,"column_end":58}},{"value":"/ `RequestBuilder::send()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853522,"byte_end":11853551,"line_start":886,"line_end":886,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853556,"byte_end":11853559,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853564,"byte_end":11853576,"line_start":888,"line_end":888,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853581,"byte_end":11853584,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ This method fails if there was an error while sending request,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853589,"byte_end":11853655,"line_start":890,"line_end":890,"column_start":5,"column_end":71}},{"value":"/ or redirect limit was exhausted.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853660,"byte_end":11853696,"line_start":891,"line_end":891,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861410,"byte_end":11861417,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Request","qualname":"::blocking::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447}],"decl_id":null,"docs":" A request which can be executed with `Client::execute()`.\n","sig":null,"attributes":[{"value":"/ A request which can be executed with `Client::execute()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861337,"byte_end":11861398,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861707,"byte_end":11861721,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"RequestBuilder","qualname":"::blocking::request::RequestBuilder","value":"RequestBuilder {  }","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2319}],"decl_id":null,"docs":" A builder to construct the properties of a `Request`.","sig":null,"attributes":[{"value":"/ A builder to construct the properties of a `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861479,"byte_end":11861536,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861537,"byte_end":11861540,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ To construct a `RequestBuilder`, refer to the `Client` documentation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861541,"byte_end":11861614,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"must_use = \"RequestBuilder does nothing until you 'send' it\"","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861632,"byte_end":11861695,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861858,"byte_end":11861861,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"pub fn new(Method, Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new request.\n","sig":null,"attributes":[{"value":"/ Constructs a new request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861803,"byte_end":11861832,"line_start":36,"line_end":36,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861837,"byte_end":11861846,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862064,"byte_end":11862070,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"pub fn method(&Self) -> &Method","parent":null,"children":[],"decl_id":null,"docs":" Get the method.\n","sig":null,"attributes":[{"value":"/ Get the method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862019,"byte_end":11862038,"line_start":45,"line_end":45,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862043,"byte_end":11862052,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862198,"byte_end":11862208,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"method_mut","qualname":"<Request>::method_mut","value":"pub fn method_mut(&mut Self) -> &mut Method","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the method.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862130,"byte_end":11862172,"line_start":51,"line_end":51,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862177,"byte_end":11862186,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862322,"byte_end":11862325,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"url","qualname":"<Request>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the url.\n","sig":null,"attributes":[{"value":"/ Get the url.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862280,"byte_end":11862296,"line_start":57,"line_end":57,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862301,"byte_end":11862310,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862444,"byte_end":11862451,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"url_mut","qualname":"<Request>::url_mut","value":"pub fn url_mut(&mut Self) -> &mut Url","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the url.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the url.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862379,"byte_end":11862418,"line_start":63,"line_end":63,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862423,"byte_end":11862432,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862563,"byte_end":11862570,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get the headers.\n","sig":null,"attributes":[{"value":"/ Get the headers.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862517,"byte_end":11862537,"line_start":69,"line_end":69,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862542,"byte_end":11862551,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862703,"byte_end":11862714,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Request>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the headers.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the headers.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862634,"byte_end":11862677,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862682,"byte_end":11862691,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862841,"byte_end":11862848,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"version","qualname":"<Request>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the http version.\n","sig":null,"attributes":[{"value":"/ Get the http version.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862790,"byte_end":11862815,"line_start":81,"line_end":81,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862820,"byte_end":11862829,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862983,"byte_end":11862994,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"version_mut","qualname":"<Request>::version_mut","value":"pub fn version_mut(&mut Self) -> &mut Version","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the http version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the http version.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862909,"byte_end":11862957,"line_start":87,"line_end":87,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11862962,"byte_end":11862971,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863111,"byte_end":11863115,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"body","qualname":"<Request>::body","value":"pub fn body(&Self) -> Option<&Body>","parent":null,"children":[],"decl_id":null,"docs":" Get the body.\n","sig":null,"attributes":[{"value":"/ Get the body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863068,"byte_end":11863085,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863090,"byte_end":11863099,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863246,"byte_end":11863254,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"body_mut","qualname":"<Request>::body_mut","value":"pub fn body_mut(&mut Self) -> &mut Option<Body>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the body.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863180,"byte_end":11863220,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863225,"byte_end":11863234,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863369,"byte_end":11863376,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Request>::timeout","value":"pub fn timeout(&Self) -> Option<&Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get the timeout.\n","sig":null,"attributes":[{"value":"/ Get the timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863323,"byte_end":11863343,"line_start":105,"line_end":105,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863348,"byte_end":11863357,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863516,"byte_end":11863527,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"timeout_mut","qualname":"<Request>::timeout_mut","value":"pub fn timeout_mut(&mut Self) -> &mut Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the timeout.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863447,"byte_end":11863490,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863495,"byte_end":11863504,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863779,"byte_end":11863788,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Request>::try_clone","value":"pub fn try_clone(&Self) -> Option<Request>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the `Request`.","sig":null,"attributes":[{"value":"/ Attempts to clone the `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863610,"byte_end":11863646,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863651,"byte_end":11863654,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ None is returned if a body is which can not be cloned. This can be because the body is a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863659,"byte_end":11863751,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11863756,"byte_end":11863767,"line_start":120,"line_end":120,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865711,"byte_end":11865717,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"header","qualname":"<RequestBuilder>::header","value":"pub fn header<K, V>(Self, K, V) -> RequestBuilder where\nHeaderName: TryFrom<K>, HeaderValue: TryFrom<V>,\n<HeaderName as TryFrom<K>>::Error: Into<http::Error>,\n<HeaderValue as TryFrom<V>>::Error: Into<http::Error>","parent":null,"children":[],"decl_id":null,"docs":" Add a `Header` to this Request.","sig":null,"attributes":[{"value":"/ Add a `Header` to this Request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865317,"byte_end":11865352,"line_start":171,"line_end":171,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865357,"byte_end":11865360,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865365,"byte_end":11865376,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header::USER_AGENT;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865381,"byte_end":11865417,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865422,"byte_end":11865425,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865430,"byte_end":11865484,"line_start":176,"line_end":176,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865489,"byte_end":11865539,"line_start":177,"line_end":177,"column_start":5,"column_end":55}},{"value":"/ let res = client.get(\"https://www.rust-lang.org\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865544,"byte_end":11865597,"line_start":178,"line_end":178,"column_start":5,"column_end":58}},{"value":"/     .header(USER_AGENT, \"foo\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865602,"byte_end":11865636,"line_start":179,"line_end":179,"column_start":5,"column_end":39}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865641,"byte_end":11865658,"line_start":180,"line_end":180,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865663,"byte_end":11865675,"line_start":181,"line_end":181,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865680,"byte_end":11865687,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11865692,"byte_end":11865699,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868039,"byte_end":11868046,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"headers","qualname":"<RequestBuilder>::headers","value":"pub fn headers(Self, crate::header::HeaderMap) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Add a set of Headers to the existing ones on this Request.","sig":null,"attributes":[{"value":"/ Add a set of Headers to the existing ones on this Request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867118,"byte_end":11867180,"line_start":221,"line_end":221,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867185,"byte_end":11867188,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The headers will be merged in to any already set.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867193,"byte_end":11867246,"line_start":223,"line_end":223,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867251,"byte_end":11867254,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867259,"byte_end":11867270,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/ use reqwest::header::{HeaderMap, HeaderValue, USER_AGENT, CONTENT_TYPE};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867275,"byte_end":11867351,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ # use std::fs;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867356,"byte_end":11867374,"line_start":227,"line_end":227,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867379,"byte_end":11867382,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ fn construct_headers() -> HeaderMap {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867387,"byte_end":11867428,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"/     let mut headers = HeaderMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867433,"byte_end":11867476,"line_start":230,"line_end":230,"column_start":5,"column_end":48}},{"value":"/     headers.insert(USER_AGENT, HeaderValue::from_static(\"reqwest\"));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867481,"byte_end":11867553,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/     headers.insert(CONTENT_TYPE, HeaderValue::from_static(\"image/png\"));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867558,"byte_end":11867634,"line_start":232,"line_end":232,"column_start":5,"column_end":81}},{"value":"/     headers","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867639,"byte_end":11867654,"line_start":233,"line_end":233,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867659,"byte_end":11867664,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867669,"byte_end":11867672,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867677,"byte_end":11867731,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/ let file = fs::File::open(\"much_beauty.png\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867736,"byte_end":11867786,"line_start":237,"line_end":237,"column_start":5,"column_end":55}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867791,"byte_end":11867841,"line_start":238,"line_end":238,"column_start":5,"column_end":55}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867846,"byte_end":11867898,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/     .headers(construct_headers())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867903,"byte_end":11867940,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/     .body(file)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867945,"byte_end":11867964,"line_start":241,"line_end":241,"column_start":5,"column_end":24}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867969,"byte_end":11867986,"line_start":242,"line_end":242,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11867991,"byte_end":11868003,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868008,"byte_end":11868015,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868020,"byte_end":11868027,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868632,"byte_end":11868642,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"basic_auth","qualname":"<RequestBuilder>::basic_auth","value":"pub fn basic_auth<U, P>(Self, U, Option<P>) -> RequestBuilder where\nU: fmt::Display, P: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Enable HTTP basic authentication.","sig":null,"attributes":[{"value":"/ Enable HTTP basic authentication.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868264,"byte_end":11868301,"line_start":253,"line_end":253,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868306,"byte_end":11868309,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868314,"byte_end":11868325,"line_start":255,"line_end":255,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868330,"byte_end":11868384,"line_start":256,"line_end":256,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868389,"byte_end":11868439,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/ let resp = client.delete(\"http://httpbin.org/delete\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868444,"byte_end":11868501,"line_start":258,"line_end":258,"column_start":5,"column_end":62}},{"value":"/     .basic_auth(\"admin\", Some(\"good password\"))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868506,"byte_end":11868557,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868562,"byte_end":11868579,"line_start":260,"line_end":260,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868584,"byte_end":11868596,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868601,"byte_end":11868608,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11868613,"byte_end":11868620,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869437,"byte_end":11869448,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"bearer_auth","qualname":"<RequestBuilder>::bearer_auth","value":"pub fn bearer_auth<T>(Self, T) -> RequestBuilder where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Enable HTTP bearer authentication.","sig":null,"attributes":[{"value":"/ Enable HTTP bearer authentication.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869090,"byte_end":11869128,"line_start":277,"line_end":277,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869133,"byte_end":11869136,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869141,"byte_end":11869152,"line_start":279,"line_end":279,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869157,"byte_end":11869211,"line_start":280,"line_end":280,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869216,"byte_end":11869266,"line_start":281,"line_end":281,"column_start":5,"column_end":55}},{"value":"/ let resp = client.delete(\"http://httpbin.org/delete\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869271,"byte_end":11869328,"line_start":282,"line_end":282,"column_start":5,"column_end":62}},{"value":"/     .bearer_auth(\"token\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869333,"byte_end":11869362,"line_start":283,"line_end":283,"column_start":5,"column_end":34}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869367,"byte_end":11869384,"line_start":284,"line_end":284,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869389,"byte_end":11869401,"line_start":285,"line_end":285,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869406,"byte_end":11869413,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869418,"byte_end":11869425,"line_start":287,"line_end":287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870853,"byte_end":11870857,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"body","qualname":"<RequestBuilder>::body","value":"pub fn body<T: Into<Body>>(Self, T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the request body.","sig":null,"attributes":[{"value":"/ Set the request body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869676,"byte_end":11869701,"line_start":296,"line_end":296,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869706,"byte_end":11869709,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869714,"byte_end":11869728,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869733,"byte_end":11869736,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Using a string:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869741,"byte_end":11869760,"line_start":300,"line_end":300,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869765,"byte_end":11869768,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869773,"byte_end":11869784,"line_start":302,"line_end":302,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869789,"byte_end":11869843,"line_start":303,"line_end":303,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869848,"byte_end":11869898,"line_start":304,"line_end":304,"column_start":5,"column_end":55}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869903,"byte_end":11869955,"line_start":305,"line_end":305,"column_start":5,"column_end":57}},{"value":"/     .body(\"from a &str!\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869960,"byte_end":11869989,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11869994,"byte_end":11870011,"line_start":307,"line_end":307,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870016,"byte_end":11870028,"line_start":308,"line_end":308,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870033,"byte_end":11870040,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870045,"byte_end":11870052,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870057,"byte_end":11870060,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Using a `File`:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870065,"byte_end":11870084,"line_start":312,"line_end":312,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870089,"byte_end":11870092,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870097,"byte_end":11870108,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870113,"byte_end":11870167,"line_start":315,"line_end":315,"column_start":5,"column_end":59}},{"value":"/ let file = std::fs::File::open(\"from_a_file.txt\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870172,"byte_end":11870227,"line_start":316,"line_end":316,"column_start":5,"column_end":60}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870232,"byte_end":11870282,"line_start":317,"line_end":317,"column_start":5,"column_end":55}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870287,"byte_end":11870339,"line_start":318,"line_end":318,"column_start":5,"column_end":57}},{"value":"/     .body(file)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870344,"byte_end":11870363,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870368,"byte_end":11870385,"line_start":320,"line_end":320,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870390,"byte_end":11870402,"line_start":321,"line_end":321,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870407,"byte_end":11870414,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870419,"byte_end":11870426,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870431,"byte_end":11870434,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Using arbitrary bytes:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870439,"byte_end":11870465,"line_start":325,"line_end":325,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870470,"byte_end":11870473,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870478,"byte_end":11870489,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/ # use std::fs;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870494,"byte_end":11870512,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870517,"byte_end":11870571,"line_start":329,"line_end":329,"column_start":5,"column_end":59}},{"value":"/ // from bytes!","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870576,"byte_end":11870594,"line_start":330,"line_end":330,"column_start":5,"column_end":23}},{"value":"/ let bytes: Vec<u8> = vec![1, 10, 100];","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870599,"byte_end":11870641,"line_start":331,"line_end":331,"column_start":5,"column_end":47}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870646,"byte_end":11870696,"line_start":332,"line_end":332,"column_start":5,"column_end":55}},{"value":"/ let res = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870701,"byte_end":11870753,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/     .body(bytes)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870758,"byte_end":11870778,"line_start":334,"line_end":334,"column_start":5,"column_end":25}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870783,"byte_end":11870800,"line_start":335,"line_end":335,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870805,"byte_end":11870817,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870822,"byte_end":11870829,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11870834,"byte_end":11870841,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871318,"byte_end":11871325,"line_start":351,"line_end":351,"column_start":12,"column_end":19},"name":"timeout","qualname":"<RequestBuilder>::timeout","value":"pub fn timeout(Self, Duration) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enables a request timeout.","sig":null,"attributes":[{"value":"/ Enables a request timeout.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871043,"byte_end":11871073,"line_start":346,"line_end":346,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871078,"byte_end":11871081,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The timeout is applied from when the request starts connecting until the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871086,"byte_end":11871162,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ response body has finished. It affects only this request and overrides","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871167,"byte_end":11871241,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ the timeout configured using `ClientBuilder::timeout()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871246,"byte_end":11871306,"line_start":350,"line_end":350,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872711,"byte_end":11872716,"line_start":388,"line_end":388,"column_start":12,"column_end":17},"name":"query","qualname":"<RequestBuilder>::query","value":"pub fn query<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Modify the query string of the URL.","sig":null,"attributes":[{"value":"/ Modify the query string of the URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871505,"byte_end":11871544,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871549,"byte_end":11871552,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Modifies the URL of this request, adding the parameters provided.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871557,"byte_end":11871626,"line_start":360,"line_end":360,"column_start":5,"column_end":74}},{"value":"/ This method appends and does not overwrite. This means that it can","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871631,"byte_end":11871701,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/ be called multiple times and that existing query parameters are not","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871706,"byte_end":11871777,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/ overwritten if the same key is used. The key will simply show up","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871782,"byte_end":11871850,"line_start":363,"line_end":363,"column_start":5,"column_end":73}},{"value":"/ twice in the query string.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871855,"byte_end":11871885,"line_start":364,"line_end":364,"column_start":5,"column_end":35}},{"value":"/ Calling `.query(&[(\"foo\", \"a\"), (\"foo\", \"b\")])` gives `\"foo=a&foo=b\"`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871890,"byte_end":11871964,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871969,"byte_end":11871972,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871977,"byte_end":11871988,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11871993,"byte_end":11872018,"line_start":368,"line_end":368,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872023,"byte_end":11872028,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872033,"byte_end":11872070,"line_start":370,"line_end":370,"column_start":5,"column_end":42}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872075,"byte_end":11872125,"line_start":371,"line_end":371,"column_start":5,"column_end":55}},{"value":"/ let res = client.get(\"http://httpbin.org\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872130,"byte_end":11872176,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/     .query(&[(\"lang\", \"rust\")])","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872181,"byte_end":11872216,"line_start":373,"line_end":373,"column_start":5,"column_end":40}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872221,"byte_end":11872238,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872243,"byte_end":11872255,"line_start":375,"line_end":375,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872260,"byte_end":11872267,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872272,"byte_end":11872279,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872284,"byte_end":11872287,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872292,"byte_end":11872302,"line_start":379,"line_end":379,"column_start":5,"column_end":15}},{"value":"/ This method does not support serializing a single key-value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872307,"byte_end":11872370,"line_start":380,"line_end":380,"column_start":5,"column_end":68}},{"value":"/ pair. Instead of using `.query((\"key\", \"val\"))`, use a sequence, such","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872375,"byte_end":11872448,"line_start":381,"line_end":381,"column_start":5,"column_end":78}},{"value":"/ as `.query(&[(\"key\", \"val\")])`. It's also possible to serialize structs","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872453,"byte_end":11872528,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ and maps into a key-value pair.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872533,"byte_end":11872568,"line_start":383,"line_end":383,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872573,"byte_end":11872576,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872581,"byte_end":11872593,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ This method will fail if the object you provide cannot be serialized","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872598,"byte_end":11872670,"line_start":386,"line_end":386,"column_start":5,"column_end":77}},{"value":"/ into a query string.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11872675,"byte_end":11872699,"line_start":387,"line_end":387,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873473,"byte_end":11873480,"line_start":411,"line_end":411,"column_start":12,"column_end":19},"name":"version","qualname":"<RequestBuilder>::version","value":"pub fn version(Self, Version) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set HTTP version\n","sig":null,"attributes":[{"value":"/ Set HTTP version","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873441,"byte_end":11873461,"line_start":410,"line_end":410,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874426,"byte_end":11874430,"line_start":444,"line_end":444,"column_start":12,"column_end":16},"name":"form","qualname":"<RequestBuilder>::form","value":"pub fn form<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send a form body.","sig":null,"attributes":[{"value":"/ Send a form body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873653,"byte_end":11873674,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873679,"byte_end":11873682,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Sets the body to the url encoded serialization of the passed value,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873687,"byte_end":11873758,"line_start":420,"line_end":420,"column_start":5,"column_end":76}},{"value":"/ and also sets the `Content-Type: application/x-www-form-urlencoded`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873763,"byte_end":11873834,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/ header.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873839,"byte_end":11873850,"line_start":422,"line_end":422,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873855,"byte_end":11873858,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873863,"byte_end":11873874,"line_start":424,"line_end":424,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873879,"byte_end":11873904,"line_start":425,"line_end":425,"column_start":5,"column_end":30}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873909,"byte_end":11873945,"line_start":426,"line_end":426,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873950,"byte_end":11873955,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11873960,"byte_end":11873997,"line_start":428,"line_end":428,"column_start":5,"column_end":42}},{"value":"/ let mut params = HashMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874002,"byte_end":11874038,"line_start":429,"line_end":429,"column_start":5,"column_end":41}},{"value":"/ params.insert(\"lang\", \"rust\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874043,"byte_end":11874077,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874082,"byte_end":11874085,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874090,"byte_end":11874140,"line_start":432,"line_end":432,"column_start":5,"column_end":55}},{"value":"/ let res = client.post(\"http://httpbin.org\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874145,"byte_end":11874192,"line_start":433,"line_end":433,"column_start":5,"column_end":52}},{"value":"/     .form(&params)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874197,"byte_end":11874219,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874224,"byte_end":11874241,"line_start":435,"line_end":435,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874246,"byte_end":11874258,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874263,"byte_end":11874270,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874275,"byte_end":11874282,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874287,"byte_end":11874290,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874295,"byte_end":11874307,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874312,"byte_end":11874315,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This method fails if the passed value cannot be serialized into","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874320,"byte_end":11874387,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/ url encoded format","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11874392,"byte_end":11874414,"line_start":443,"line_end":443,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11876102,"byte_end":11876106,"line_start":497,"line_end":497,"column_start":12,"column_end":16},"name":"json","qualname":"<RequestBuilder>::json","value":"pub fn json<T: Serialize + ?Sized>(Self, &T) -> RequestBuilder","parent":null,"children":[],"decl_id":null,"docs":" Send a JSON body.","sig":null,"attributes":[{"value":"/ Send a JSON body.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875125,"byte_end":11875146,"line_start":464,"line_end":464,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875151,"byte_end":11875154,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Sets the body to the JSON serialization of the passed value, and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875159,"byte_end":11875227,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ also sets the `Content-Type: application/json` header.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875232,"byte_end":11875290,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875295,"byte_end":11875298,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875303,"byte_end":11875317,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875322,"byte_end":11875325,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `json` feature enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875330,"byte_end":11875384,"line_start":471,"line_end":471,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875389,"byte_end":11875392,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875397,"byte_end":11875411,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875416,"byte_end":11875419,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875424,"byte_end":11875435,"line_start":475,"line_end":475,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875440,"byte_end":11875465,"line_start":476,"line_end":476,"column_start":5,"column_end":30}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875470,"byte_end":11875506,"line_start":477,"line_end":477,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875511,"byte_end":11875516,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875521,"byte_end":11875558,"line_start":479,"line_end":479,"column_start":5,"column_end":42}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875563,"byte_end":11875596,"line_start":480,"line_end":480,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"lang\", \"rust\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875601,"byte_end":11875632,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875637,"byte_end":11875640,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875645,"byte_end":11875695,"line_start":483,"line_end":483,"column_start":5,"column_end":55}},{"value":"/ let res = client.post(\"http://httpbin.org\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875700,"byte_end":11875747,"line_start":484,"line_end":484,"column_start":5,"column_end":52}},{"value":"/     .json(&map)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875752,"byte_end":11875771,"line_start":485,"line_end":485,"column_start":5,"column_end":24}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875776,"byte_end":11875793,"line_start":486,"line_end":486,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875798,"byte_end":11875810,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875815,"byte_end":11875822,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875827,"byte_end":11875834,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875839,"byte_end":11875842,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875847,"byte_end":11875859,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875864,"byte_end":11875867,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875872,"byte_end":11875948,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11875953,"byte_end":11876009,"line_start":494,"line_end":494,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"json\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11876014,"byte_end":11876038,"line_start":495,"line_end":495,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878043,"byte_end":11878048,"line_start":552,"line_end":552,"column_start":12,"column_end":17},"name":"build","qualname":"<RequestBuilder>::build","value":"pub fn build(Self) -> crate::Result<Request>","parent":null,"children":[],"decl_id":null,"docs":" Build a `Request`, which can be inspected, modified and executed with\n `Client::execute()`.\n","sig":null,"attributes":[{"value":"/ Build a `Request`, which can be inspected, modified and executed with","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11877929,"byte_end":11878002,"line_start":550,"line_end":550,"column_start":5,"column_end":78}},{"value":"/ `Client::execute()`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878007,"byte_end":11878031,"line_start":551,"line_end":551,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878376,"byte_end":11878380,"line_start":562,"line_end":562,"column_start":12,"column_end":16},"name":"send","qualname":"<RequestBuilder>::send","value":"pub fn send(Self) -> crate::Result<super::Response>","parent":null,"children":[],"decl_id":null,"docs":" Constructs the Request and sends it the target URL, returning a Response.","sig":null,"attributes":[{"value":"/ Constructs the Request and sends it the target URL, returning a Response.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878115,"byte_end":11878192,"line_start":556,"line_end":556,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878197,"byte_end":11878200,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878205,"byte_end":11878217,"line_start":558,"line_end":558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878222,"byte_end":11878225,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This method fails if there was an error while sending request,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878230,"byte_end":11878296,"line_start":560,"line_end":560,"column_start":5,"column_end":71}},{"value":"/ redirect loop was detected or redirect limit was exhausted.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878301,"byte_end":11878364,"line_start":561,"line_end":561,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879831,"byte_end":11879840,"line_start":610,"line_end":610,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<RequestBuilder>::try_clone","value":"pub fn try_clone(&Self) -> Option<RequestBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the `RequestBuilder`.","sig":null,"attributes":[{"value":"/ Attempts to clone the `RequestBuilder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878477,"byte_end":11878520,"line_start":566,"line_end":566,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878525,"byte_end":11878528,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ None is returned if a body is which can not be cloned. This can be because the body is a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878533,"byte_end":11878625,"line_start":568,"line_end":568,"column_start":5,"column_end":97}},{"value":"/ stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878630,"byte_end":11878641,"line_start":569,"line_end":569,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878646,"byte_end":11878649,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878654,"byte_end":11878668,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878673,"byte_end":11878676,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ With a static body","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878681,"byte_end":11878703,"line_start":573,"line_end":573,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878708,"byte_end":11878711,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878716,"byte_end":11878727,"line_start":575,"line_end":575,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878732,"byte_end":11878786,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878791,"byte_end":11878841,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let builder = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878846,"byte_end":11878902,"line_start":578,"line_end":578,"column_start":5,"column_end":61}},{"value":"/     .body(\"from a &str!\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878907,"byte_end":11878937,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/ let clone = builder.try_clone();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878942,"byte_end":11878978,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/ assert!(clone.is_some());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11878983,"byte_end":11879012,"line_start":581,"line_end":581,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879017,"byte_end":11879029,"line_start":582,"line_end":582,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879034,"byte_end":11879041,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879046,"byte_end":11879053,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879058,"byte_end":11879061,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Without a body","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879066,"byte_end":11879084,"line_start":586,"line_end":586,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879089,"byte_end":11879092,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879097,"byte_end":11879108,"line_start":588,"line_end":588,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879113,"byte_end":11879167,"line_start":589,"line_end":589,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879172,"byte_end":11879222,"line_start":590,"line_end":590,"column_start":5,"column_end":55}},{"value":"/ let builder = client.get(\"http://httpbin.org/get\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879227,"byte_end":11879282,"line_start":591,"line_end":591,"column_start":5,"column_end":60}},{"value":"/ let clone = builder.try_clone();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879287,"byte_end":11879323,"line_start":592,"line_end":592,"column_start":5,"column_end":41}},{"value":"/ assert!(clone.is_some());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879328,"byte_end":11879357,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879362,"byte_end":11879374,"line_start":594,"line_end":594,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879379,"byte_end":11879386,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879391,"byte_end":11879398,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879403,"byte_end":11879406,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ With a non-clonable body","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879411,"byte_end":11879439,"line_start":598,"line_end":598,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879444,"byte_end":11879447,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879452,"byte_end":11879463,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879468,"byte_end":11879522,"line_start":601,"line_end":601,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::blocking::Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879527,"byte_end":11879577,"line_start":602,"line_end":602,"column_start":5,"column_end":55}},{"value":"/ let builder = client.get(\"http://httpbin.org/get\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879582,"byte_end":11879636,"line_start":603,"line_end":603,"column_start":5,"column_end":59}},{"value":"/     .body(reqwest::blocking::Body::new(std::io::empty()));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879641,"byte_end":11879703,"line_start":604,"line_end":604,"column_start":5,"column_end":67}},{"value":"/ let clone = builder.try_clone();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879708,"byte_end":11879744,"line_start":605,"line_end":605,"column_start":5,"column_end":41}},{"value":"/ assert!(clone.is_none());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879749,"byte_end":11879778,"line_start":606,"line_end":606,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879783,"byte_end":11879795,"line_start":607,"line_end":607,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879800,"byte_end":11879807,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11879812,"byte_end":11879819,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894054,"byte_end":11894062,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Response","qualname":"::blocking::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"decl_id":null,"docs":" A Response to a submitted `Request`.\n","sig":null,"attributes":[{"value":"/ A Response to a submitted `Request`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894002,"byte_end":11894042,"line_start":20,"line_end":20,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896042,"byte_end":11896048,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"pub fn status(&Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the `StatusCode` of this `Response`.","sig":null,"attributes":[{"value":"/ Get the `StatusCode` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894698,"byte_end":11894742,"line_start":48,"line_end":48,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894747,"byte_end":11894750,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894755,"byte_end":11894769,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894774,"byte_end":11894777,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Checking for general status class:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894782,"byte_end":11894820,"line_start":52,"line_end":52,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894825,"byte_end":11894828,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894833,"byte_end":11894844,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(feature = \"json\")]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894849,"byte_end":11894879,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894884,"byte_end":11894938,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ let resp = reqwest::blocking::get(\"http://httpbin.org/get\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894943,"byte_end":11895008,"line_start":57,"line_end":57,"column_start":5,"column_end":70}},{"value":"/ if resp.status().is_success() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895013,"byte_end":11895048,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/     println!(\"success!\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895053,"byte_end":11895082,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/ } else if resp.status().is_server_error() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895087,"byte_end":11895134,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/     println!(\"server error!\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895139,"byte_end":11895173,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/ } else {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895178,"byte_end":11895190,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/     println!(\"Something else happened. Status: {:?}\", resp.status());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895195,"byte_end":11895268,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895273,"byte_end":11895278,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895283,"byte_end":11895295,"line_start":65,"line_end":65,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895300,"byte_end":11895307,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895312,"byte_end":11895319,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895324,"byte_end":11895327,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Checking for specific status codes:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895332,"byte_end":11895371,"line_start":69,"line_end":69,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895376,"byte_end":11895379,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895384,"byte_end":11895395,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ use reqwest::blocking::Client;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895400,"byte_end":11895434,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ use reqwest::StatusCode;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895439,"byte_end":11895467,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895472,"byte_end":11895526,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/ let client = Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895531,"byte_end":11895562,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895567,"byte_end":11895570,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let resp = client.post(\"http://httpbin.org/post\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895575,"byte_end":11895628,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/     .body(\"possibly too large\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895633,"byte_end":11895668,"line_start":78,"line_end":78,"column_start":5,"column_end":40}},{"value":"/     .send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895673,"byte_end":11895690,"line_start":79,"line_end":79,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895695,"byte_end":11895698,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ match resp.status() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895703,"byte_end":11895728,"line_start":81,"line_end":81,"column_start":5,"column_end":30}},{"value":"/     StatusCode::OK => println!(\"success!\"),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895733,"byte_end":11895780,"line_start":82,"line_end":82,"column_start":5,"column_end":52}},{"value":"/     StatusCode::PAYLOAD_TOO_LARGE => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895785,"byte_end":11895827,"line_start":83,"line_end":83,"column_start":5,"column_end":47}},{"value":"/         println!(\"Request payload is too large!\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895832,"byte_end":11895886,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895891,"byte_end":11895900,"line_start":85,"line_end":85,"column_start":5,"column_end":14}},{"value":"/     s => println!(\"Received response status: {:?}\", s),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895905,"byte_end":11895964,"line_start":86,"line_end":86,"column_start":5,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895969,"byte_end":11895975,"line_start":87,"line_end":87,"column_start":5,"column_end":11}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895980,"byte_end":11895992,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11895997,"byte_end":11896004,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896009,"byte_end":11896016,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896021,"byte_end":11896030,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896850,"byte_end":11896857,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"pub fn headers(&Self) -> &HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get the `Headers` of this `Response`.","sig":null,"attributes":[{"value":"/ Get the `Headers` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896111,"byte_end":11896152,"line_start":96,"line_end":96,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896157,"byte_end":11896160,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896165,"byte_end":11896178,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896183,"byte_end":11896186,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Saving an etag when caching a file:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896191,"byte_end":11896230,"line_start":100,"line_end":100,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896235,"byte_end":11896238,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896243,"byte_end":11896250,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use reqwest::blocking::Client;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896255,"byte_end":11896289,"line_start":103,"line_end":103,"column_start":5,"column_end":39}},{"value":"/ use reqwest::header::ETAG;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896294,"byte_end":11896324,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896329,"byte_end":11896332,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896337,"byte_end":11896391,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/ let client = Client::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896396,"byte_end":11896427,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896432,"byte_end":11896435,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut resp = client.get(\"http://httpbin.org/cache\").send()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896440,"byte_end":11896506,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ if resp.status().is_success() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896511,"byte_end":11896546,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/     if let Some(etag) = resp.headers().get(ETAG) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896551,"byte_end":11896605,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/         std::fs::write(\"etag\", etag.as_bytes());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896610,"byte_end":11896662,"line_start":112,"line_end":112,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896667,"byte_end":11896676,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/     let mut file = std::fs::File::create(\"file\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896681,"byte_end":11896735,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/     resp.copy_to(&mut file)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896740,"byte_end":11896773,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896778,"byte_end":11896783,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896788,"byte_end":11896800,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896805,"byte_end":11896812,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896817,"byte_end":11896824,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896829,"byte_end":11896838,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897011,"byte_end":11897022,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Response>::headers_mut","value":"pub fn headers_mut(&mut Self) -> &mut HeaderMap","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the `Headers` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the `Headers` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896921,"byte_end":11896985,"line_start":125,"line_end":125,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11896990,"byte_end":11896999,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897659,"byte_end":11897666,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"version","qualname":"<Response>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP `Version` of this `Response`.\n","sig":null,"attributes":[{"value":"/ Get the HTTP `Version` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897587,"byte_end":11897633,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897638,"byte_end":11897647,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898090,"byte_end":11898093,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"url","qualname":"<Response>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the final `Url` of this `Response`.","sig":null,"attributes":[{"value":"/ Get the final `Url` of this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897727,"byte_end":11897770,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897775,"byte_end":11897778,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897783,"byte_end":11897796,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897801,"byte_end":11897804,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897809,"byte_end":11897820,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897825,"byte_end":11897879,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/ let resp = reqwest::blocking::get(\"http://httpbin.org/redirect/1\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897884,"byte_end":11897956,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(resp.url().as_str(), \"http://httpbin.org/get\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11897961,"byte_end":11898023,"line_start":157,"line_end":157,"column_start":5,"column_end":67}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898028,"byte_end":11898040,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898045,"byte_end":11898052,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898057,"byte_end":11898064,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898069,"byte_end":11898078,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898508,"byte_end":11898519,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Response>::remote_addr","value":"pub fn remote_addr(&Self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address used to get this `Response`.","sig":null,"attributes":[{"value":"/ Get the remote address used to get this `Response`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898147,"byte_end":11898202,"line_start":166,"line_end":166,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898207,"byte_end":11898210,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898215,"byte_end":11898228,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898233,"byte_end":11898236,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898241,"byte_end":11898252,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898257,"byte_end":11898311,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ let resp = reqwest::blocking::get(\"http://httpbin.org/redirect/1\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898316,"byte_end":11898388,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/ println!(\"httpbin.org address: {:?}\", resp.remote_addr());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898393,"byte_end":11898455,"line_start":173,"line_end":173,"column_start":5,"column_end":67}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898460,"byte_end":11898472,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898477,"byte_end":11898484,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898489,"byte_end":11898496,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898660,"byte_end":11898670,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Response>::extensions","value":"pub fn extensions(&Self) -> &http::Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the associated extensions.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898595,"byte_end":11898648,"line_start":181,"line_end":181,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898817,"byte_end":11898831,"line_start":187,"line_end":187,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<Response>::extensions_mut","value":"pub fn extensions_mut(&mut Self) -> &mut http::Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the associated extensions.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the associated extensions.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898744,"byte_end":11898805,"line_start":186,"line_end":186,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899214,"byte_end":11899228,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"content_length","qualname":"<Response>::content_length","value":"pub fn content_length(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Get the content-length of the response, if it is known.","sig":null,"attributes":[{"value":"/ Get the content-length of the response, if it is known.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898917,"byte_end":11898976,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898981,"byte_end":11898984,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Reasons it may not be known:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11898989,"byte_end":11899021,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899026,"byte_end":11899029,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ - The server didn't send a `content-length` header.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899034,"byte_end":11899089,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/ - The response is gzipped and automatically decoded (thus changing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899094,"byte_end":11899164,"line_start":196,"line_end":196,"column_start":5,"column_end":75}},{"value":"/   the actual decoded length).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899169,"byte_end":11899202,"line_start":197,"line_end":197,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900438,"byte_end":11900442,"line_start":240,"line_end":240,"column_start":12,"column_end":16},"name":"json","qualname":"<Response>::json","value":"pub fn json<T: DeserializeOwned>(Self) -> crate::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Try and deserialize the response body as JSON using `serde`.","sig":null,"attributes":[{"value":"/ Try and deserialize the response body as JSON using `serde`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899300,"byte_end":11899364,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899369,"byte_end":11899372,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899377,"byte_end":11899391,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899396,"byte_end":11899399,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This requires the optional `json` feature enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899404,"byte_end":11899458,"line_start":206,"line_end":206,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899463,"byte_end":11899466,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899471,"byte_end":11899485,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899490,"byte_end":11899493,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899498,"byte_end":11899509,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899514,"byte_end":11899541,"line_start":211,"line_end":211,"column_start":5,"column_end":32}},{"value":"/ # extern crate serde;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899546,"byte_end":11899571,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899576,"byte_end":11899581,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ # use reqwest::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899586,"byte_end":11899611,"line_start":214,"line_end":214,"column_start":5,"column_end":30}},{"value":"/ # use serde::Deserialize;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899616,"byte_end":11899645,"line_start":215,"line_end":215,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899650,"byte_end":11899655,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ // This `derive` requires the `serde` dependency.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899660,"byte_end":11899713,"line_start":217,"line_end":217,"column_start":5,"column_end":58}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899718,"byte_end":11899744,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/ struct Ip {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899749,"byte_end":11899764,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/     origin: String,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899769,"byte_end":11899792,"line_start":220,"line_end":220,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899797,"byte_end":11899802,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899807,"byte_end":11899810,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899815,"byte_end":11899852,"line_start":223,"line_end":223,"column_start":5,"column_end":42}},{"value":"/ let json: Ip = reqwest::blocking::get(\"http://httpbin.org/ip\")?.json()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899857,"byte_end":11899933,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899938,"byte_end":11899950,"line_start":225,"line_end":225,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899955,"byte_end":11899962,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899967,"byte_end":11899972,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ # fn main() { }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11899977,"byte_end":11899996,"line_start":228,"line_end":228,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900001,"byte_end":11900008,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900013,"byte_end":11900016,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900021,"byte_end":11900033,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900038,"byte_end":11900041,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This method fails whenever the response body is not in JSON format","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900046,"byte_end":11900116,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ or it cannot be properly deserialized to target type `T`. For more","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900121,"byte_end":11900191,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ details please see [`serde_json::from_reader`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900196,"byte_end":11900247,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900252,"byte_end":11900255,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`serde_json::from_reader`]: https://docs.serde.rs/serde_json/fn.from_reader.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900260,"byte_end":11900345,"line_start":237,"line_end":237,"column_start":5,"column_end":90}},{"value":"cfg(feature = \"json\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900350,"byte_end":11900374,"line_start":238,"line_end":238,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901029,"byte_end":11901034,"line_start":259,"line_end":259,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Response>::bytes","value":"pub fn bytes(Self) -> crate::Result<Bytes>","parent":null,"children":[],"decl_id":null,"docs":" Get the full response body as `Bytes`.","sig":null,"attributes":[{"value":"/ Get the full response body as `Bytes`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900698,"byte_end":11900740,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900745,"byte_end":11900748,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900753,"byte_end":11900766,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900771,"byte_end":11900774,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900779,"byte_end":11900786,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ # fn run() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900791,"byte_end":11900849,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/ let bytes = reqwest::blocking::get(\"http://httpbin.org/ip\")?.bytes()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900854,"byte_end":11900928,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900933,"byte_end":11900936,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ println!(\"bytes: {:?}\", bytes);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900941,"byte_end":11900976,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900981,"byte_end":11900993,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11900998,"byte_end":11901005,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901010,"byte_end":11901017,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901868,"byte_end":11901872,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"text","qualname":"<Response>::text","value":"pub fn text(Self) -> crate::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the response text.","sig":null,"attributes":[{"value":"/ Get the response text.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901274,"byte_end":11901300,"line_start":266,"line_end":266,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901305,"byte_end":11901308,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method decodes the response body with BOM sniffing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901313,"byte_end":11901372,"line_start":268,"line_end":268,"column_start":5,"column_end":64}},{"value":"/ and with malformed sequences replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901377,"byte_end":11901450,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ Encoding is determinated from the `charset` parameter of `Content-Type` header,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901455,"byte_end":11901538,"line_start":270,"line_end":270,"column_start":5,"column_end":88}},{"value":"/ and defaults to `utf-8` if not presented.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901543,"byte_end":11901588,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901593,"byte_end":11901596,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901601,"byte_end":11901614,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901619,"byte_end":11901622,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901627,"byte_end":11901638,"line_start":275,"line_end":275,"column_start":5,"column_end":16}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901643,"byte_end":11901670,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901675,"byte_end":11901729,"line_start":277,"line_end":277,"column_start":5,"column_end":59}},{"value":"/ let content = reqwest::blocking::get(\"http://httpbin.org/range/26\")?.text()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901734,"byte_end":11901815,"line_start":278,"line_end":278,"column_start":5,"column_end":86}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901820,"byte_end":11901832,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901837,"byte_end":11901844,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901849,"byte_end":11901856,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902843,"byte_end":11902860,"line_start":306,"line_end":306,"column_start":12,"column_end":29},"name":"text_with_charset","qualname":"<Response>::text_with_charset","value":"pub fn text_with_charset(Self, &str) -> crate::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the response text given a specific encoding.","sig":null,"attributes":[{"value":"/ Get the response text given a specific encoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11901957,"byte_end":11902009,"line_start":286,"line_end":286,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902014,"byte_end":11902017,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This method decodes the response body with BOM sniffing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902022,"byte_end":11902081,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ and with malformed sequences replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902086,"byte_end":11902159,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ You can provide a default encoding for decoding the raw message, while the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902164,"byte_end":11902242,"line_start":290,"line_end":290,"column_start":5,"column_end":83}},{"value":"/ `charset` parameter of `Content-Type` header is still prioritized. For more information","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902247,"byte_end":11902338,"line_start":291,"line_end":291,"column_start":5,"column_end":96}},{"value":"/ about the possible encoding name, please go to [`encoding_rs`] docs.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902343,"byte_end":11902415,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902420,"byte_end":11902423,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`encoding_rs`]: https://docs.rs/encoding_rs/0.8/encoding_rs/#relationship-with-windows-code-pages","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902428,"byte_end":11902530,"line_start":294,"line_end":294,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902535,"byte_end":11902538,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902543,"byte_end":11902556,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902561,"byte_end":11902564,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902569,"byte_end":11902580,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902585,"byte_end":11902612,"line_start":299,"line_end":299,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902617,"byte_end":11902671,"line_start":300,"line_end":300,"column_start":5,"column_end":59}},{"value":"/ let content = reqwest::blocking::get(\"http://httpbin.org/range/26\")?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902676,"byte_end":11902748,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/     .text_with_charset(\"utf-8\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902753,"byte_end":11902790,"line_start":302,"line_end":302,"column_start":5,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902795,"byte_end":11902807,"line_start":303,"line_end":303,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902812,"byte_end":11902819,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11902824,"byte_end":11902831,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903960,"byte_end":11903967,"line_start":335,"line_end":335,"column_start":12,"column_end":19},"name":"copy_to","qualname":"<Response>::copy_to","value":"pub fn copy_to<W: ?Sized>(&mut Self, &mut W) -> crate::Result<u64> where\nW: io::Write","parent":null,"children":[],"decl_id":null,"docs":" Copy the response body into a writer.","sig":null,"attributes":[{"value":"/ Copy the response body into a writer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903189,"byte_end":11903230,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903235,"byte_end":11903238,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This function internally uses [`std::io::copy`] and hence will continuously read data from","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903243,"byte_end":11903337,"line_start":317,"line_end":317,"column_start":5,"column_end":99}},{"value":"/ the body and then write it into writer in a streaming fashion until EOF is met.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903342,"byte_end":11903425,"line_start":318,"line_end":318,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903430,"byte_end":11903433,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ On success, the total number of bytes that were copied to `writer` is returned.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903438,"byte_end":11903521,"line_start":320,"line_end":320,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903526,"byte_end":11903529,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903534,"byte_end":11903602,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903607,"byte_end":11903610,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903615,"byte_end":11903628,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903633,"byte_end":11903636,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903641,"byte_end":11903652,"line_start":326,"line_end":326,"column_start":5,"column_end":16}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903657,"byte_end":11903711,"line_start":327,"line_end":327,"column_start":5,"column_end":59}},{"value":"/ let mut resp = reqwest::blocking::get(\"http://httpbin.org/range/5\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903716,"byte_end":11903789,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ let mut buf: Vec<u8> = vec![];","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903794,"byte_end":11903828,"line_start":329,"line_end":329,"column_start":5,"column_end":39}},{"value":"/ resp.copy_to(&mut buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903833,"byte_end":11903861,"line_start":330,"line_end":330,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(b\"abcde\", buf.as_slice());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903866,"byte_end":11903907,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903912,"byte_end":11903924,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903929,"byte_end":11903936,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11903941,"byte_end":11903948,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904649,"byte_end":11904665,"line_start":358,"line_end":358,"column_start":12,"column_end":28},"name":"error_for_status","qualname":"<Response>::error_for_status","value":"pub fn error_for_status(Self) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a response into an error if the server returned an error.","sig":null,"attributes":[{"value":"/ Turn a response into an error if the server returned an error.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904131,"byte_end":11904197,"line_start":342,"line_end":342,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904202,"byte_end":11904205,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904210,"byte_end":11904223,"line_start":344,"line_end":344,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904228,"byte_end":11904231,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904236,"byte_end":11904254,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904259,"byte_end":11904286,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904291,"byte_end":11904345,"line_start":348,"line_end":348,"column_start":5,"column_end":59}},{"value":"/ let res = reqwest::blocking::get(\"http://httpbin.org/status/400\")?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904350,"byte_end":11904420,"line_start":349,"line_end":349,"column_start":5,"column_end":75}},{"value":"/     .error_for_status();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904425,"byte_end":11904453,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/ if let Err(err) = res {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904458,"byte_end":11904485,"line_start":351,"line_end":351,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(err.status(), Some(reqwest::StatusCode::BAD_REQUEST));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904490,"byte_end":11904563,"line_start":352,"line_end":352,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904568,"byte_end":11904573,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904578,"byte_end":11904590,"line_start":354,"line_end":354,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904595,"byte_end":11904602,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904607,"byte_end":11904625,"line_start":356,"line_end":356,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904630,"byte_end":11904637,"line_start":357,"line_end":357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905540,"byte_end":11905560,"line_start":389,"line_end":389,"column_start":12,"column_end":32},"name":"error_for_status_ref","qualname":"<Response>::error_for_status_ref","value":"pub fn error_for_status_ref(&Self) -> crate::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a reference to a response into an error if the server returned an error.","sig":null,"attributes":[{"value":"/ Turn a reference to a response into an error if the server returned an error.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11904993,"byte_end":11905074,"line_start":373,"line_end":373,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905079,"byte_end":11905082,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905087,"byte_end":11905100,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905105,"byte_end":11905108,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905113,"byte_end":11905131,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905136,"byte_end":11905163,"line_start":378,"line_end":378,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905168,"byte_end":11905222,"line_start":379,"line_end":379,"column_start":5,"column_end":59}},{"value":"/ let res = reqwest::blocking::get(\"http://httpbin.org/status/400\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905227,"byte_end":11905298,"line_start":380,"line_end":380,"column_start":5,"column_end":76}},{"value":"/ let res = res.error_for_status_ref();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905303,"byte_end":11905344,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/ if let Err(err) = res {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905349,"byte_end":11905376,"line_start":382,"line_end":382,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(err.status(), Some(reqwest::StatusCode::BAD_REQUEST));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905381,"byte_end":11905454,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905459,"byte_end":11905464,"line_start":384,"line_end":384,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905469,"byte_end":11905481,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905486,"byte_end":11905493,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905498,"byte_end":11905516,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11905521,"byte_end":11905528,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812657,"byte_end":11812660,"line_start":106,"line_end":106,"column_start":8,"column_end":11},"name":"get","qualname":"::blocking::get","value":"pub fn get<T: crate::IntoUrl>(T) -> crate::Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut method to quickly make a *blocking* `GET` request.","sig":null,"attributes":[{"value":"/ Shortcut method to quickly make a *blocking* `GET` request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811928,"byte_end":11811991,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811992,"byte_end":11811995,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: This function creates a new internal `Client` on each call,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11811996,"byte_end":11812069,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ and so should not be used if making many requests. Create a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812070,"byte_end":11812133,"line_start":83,"line_end":83,"column_start":1,"column_end":64}},{"value":"/ [`Client`](./struct.Client.html) instead.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812134,"byte_end":11812179,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812180,"byte_end":11812183,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812184,"byte_end":11812198,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812199,"byte_end":11812202,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812203,"byte_end":11812214,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"/ # fn run() -> Result<(), reqwest::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812215,"byte_end":11812261,"line_start":89,"line_end":89,"column_start":1,"column_end":47}},{"value":"/ let body = reqwest::blocking::get(\"https://www.rust-lang.org\")?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812262,"byte_end":11812329,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/     .text()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812330,"byte_end":11812347,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812348,"byte_end":11812360,"line_start":92,"line_end":92,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812361,"byte_end":11812368,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ # fn main() { }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812369,"byte_end":11812388,"line_start":94,"line_end":94,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812389,"byte_end":11812396,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812397,"byte_end":11812400,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812401,"byte_end":11812413,"line_start":97,"line_end":97,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812414,"byte_end":11812417,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This function fails if:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812418,"byte_end":11812445,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812446,"byte_end":11812449,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ - native TLS backend cannot be initialized","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812450,"byte_end":11812496,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/ - supplied `Url` cannot be parsed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812497,"byte_end":11812534,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/ - there was an error while sending request","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812535,"byte_end":11812581,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/ - redirect loop was detected","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812582,"byte_end":11812614,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/ - redirect limit was exhausted","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/mod.rs","byte_start":11812615,"byte_end":11812649,"line_start":105,"line_end":105,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953755,"byte_end":11953760,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"Proxy","qualname":"::proxy::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378}],"decl_id":null,"docs":" Configuration of a proxy that a `Client` should pass requests to.","sig":null,"attributes":[{"value":"/ Configuration of a proxy that a `Client` should pass requests to.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952516,"byte_end":11952585,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952586,"byte_end":11952589,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A `Proxy` has a couple pieces to it:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952590,"byte_end":11952630,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952631,"byte_end":11952634,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - a URL of how to talk to the proxy","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952635,"byte_end":11952674,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ - rules on what `Client` requests should be directed to the proxy","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952675,"byte_end":11952744,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952745,"byte_end":11952748,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For instance, let's look at `Proxy::http`:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952749,"byte_end":11952795,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952796,"byte_end":11952799,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952800,"byte_end":11952811,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952812,"byte_end":11952866,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/ let proxy = reqwest::Proxy::http(\"https://secure.example\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952867,"byte_end":11952931,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952932,"byte_end":11952944,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952945,"byte_end":11952952,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952953,"byte_end":11952960,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952961,"byte_end":11952964,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This proxy will intercept all HTTP requests, and make use of the proxy","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11952965,"byte_end":11953039,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ at `https://secure.example`. A request to `http://hyper.rs` will talk","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953040,"byte_end":11953113,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ to your proxy. A request to `https://hyper.rs` will not.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953114,"byte_end":11953174,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953175,"byte_end":11953178,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Multiple `Proxy` rules can be configured for a `Client`. The `Client` will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953179,"byte_end":11953257,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ check each `Proxy` in the order it was added. This could mean that a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953258,"byte_end":11953330,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ `Proxy` added first with eager intercept rules, such as `Proxy::all`,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953331,"byte_end":11953404,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ would prevent a `Proxy` later in the list from ever working, so take care.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953405,"byte_end":11953483,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953484,"byte_end":11953487,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ By enabling the `\"socks\"` feature it is possible to use a socks proxy:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953488,"byte_end":11953562,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953563,"byte_end":11953574,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953575,"byte_end":11953629,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/ let proxy = reqwest::Proxy::http(\"socks5://192.168.1.1:9000\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953630,"byte_end":11953697,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953698,"byte_end":11953710,"line_start":50,"line_end":50,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953711,"byte_end":11953718,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11953719,"byte_end":11953726,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"StructVariant","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11954697,"byte_end":11954701,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"Http","qualname":"::proxy::ProxyScheme::Http","value":"ProxyScheme::Http { auth, host }","parent":{"krate":0,"index":2419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11954786,"byte_end":11954791,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"Https","qualname":"::proxy::ProxyScheme::Https","value":"ProxyScheme::Https { auth, host }","parent":{"krate":0,"index":2419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11954679,"byte_end":11954690,"line_start":87,"line_end":87,"column_start":10,"column_end":21},"name":"ProxyScheme","qualname":"::proxy::ProxyScheme","value":"pub enum ProxyScheme {\n    Http {\n            auth: Option<HeaderValue>,\n            host: http::uri::Authority,\n        },\n    Https {\n            auth: Option<HeaderValue>,\n            host: http::uri::Authority,\n        },\n}","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2423}],"decl_id":null,"docs":" A particular scheme used for proxying requests.","sig":null,"attributes":[{"value":"/ A particular scheme used for proxying requests.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11954565,"byte_end":11954616,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11954617,"byte_end":11954620,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ For example, HTTP vs SOCKS5","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11954621,"byte_end":11954652,"line_start":85,"line_end":85,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955486,"byte_end":11955501,"line_start":117,"line_end":117,"column_start":11,"column_end":26},"name":"IntoProxyScheme","qualname":"::proxy::IntoProxyScheme","value":"IntoProxyScheme","parent":null,"children":[{"krate":0,"index":2030}],"decl_id":null,"docs":" Trait used for converting into a proxy scheme. This trait supports\n parsing from a URL-like type, whilst also supporting proxy schemes\n built directly using the factory methods.\n","sig":null,"attributes":[{"value":"/ Trait used for converting into a proxy scheme. This trait supports","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955288,"byte_end":11955358,"line_start":114,"line_end":114,"column_start":1,"column_end":71}},{"value":"/ parsing from a URL-like type, whilst also supporting proxy schemes","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955359,"byte_end":11955429,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/ built directly using the factory methods.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955430,"byte_end":11955475,"line_start":116,"line_end":116,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955511,"byte_end":11955528,"line_start":118,"line_end":118,"column_start":8,"column_end":25},"name":"into_proxy_scheme","qualname":"::proxy::IntoProxyScheme::into_proxy_scheme","value":"pub fn into_proxy_scheme(Self) -> crate::Result<ProxyScheme>","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957072,"byte_end":11957076,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"http","qualname":"<Proxy>::http","value":"pub fn http<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy all HTTP traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy all HTTP traffic to the passed URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956682,"byte_end":11956727,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956732,"byte_end":11956735,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956740,"byte_end":11956753,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956758,"byte_end":11956761,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956766,"byte_end":11956773,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956778,"byte_end":11956805,"line_start":163,"line_end":163,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956810,"byte_end":11956864,"line_start":164,"line_end":164,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956869,"byte_end":11956912,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::http(\"https://my.prox\")?)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956917,"byte_end":11956973,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956978,"byte_end":11956996,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957001,"byte_end":11957013,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957018,"byte_end":11957025,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957030,"byte_end":11957048,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957053,"byte_end":11957060,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957651,"byte_end":11957656,"line_start":192,"line_end":192,"column_start":12,"column_end":17},"name":"https","qualname":"<Proxy>::https","value":"pub fn https<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy all HTTPS traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy all HTTPS traffic to the passed URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957249,"byte_end":11957295,"line_start":178,"line_end":178,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957300,"byte_end":11957303,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957308,"byte_end":11957321,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957326,"byte_end":11957329,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957334,"byte_end":11957341,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957346,"byte_end":11957373,"line_start":183,"line_end":183,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957378,"byte_end":11957432,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957437,"byte_end":11957480,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::https(\"https://example.prox:4545\")?)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957485,"byte_end":11957552,"line_start":186,"line_end":186,"column_start":5,"column_end":72}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957557,"byte_end":11957575,"line_start":187,"line_end":187,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957580,"byte_end":11957592,"line_start":188,"line_end":188,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957597,"byte_end":11957604,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957609,"byte_end":11957627,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957632,"byte_end":11957639,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958216,"byte_end":11958219,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"all","qualname":"<Proxy>::all","value":"pub fn all<U: IntoProxyScheme>(U) -> crate::Result<Proxy>","parent":null,"children":[],"decl_id":null,"docs":" Proxy **all** traffic to the passed URL.","sig":null,"attributes":[{"value":"/ Proxy **all** traffic to the passed URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957830,"byte_end":11957874,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957879,"byte_end":11957882,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957887,"byte_end":11957900,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957905,"byte_end":11957908,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957913,"byte_end":11957920,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957925,"byte_end":11957952,"line_start":203,"line_end":203,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11957957,"byte_end":11958011,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958016,"byte_end":11958059,"line_start":205,"line_end":205,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::all(\"http://pro.xy\")?)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958064,"byte_end":11958117,"line_start":206,"line_end":206,"column_start":5,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958122,"byte_end":11958140,"line_start":207,"line_end":207,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958145,"byte_end":11958157,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958162,"byte_end":11958169,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958174,"byte_end":11958192,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958197,"byte_end":11958204,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959035,"byte_end":11959041,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"custom","qualname":"<Proxy>::custom","value":"pub fn custom<F, U: IntoProxyScheme>(F) -> Proxy where F: Fn(&Url) ->\nOption<U> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide a custom function to determine what traffic to proxy to where.","sig":null,"attributes":[{"value":"/ Provide a custom function to determine what traffic to proxy to where.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958391,"byte_end":11958465,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958470,"byte_end":11958473,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958478,"byte_end":11958491,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958496,"byte_end":11958499,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958504,"byte_end":11958511,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958516,"byte_end":11958543,"line_start":223,"line_end":223,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958548,"byte_end":11958602,"line_start":224,"line_end":224,"column_start":5,"column_end":59}},{"value":"/ let target = reqwest::Url::parse(\"https://my.prox\")?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958607,"byte_end":11958664,"line_start":225,"line_end":225,"column_start":5,"column_end":62}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958669,"byte_end":11958712,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/     .proxy(reqwest::Proxy::custom(move |url| {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958717,"byte_end":11958767,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/         if url.host_str() == Some(\"hyper.rs\") {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958772,"byte_end":11958823,"line_start":228,"line_end":228,"column_start":5,"column_end":56}},{"value":"/             Some(target.clone())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958828,"byte_end":11958864,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/         } else {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958869,"byte_end":11958889,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/             None","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958894,"byte_end":11958914,"line_start":231,"line_end":231,"column_start":5,"column_end":25}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958919,"byte_end":11958932,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/     }))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958937,"byte_end":11958948,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958953,"byte_end":11958971,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958976,"byte_end":11958988,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11958993,"byte_end":11959000,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959005,"byte_end":11959023,"line_start":237,"line_end":237,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11960245,"byte_end":11960255,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"basic_auth","qualname":"<Proxy>::basic_auth","value":"pub fn basic_auth(Self, &str, &str) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" Set the `Proxy-Authorization` header using Basic auth.","sig":null,"attributes":[{"value":"/ Set the `Proxy-Authorization` header using Basic auth.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959855,"byte_end":11959913,"line_start":267,"line_end":267,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959918,"byte_end":11959921,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959926,"byte_end":11959939,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959944,"byte_end":11959947,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959952,"byte_end":11959959,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # extern crate reqwest;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959964,"byte_end":11959991,"line_start":272,"line_end":272,"column_start":5,"column_end":32}},{"value":"/ # fn run() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11959996,"byte_end":11960050,"line_start":273,"line_end":273,"column_start":5,"column_end":59}},{"value":"/ let proxy = reqwest::Proxy::https(\"http://localhost:1234\")?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11960055,"byte_end":11960118,"line_start":274,"line_end":274,"column_start":5,"column_end":68}},{"value":"/     .basic_auth(\"Aladdin\", \"open sesame\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11960123,"byte_end":11960169,"line_start":275,"line_end":275,"column_start":5,"column_end":51}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11960174,"byte_end":11960186,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11960191,"byte_end":11960198,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11960203,"byte_end":11960221,"line_start":278,"line_end":278,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11960226,"byte_end":11960233,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"redirect","qualname":"::redirect","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2466},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2152},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2171},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2478},{"krate":0,"index":2486},{"krate":0,"index":2184},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2185},{"krate":0,"index":2187}],"decl_id":null,"docs":" Redirect Handling","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7716,"byte_end":7751,"line_start":215,"line_end":215,"column_start":9,"column_end":44}},{"value":"/ Redirect Handling","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12002797,"byte_end":12002818,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12002819,"byte_end":12002822,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will automatically handle HTTP redirects, having a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12002823,"byte_end":12002900,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ maximum redirect chain of 10 hops. To customize this behavior, a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12002901,"byte_end":12002969,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ `redirect::Policy` can be used with a `ClientBuilder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12002970,"byte_end":12003028,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003702,"byte_end":12003708,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Policy","qualname":"::redirect::Policy","value":"Policy {  }","parent":null,"children":[{"krate":0,"index":2151}],"decl_id":null,"docs":" A type that controls the policy on how to handle the following of redirects.","sig":null,"attributes":[{"value":"/ A type that controls the policy on how to handle the following of redirects.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003215,"byte_end":12003295,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003296,"byte_end":12003299,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The default value will catch redirect loops, and has a maximum of 10","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003300,"byte_end":12003372,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ redirects it will follow in a chain before returning an error.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003373,"byte_end":12003439,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003440,"byte_end":12003443,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `limited` can be used have the same as the default behavior, but adjust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003444,"byte_end":12003521,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   the allowed maximum redirect hops in a chain.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003522,"byte_end":12003573,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/ - `none` can be used to disable all redirect behavior.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003574,"byte_end":12003632,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ - `custom` can be used to create a customized policy.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003633,"byte_end":12003690,"line_start":23,"line_end":23,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003864,"byte_end":12003871,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Attempt","qualname":"::redirect::Attempt","value":"Attempt {  }","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"decl_id":null,"docs":" A type that holds information on the next request and previous requests\n in redirect chain.\n","sig":null,"attributes":[{"value":"/ A type that holds information on the next request and previous requests","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003737,"byte_end":12003812,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ in redirect chain.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003813,"byte_end":12003835,"line_start":29,"line_end":29,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004040,"byte_end":12004046,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Action","qualname":"::redirect::Action","value":"Action {  }","parent":null,"children":[{"krate":0,"index":2475}],"decl_id":null,"docs":" An action to perform when a redirect status code is found.\n","sig":null,"attributes":[{"value":"/ An action to perform when a redirect status code is found.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12003949,"byte_end":12004011,"line_start":37,"line_end":37,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004229,"byte_end":12004236,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"limited","qualname":"<Policy>::limited","value":"pub fn limited(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Policy` with a maximum number of redirects.","sig":null,"attributes":[{"value":"/ Create a `Policy` with a maximum number of redirects.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004093,"byte_end":12004150,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004155,"byte_end":12004158,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ An `Error` will be returned if the max is reached.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004163,"byte_end":12004217,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004406,"byte_end":12004410,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"none","qualname":"<Policy>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Policy` that does not follow any redirect.\n","sig":null,"attributes":[{"value":"/ Create a `Policy` that does not follow any redirect.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004338,"byte_end":12004394,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005759,"byte_end":12005765,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"custom","qualname":"<Policy>::custom","value":"pub fn custom<T>(T) -> Self where T: Fn(Attempt) -> Action + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Create a custom `Policy` using the passed function.","sig":null,"attributes":[{"value":"/ Create a custom `Policy` using the passed function.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004496,"byte_end":12004551,"line_start":60,"line_end":60,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004556,"byte_end":12004559,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004564,"byte_end":12004574,"line_start":62,"line_end":62,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004579,"byte_end":12004582,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The default `Policy` handles a maximum loop","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004587,"byte_end":12004634,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ chain, but the custom variant does not do that for you automatically.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004639,"byte_end":12004712,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ The custom policy should have some way of handling those.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004717,"byte_end":12004778,"line_start":66,"line_end":66,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004783,"byte_end":12004786,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Information on the next request and previous requests can be found","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004791,"byte_end":12004861,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ on the [`Attempt`] argument passed to the closure.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004866,"byte_end":12004920,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004925,"byte_end":12004928,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Actions can be conveniently created from methods on the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004933,"byte_end":12004992,"line_start":71,"line_end":71,"column_start":5,"column_end":64}},{"value":"/ [`Attempt`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004997,"byte_end":12005013,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005018,"byte_end":12005021,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005026,"byte_end":12005039,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005044,"byte_end":12005047,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005052,"byte_end":12005063,"line_start":76,"line_end":76,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::{Error, redirect};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005068,"byte_end":12005105,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005110,"byte_end":12005115,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005120,"byte_end":12005157,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/ let custom = redirect::Policy::custom(|attempt| {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005162,"byte_end":12005215,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/     if attempt.previous().len() > 5 {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005220,"byte_end":12005261,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/         attempt.error(\"too many redirects\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005266,"byte_end":12005313,"line_start":82,"line_end":82,"column_start":5,"column_end":52}},{"value":"/     } else if attempt.url().host_str() == Some(\"example.domain\") {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005318,"byte_end":12005388,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/         // prevent redirects to 'example.domain'","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005393,"byte_end":12005445,"line_start":84,"line_end":84,"column_start":5,"column_end":57}},{"value":"/         attempt.stop()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005450,"byte_end":12005476,"line_start":85,"line_end":85,"column_start":5,"column_end":31}},{"value":"/     } else {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005481,"byte_end":12005497,"line_start":86,"line_end":86,"column_start":5,"column_end":21}},{"value":"/         attempt.follow()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005502,"byte_end":12005530,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005535,"byte_end":12005544,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005549,"byte_end":12005556,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ let client = reqwest::Client::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005561,"byte_end":12005604,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/     .redirect(custom)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005609,"byte_end":12005634,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005639,"byte_end":12005657,"line_start":92,"line_end":92,"column_start":5,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005662,"byte_end":12005674,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005679,"byte_end":12005686,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005691,"byte_end":12005698,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005703,"byte_end":12005706,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`Attempt`]: struct.Attempt.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005711,"byte_end":12005747,"line_start":97,"line_end":97,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006577,"byte_end":12006585,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"redirect","qualname":"<Policy>::redirect","value":"pub fn redirect(&Self, Attempt) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Apply this policy to a given [`Attempt`] to produce a [`Action`].","sig":null,"attributes":[{"value":"/ Apply this policy to a given [`Attempt`] to produce a [`Action`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12005955,"byte_end":12006024,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006029,"byte_end":12006032,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006037,"byte_end":12006047,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006052,"byte_end":12006055,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This method can be used together with `Policy::custom()`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006060,"byte_end":12006120,"line_start":111,"line_end":111,"column_start":5,"column_end":65}},{"value":"/ to construct one `Policy` that wraps another.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006125,"byte_end":12006174,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006179,"byte_end":12006182,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006187,"byte_end":12006200,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006205,"byte_end":12006208,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006213,"byte_end":12006224,"line_start":116,"line_end":116,"column_start":5,"column_end":16}},{"value":"/ # use reqwest::{Error, redirect};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006229,"byte_end":12006266,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006271,"byte_end":12006276,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # fn run() -> Result<(), Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006281,"byte_end":12006318,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ let custom = redirect::Policy::custom(|attempt| {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006323,"byte_end":12006376,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"/     eprintln!(\"{}, Location: {:?}\", attempt.status(), attempt.url());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006381,"byte_end":12006454,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/     redirect::Policy::default().redirect(attempt)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006459,"byte_end":12006512,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006517,"byte_end":12006524,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006529,"byte_end":12006541,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006546,"byte_end":12006553,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12006558,"byte_end":12006565,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007541,"byte_end":12007547,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"status","qualname":"<Attempt>::status","value":"pub fn status(&Self) -> StatusCode","parent":null,"children":[],"decl_id":null,"docs":" Get the type of redirect.\n","sig":null,"attributes":[{"value":"/ Get the type of redirect.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007500,"byte_end":12007529,"line_start":163,"line_end":163,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007650,"byte_end":12007653,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"url","qualname":"<Attempt>::url","value":"pub fn url(&Self) -> &Url","parent":null,"children":[],"decl_id":null,"docs":" Get the next URL to redirect to.\n","sig":null,"attributes":[{"value":"/ Get the next URL to redirect to.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007602,"byte_end":12007638,"line_start":168,"line_end":168,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007793,"byte_end":12007801,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"previous","qualname":"<Attempt>::previous","value":"pub fn previous(&Self) -> &[Url]","parent":null,"children":[],"decl_id":null,"docs":" Get the list of previous URLs that have already been requested in this chain.\n","sig":null,"attributes":[{"value":"/ Get the list of previous URLs that have already been requested in this chain.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007700,"byte_end":12007781,"line_start":173,"line_end":173,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007930,"byte_end":12007936,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"follow","qualname":"<Attempt>::follow","value":"pub fn follow(Self) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action meaning reqwest should follow the next URL.\n","sig":null,"attributes":[{"value":"/ Returns an action meaning reqwest should follow the next URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007853,"byte_end":12007918,"line_start":177,"line_end":177,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008183,"byte_end":12008187,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"stop","qualname":"<Attempt>::stop","value":"pub fn stop(Self) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action meaning reqwest should not follow the next URL.","sig":null,"attributes":[{"value":"/ Returns an action meaning reqwest should not follow the next URL.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008032,"byte_end":12008101,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008106,"byte_end":12008109,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The 30x response will be returned as the `Ok` result.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008114,"byte_end":12008171,"line_start":186,"line_end":186,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008431,"byte_end":12008436,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"error","qualname":"<Attempt>::error","value":"pub fn error<E: Into<Box<dyn StdError + Send + Sync>>>(Self, E) -> Action","parent":null,"children":[],"decl_id":null,"docs":" Returns an action failing the redirect with an error.","sig":null,"attributes":[{"value":"/ Returns an action failing the redirect with an error.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008281,"byte_end":12008338,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008343,"byte_end":12008346,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The `Error` will be returned for the result of the sent request.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008351,"byte_end":12008419,"line_start":195,"line_end":195,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tls","qualname":"::tls","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2503},{"krate":0,"index":2505},{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":2513},{"krate":0,"index":2211},{"krate":0,"index":2219},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2233},{"krate":0,"index":2239},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253}],"decl_id":null,"docs":" TLS configuration","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":7716,"byte_end":7751,"line_start":215,"line_end":215,"column_start":9,"column_end":44}},{"value":"cfg(feature = \"__tls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":10121,"byte_end":10146,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/ TLS configuration","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012315,"byte_end":12012336,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012337,"byte_end":12012340,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, a `Client` will make use of system-native transport layer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012341,"byte_end":12012414,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ security to connect to HTTPS destinations. This means schannel on Windows,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012415,"byte_end":12012493,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ Security-Framework on macOS, and OpenSSL on Linux.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012494,"byte_end":12012548,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012549,"byte_end":12012552,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - Additional X509 certificates can be configured on a `ClientBuilder` with the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012553,"byte_end":12012635,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/   [`Certificate`](Certificate) type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012636,"byte_end":12012676,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/ - Client certificates can be add to a `ClientBuilder` with the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012677,"byte_end":12012743,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/   [`Identity`][Identity] type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012744,"byte_end":12012778,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ - Various parts of TLS can also be configured or even disabled on the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012779,"byte_end":12012852,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/   `ClientBuilder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12012853,"byte_end":12012875,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013186,"byte_end":12013197,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"Certificate","qualname":"::tls::Certificate","value":"Certificate {  }","parent":null,"children":[{"krate":0,"index":2493}],"decl_id":null,"docs":" Represents a server X509 certificate.\n","sig":null,"attributes":[{"value":"/ Represents a server X509 certificate.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013116,"byte_end":12013157,"line_start":21,"line_end":21,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013533,"byte_end":12013541,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Identity","qualname":"::tls::Identity","value":"Identity {  }","parent":null,"children":[{"krate":0,"index":2506}],"decl_id":null,"docs":" Represents a private key and X509 cert as a client certificate.\n","sig":null,"attributes":[{"value":"/ Represents a private key and X509 cert as a client certificate.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013437,"byte_end":12013504,"line_start":37,"line_end":37,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014385,"byte_end":12014393,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Certificate>::from_der","value":"pub fn from_der(&[u8]) -> crate::Result<Certificate>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Certificate` from a binary DER encoded certificate","sig":null,"attributes":[{"value":"/ Create a `Certificate` from a binary DER encoded certificate","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013917,"byte_end":12013981,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013986,"byte_end":12013989,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013994,"byte_end":12014008,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014013,"byte_end":12014016,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014021,"byte_end":12014028,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014033,"byte_end":12014057,"line_start":61,"line_end":61,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014062,"byte_end":12014086,"line_start":62,"line_end":62,"column_start":5,"column_end":29}},{"value":"/ # fn cert() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014091,"byte_end":12014146,"line_start":63,"line_end":63,"column_start":5,"column_end":60}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014151,"byte_end":12014180,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/ File::open(\"my_cert.der\")?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014185,"byte_end":12014215,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"/     .read_to_end(&mut buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014220,"byte_end":12014252,"line_start":66,"line_end":66,"column_start":5,"column_end":37}},{"value":"/ let cert = reqwest::Certificate::from_der(&buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014257,"byte_end":12014310,"line_start":67,"line_end":67,"column_start":5,"column_end":58}},{"value":"/ # drop(cert);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014315,"byte_end":12014332,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014337,"byte_end":12014349,"line_start":69,"line_end":69,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014354,"byte_end":12014361,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014366,"byte_end":12014373,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12015183,"byte_end":12015191,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Certificate>::from_pem","value":"pub fn from_pem(&[u8]) -> crate::Result<Certificate>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Certificate` from a PEM encoded certificate","sig":null,"attributes":[{"value":"/ Create a `Certificate` from a PEM encoded certificate","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014722,"byte_end":12014779,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014784,"byte_end":12014787,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014792,"byte_end":12014806,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014811,"byte_end":12014814,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014819,"byte_end":12014826,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014831,"byte_end":12014855,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014860,"byte_end":12014884,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/ # fn cert() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014889,"byte_end":12014944,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014949,"byte_end":12014978,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/ File::open(\"my_cert.pem\")?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12014983,"byte_end":12015013,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/     .read_to_end(&mut buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12015018,"byte_end":12015050,"line_start":91,"line_end":91,"column_start":5,"column_end":37}},{"value":"/ let cert = reqwest::Certificate::from_pem(&buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12015055,"byte_end":12015108,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/ # drop(cert);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12015113,"byte_end":12015130,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12015135,"byte_end":12015147,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12015152,"byte_end":12015159,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12015164,"byte_end":12015171,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018961,"byte_end":12018969,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<Identity>::from_pem","value":"pub fn from_pem(&[u8]) -> crate::Result<Identity>","parent":null,"children":[],"decl_id":null,"docs":" Parses PEM encoded private key and certificate.","sig":null,"attributes":[{"value":"/ Parses PEM encoded private key and certificate.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018189,"byte_end":12018240,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018245,"byte_end":12018248,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The input should contain a PEM encoded private key","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018253,"byte_end":12018307,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/ and at least one PEM encoded certificate.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018312,"byte_end":12018357,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018362,"byte_end":12018365,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note: The private key must be in RSA or PKCS#8 format.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018370,"byte_end":12018428,"line_start":187,"line_end":187,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018433,"byte_end":12018436,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018441,"byte_end":12018455,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018460,"byte_end":12018463,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018468,"byte_end":12018475,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018480,"byte_end":12018504,"line_start":192,"line_end":192,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Read;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018509,"byte_end":12018533,"line_start":193,"line_end":193,"column_start":5,"column_end":29}},{"value":"/ # fn pem() -> Result<(), Box<std::error::Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018538,"byte_end":12018592,"line_start":194,"line_end":194,"column_start":5,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018597,"byte_end":12018626,"line_start":195,"line_end":195,"column_start":5,"column_end":34}},{"value":"/ File::open(\"my-ident.pem\")?","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018631,"byte_end":12018662,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/     .read_to_end(&mut buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018667,"byte_end":12018699,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let id = reqwest::Identity::from_pem(&buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018704,"byte_end":12018752,"line_start":198,"line_end":198,"column_start":5,"column_end":53}},{"value":"/ # drop(id);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018757,"byte_end":12018772,"line_start":199,"line_end":199,"column_start":5,"column_end":20}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018777,"byte_end":12018789,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018794,"byte_end":12018801,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018806,"byte_end":12018813,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018818,"byte_end":12018821,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018826,"byte_end":12018840,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018845,"byte_end":12018848,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This requires the `rustls-tls(-...)` Cargo feature enabled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018853,"byte_end":12018916,"line_start":206,"line_end":206,"column_start":5,"column_end":68}},{"value":"cfg(feature = \"__rustls\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12018921,"byte_end":12018949,"line_start":207,"line_end":207,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022216,"byte_end":12022223,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"Version","qualname":"::tls::Version","value":"","parent":null,"children":[],"decl_id":null,"docs":" A TLS protocol version.\n","sig":null,"attributes":[{"value":"/ A TLS protocol version.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022115,"byte_end":12022142,"line_start":299,"line_end":299,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022582,"byte_end":12022589,"line_start":316,"line_end":316,"column_start":15,"column_end":22},"name":"TLS_1_0","qualname":"::tls::Version::TLS_1_0","value":"Version","parent":{"krate":0,"index":2233},"children":[],"decl_id":null,"docs":" Version 1.0 of the TLS protocol.\n","sig":null,"attributes":[{"value":"/ Version 1.0 of the TLS protocol.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022531,"byte_end":12022567,"line_start":315,"line_end":315,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022687,"byte_end":12022694,"line_start":318,"line_end":318,"column_start":15,"column_end":22},"name":"TLS_1_1","qualname":"::tls::Version::TLS_1_1","value":"Version","parent":{"krate":0,"index":2233},"children":[],"decl_id":null,"docs":" Version 1.1 of the TLS protocol.\n","sig":null,"attributes":[{"value":"/ Version 1.1 of the TLS protocol.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022636,"byte_end":12022672,"line_start":317,"line_end":317,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022792,"byte_end":12022799,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"name":"TLS_1_2","qualname":"::tls::Version::TLS_1_2","value":"Version","parent":{"krate":0,"index":2233},"children":[],"decl_id":null,"docs":" Version 1.2 of the TLS protocol.\n","sig":null,"attributes":[{"value":"/ Version 1.2 of the TLS protocol.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022741,"byte_end":12022777,"line_start":319,"line_end":319,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022897,"byte_end":12022904,"line_start":322,"line_end":322,"column_start":15,"column_end":22},"name":"TLS_1_3","qualname":"::tls::Version::TLS_1_3","value":"Version","parent":{"krate":0,"index":2233},"children":[],"decl_id":null,"docs":" Version 1.3 of the TLS protocol.\n","sig":null,"attributes":[{"value":"/ Version 1.3 of the TLS protocol.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022846,"byte_end":12022882,"line_start":321,"line_end":321,"column_start":5,"column_end":41}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11124,"byte_end":11129,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":14890,"byte_end":14895,"line_start":163,"line_end":163,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":15331,"byte_end":15336,"line_start":180,"line_end":180,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":16396,"byte_end":16401,"line_start":211,"line_end":211,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":18487,"byte_end":18495,"line_start":301,"line_end":301,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":18627,"byte_end":18635,"line_start":307,"line_end":307,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20396,"byte_end":20399,"line_start":9,"line_end":9,"column_start":18,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20420,"byte_end":20426,"line_start":10,"line_end":10,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20765,"byte_end":20768,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":21437,"byte_end":21443,"line_start":56,"line_end":56,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22630,"byte_end":22637,"line_start":15,"line_end":15,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11674126,"byte_end":11674130,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11677459,"byte_end":11677463,"line_start":169,"line_end":169,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11677709,"byte_end":11677713,"line_start":181,"line_end":181,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11677828,"byte_end":11677832,"line_start":188,"line_end":188,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11677958,"byte_end":11677962,"line_start":195,"line_end":195,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11678096,"byte_end":11678100,"line_start":202,"line_end":202,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11678220,"byte_end":11678224,"line_start":209,"line_end":209,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11678549,"byte_end":11678553,"line_start":225,"line_end":225,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11678714,"byte_end":11678724,"line_start":233,"line_end":233,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11680579,"byte_end":11680589,"line_start":292,"line_end":292,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11680820,"byte_end":11680830,"line_start":302,"line_end":302,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11681495,"byte_end":11681504,"line_start":330,"line_end":330,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11686203,"byte_end":11686216,"line_start":122,"line_end":122,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11686280,"byte_end":11686293,"line_start":128,"line_end":128,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727874,"byte_end":11727880,"line_start":1265,"line_end":1265,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727944,"byte_end":11727950,"line_start":1271,"line_end":1271,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11734786,"byte_end":11734792,"line_start":1490,"line_end":1490,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11735005,"byte_end":11735018,"line_start":1498,"line_end":1498,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11735224,"byte_end":11735230,"line_start":1506,"line_end":1506,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11738010,"byte_end":11738019,"line_start":1609,"line_end":1609,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11739421,"byte_end":11739435,"line_start":1675,"line_end":1675,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11741303,"byte_end":11741310,"line_start":1741,"line_end":1741,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11741574,"byte_end":11741581,"line_start":1753,"line_end":1753,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11742048,"byte_end":11742062,"line_start":1767,"line_end":1767,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11748966,"byte_end":11748973,"line_start":1929,"line_end":1929,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11752830,"byte_end":11752837,"line_start":81,"line_end":81,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11752956,"byte_end":11752963,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11756668,"byte_end":11756675,"line_start":211,"line_end":211,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11758797,"byte_end":11758804,"line_start":257,"line_end":257,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11759567,"byte_end":11759574,"line_start":285,"line_end":285,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11761229,"byte_end":11761237,"line_start":331,"line_end":331,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11761675,"byte_end":11761682,"line_start":345,"line_end":345,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11763130,"byte_end":11763137,"line_start":407,"line_end":407,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764509,"byte_end":11764516,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11767304,"byte_end":11767318,"line_start":165,"line_end":165,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11779310,"byte_end":11779317,"line_start":532,"line_end":532,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11779482,"byte_end":11779496,"line_start":538,"line_end":538,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11781057,"byte_end":11781064,"line_start":585,"line_end":585,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11781655,"byte_end":11781666,"line_start":612,"line_end":612,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11796536,"byte_end":11796544,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1023},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11807574,"byte_end":11807582,"line_start":402,"line_end":402,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11807887,"byte_end":11807895,"line_start":412,"line_end":412,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11808637,"byte_end":11808641,"line_start":434,"line_end":434,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813347,"byte_end":11813351,"line_start":27,"line_end":27,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11817810,"byte_end":11817814,"line_start":160,"line_end":160,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818020,"byte_end":11818024,"line_start":169,"line_end":169,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818172,"byte_end":11818176,"line_start":178,"line_end":178,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818294,"byte_end":11818298,"line_start":185,"line_end":185,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818471,"byte_end":11818475,"line_start":194,"line_end":194,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818588,"byte_end":11818592,"line_start":201,"line_end":201,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818798,"byte_end":11818802,"line_start":210,"line_end":210,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818939,"byte_end":11818943,"line_start":219,"line_end":219,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11819326,"byte_end":11819337,"line_start":233,"line_end":233,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11822645,"byte_end":11822651,"line_start":335,"line_end":335,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825061,"byte_end":11825074,"line_start":74,"line_end":74,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825138,"byte_end":11825151,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850111,"byte_end":11850124,"line_start":774,"line_end":774,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850305,"byte_end":11850311,"line_start":783,"line_end":783,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850375,"byte_end":11850381,"line_start":789,"line_end":789,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853843,"byte_end":11853849,"line_start":897,"line_end":897,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11854164,"byte_end":11854177,"line_start":907,"line_end":907,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11854652,"byte_end":11854669,"line_start":927,"line_end":927,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11855100,"byte_end":11855112,"line_start":943,"line_end":943,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11860114,"byte_end":11860121,"line_start":1086,"line_end":1086,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11860356,"byte_end":11860375,"line_start":1095,"line_end":1095,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861789,"byte_end":11861796,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11864813,"byte_end":11864827,"line_start":154,"line_end":154,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11880161,"byte_end":11880168,"line_start":622,"line_end":622,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11880776,"byte_end":11880783,"line_start":646,"line_end":646,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894268,"byte_end":11894276,"line_start":28,"line_end":28,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894392,"byte_end":11894400,"line_start":34,"line_end":34,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1589},{"krate":0,"index":1591},{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11906138,"byte_end":11906146,"line_start":408,"line_end":408,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11906575,"byte_end":11906583,"line_start":420,"line_end":420,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/wait.rs","byte_start":11908513,"byte_end":11908524,"line_start":63,"line_end":63,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11910225,"byte_end":11910238,"line_start":44,"line_end":44,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11912559,"byte_end":11912572,"line_start":104,"line_end":104,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11915524,"byte_end":11915533,"line_start":187,"line_end":187,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1780},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11928650,"byte_end":11928659,"line_start":550,"line_end":550,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11929641,"byte_end":11929642,"line_start":583,"line_end":583,"column_start":92,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11930112,"byte_end":11930116,"line_start":599,"line_end":599,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11930238,"byte_end":11930242,"line_start":605,"line_end":605,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11930496,"byte_end":11930500,"line_start":616,"line_end":616,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11936834,"byte_end":11936847,"line_start":836,"line_end":836,"column_start":73,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11937195,"byte_end":11937208,"line_start":846,"line_end":846,"column_start":59,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11937547,"byte_end":11937560,"line_start":857,"line_end":857,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11940718,"byte_end":11940724,"line_start":969,"line_end":969,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11941226,"byte_end":11941247,"line_start":992,"line_end":992,"column_start":56,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11941896,"byte_end":11941920,"line_start":1016,"line_end":1016,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11942181,"byte_end":11942205,"line_start":1025,"line_end":1025,"column_start":40,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11943748,"byte_end":11943755,"line_start":1073,"line_end":1073,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11944313,"byte_end":11944320,"line_start":1092,"line_end":1092,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11944479,"byte_end":11944486,"line_start":1098,"line_end":1098,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11945105,"byte_end":11945112,"line_start":1115,"line_end":1115,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11946502,"byte_end":11946508,"line_start":1160,"line_end":1160,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955022,"byte_end":11955033,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955606,"byte_end":11955607,"line_start":121,"line_end":121,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956562,"byte_end":11956573,"line_start":151,"line_end":151,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956670,"byte_end":11956675,"line_start":157,"line_end":157,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2062},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11962823,"byte_end":11962828,"line_start":354,"line_end":354,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11963028,"byte_end":11963035,"line_start":363,"line_end":363,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11965728,"byte_end":11965737,"line_start":427,"line_end":427,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11966217,"byte_end":11966230,"line_start":447,"line_end":447,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11967400,"byte_end":11967411,"line_start":474,"line_end":474,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11972480,"byte_end":11972491,"line_start":631,"line_end":631,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11973327,"byte_end":11973336,"line_start":661,"line_end":661,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11974084,"byte_end":11974090,"line_start":683,"line_end":683,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11974599,"byte_end":11974605,"line_start":701,"line_end":701,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11975304,"byte_end":11975307,"line_start":725,"line_end":725,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004080,"byte_end":12004086,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007361,"byte_end":12007367,"line_start":155,"line_end":155,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007482,"byte_end":12007489,"line_start":162,"line_end":162,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008732,"byte_end":12008738,"line_start":209,"line_end":209,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008889,"byte_end":12008899,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12009925,"byte_end":12009941,"line_start":251,"line_end":251,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2186}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12010076,"byte_end":12010092,"line_start":257,"line_end":257,"column_start":19,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013899,"byte_end":12013910,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12016653,"byte_end":12016661,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12021843,"byte_end":12021854,"line_start":287,"line_end":287,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12021992,"byte_end":12022000,"line_start":293,"line_end":293,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022517,"byte_end":12022524,"line_start":314,"line_end":314,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12024385,"byte_end":12024395,"line_start":361,"line_end":361,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12025091,"byte_end":12025101,"line_start":378,"line_end":378,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12025479,"byte_end":12025489,"line_start":396,"line_end":396,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":9954,"byte_end":9962,"line_start":311,"line_end":311,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":1044}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":10107,"byte_end":10115,"line_start":318,"line_end":318,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":2121}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/lib.rs","byte_start":10159,"byte_end":10162,"line_start":320,"line_end":320,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2188}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":11124,"byte_end":11129,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":14890,"byte_end":14895,"line_start":163,"line_end":163,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":15331,"byte_end":15336,"line_start":180,"line_end":180,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":16396,"byte_end":16401,"line_start":211,"line_end":211,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":18487,"byte_end":18495,"line_start":301,"line_end":301,"column_start":23,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/error.rs","byte_start":18627,"byte_end":18635,"line_start":307,"line_end":307,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20361,"byte_end":20374,"line_start":7,"line_end":7,"column_start":20,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":100},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20396,"byte_end":20399,"line_start":9,"line_end":9,"column_start":18,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":22,"index":908},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20420,"byte_end":20426,"line_start":10,"line_end":10,"column_start":18,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":20765,"byte_end":20768,"line_start":22,"line_end":22,"column_start":24,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":22,"index":908},"to":{"krate":0,"index":100}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/into_url.rs","byte_start":21437,"byte_end":21443,"line_start":56,"line_end":56,"column_start":28,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":100}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/response.rs","byte_start":22630,"byte_end":22637,"line_start":15,"line_end":15,"column_start":45,"column_end":52},"kind":{"Impl":{"id":10}},"from":{"krate":18,"index":3092},"to":{"krate":0,"index":122}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11674126,"byte_end":11674130,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11677459,"byte_end":11677463,"line_start":169,"line_end":169,"column_start":28,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11677709,"byte_end":11677713,"line_start":181,"line_end":181,"column_start":22,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11677828,"byte_end":11677832,"line_start":188,"line_end":188,"column_start":24,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11677958,"byte_end":11677962,"line_start":195,"line_end":195,"column_start":30,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11678096,"byte_end":11678100,"line_start":202,"line_end":202,"column_start":23,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11678220,"byte_end":11678224,"line_start":209,"line_end":209,"column_start":29,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11678549,"byte_end":11678553,"line_start":225,"line_end":225,"column_start":21,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11678714,"byte_end":11678724,"line_start":233,"line_end":233,"column_start":19,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":271},"to":{"krate":45,"index":470}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11680579,"byte_end":11680589,"line_start":292,"line_end":292,"column_start":17,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":271},"to":{"krate":32,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11680820,"byte_end":11680830,"line_start":302,"line_end":302,"column_start":28,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2739},"to":{"krate":45,"index":470}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/body.rs","byte_start":11681495,"byte_end":11681504,"line_start":330,"line_end":330,"column_start":19,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":281},"to":{"krate":45,"index":470}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11686203,"byte_end":11686216,"line_start":122,"line_end":122,"column_start":18,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11686280,"byte_end":11686293,"line_start":128,"line_end":128,"column_start":6,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727874,"byte_end":11727880,"line_start":1265,"line_end":1265,"column_start":18,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2288},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11727944,"byte_end":11727950,"line_start":1271,"line_end":1271,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11734786,"byte_end":11734792,"line_start":1490,"line_end":1490,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2288},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11735005,"byte_end":11735018,"line_start":1498,"line_end":1498,"column_start":21,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11735224,"byte_end":11735230,"line_start":1506,"line_end":1506,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11738010,"byte_end":11738019,"line_start":1609,"line_end":1609,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11739421,"byte_end":11739435,"line_start":1675,"line_end":1675,"column_start":6,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11741303,"byte_end":11741310,"line_start":1741,"line_end":1741,"column_start":6,"column_end":13},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11741574,"byte_end":11741581,"line_start":1753,"line_end":1753,"column_start":17,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2714},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11742048,"byte_end":11742062,"line_start":1767,"line_end":1767,"column_start":17,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2657},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/client.rs","byte_start":11748966,"byte_end":11748973,"line_start":1929,"line_end":1929,"column_start":21,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2714},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11752830,"byte_end":11752837,"line_start":81,"line_end":81,"column_start":21,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11752956,"byte_end":11752963,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11756668,"byte_end":11756675,"line_start":211,"line_end":211,"column_start":17,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":733},"to":{"krate":32,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11758797,"byte_end":11758804,"line_start":257,"line_end":257,"column_start":19,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":733},"to":{"krate":45,"index":470}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11759567,"byte_end":11759574,"line_start":285,"line_end":285,"column_start":17,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":739},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11761229,"byte_end":11761237,"line_start":331,"line_end":331,"column_start":17,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":743},"to":{"krate":32,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11761675,"byte_end":11761682,"line_start":345,"line_end":345,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/decoder.rs","byte_start":11763130,"byte_end":11763137,"line_start":407,"line_end":407,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2292},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11764509,"byte_end":11764516,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11767304,"byte_end":11767318,"line_start":165,"line_end":165,"column_start":6,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11779310,"byte_end":11779317,"line_start":532,"line_end":532,"column_start":21,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11779482,"byte_end":11779496,"line_start":538,"line_end":538,"column_start":21,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11781057,"byte_end":11781064,"line_start":585,"line_end":585,"column_start":37,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":2937}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/request.rs","byte_start":11781655,"byte_end":11781666,"line_start":612,"line_end":612,"column_start":27,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":18,"index":1355},"to":{"krate":2,"index":2937}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11796536,"byte_end":11796544,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11807574,"byte_end":11807582,"line_start":402,"line_end":402,"column_start":21,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11807887,"byte_end":11807895,"line_start":412,"line_end":412,"column_start":49,"column_end":57},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":991},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/async_impl/response.rs","byte_start":11808637,"byte_end":11808641,"line_start":434,"line_end":434,"column_start":25,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11813347,"byte_end":11813351,"line_start":27,"line_end":27,"column_start":6,"column_end":10},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11817810,"byte_end":11817814,"line_start":160,"line_end":160,"column_start":6,"column_end":10},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818020,"byte_end":11818024,"line_start":169,"line_end":169,"column_start":24,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818172,"byte_end":11818176,"line_start":178,"line_end":178,"column_start":23,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818294,"byte_end":11818298,"line_start":185,"line_end":185,"column_start":30,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818471,"byte_end":11818475,"line_start":194,"line_end":194,"column_start":29,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818588,"byte_end":11818592,"line_start":201,"line_end":201,"column_start":21,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818798,"byte_end":11818802,"line_start":210,"line_end":210,"column_start":22,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11818939,"byte_end":11818943,"line_start":219,"line_end":219,"column_start":21,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11819326,"byte_end":11819337,"line_start":233,"line_end":233,"column_start":25,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/body.rs","byte_start":11822645,"byte_end":11822651,"line_start":335,"line_end":335,"column_start":6,"column_end":12},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825061,"byte_end":11825074,"line_start":74,"line_end":74,"column_start":18,"column_end":31},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11825138,"byte_end":11825151,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850111,"byte_end":11850124,"line_start":774,"line_end":774,"column_start":42,"column_end":55},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850305,"byte_end":11850311,"line_start":783,"line_end":783,"column_start":18,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2302},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11850375,"byte_end":11850381,"line_start":789,"line_end":789,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11853843,"byte_end":11853849,"line_start":897,"line_end":897,"column_start":21,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2302},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11854164,"byte_end":11854177,"line_start":907,"line_end":907,"column_start":21,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11854652,"byte_end":11854669,"line_start":927,"line_end":927,"column_start":15,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11855100,"byte_end":11855112,"line_start":943,"line_end":943,"column_start":6,"column_end":18},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11860114,"byte_end":11860121,"line_start":1086,"line_end":1086,"column_start":18,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/client.rs","byte_start":11860356,"byte_end":11860375,"line_start":1095,"line_end":1095,"column_start":6,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11861789,"byte_end":11861796,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11864813,"byte_end":11864827,"line_start":154,"line_end":154,"column_start":6,"column_end":20},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11880161,"byte_end":11880168,"line_start":622,"line_end":622,"column_start":37,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":2937}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/request.rs","byte_start":11880776,"byte_end":11880783,"line_start":646,"line_end":646,"column_start":21,"column_end":28},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894268,"byte_end":11894276,"line_start":28,"line_end":28,"column_start":21,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11894392,"byte_end":11894400,"line_start":34,"line_end":34,"column_start":6,"column_end":14},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11906138,"byte_end":11906146,"line_start":408,"line_end":408,"column_start":15,"column_end":23},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":4628}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/response.rs","byte_start":11906575,"byte_end":11906583,"line_start":420,"line_end":420,"column_start":67,"column_end":75},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/blocking/wait.rs","byte_start":11908513,"byte_end":11908524,"line_start":63,"line_end":63,"column_start":38,"column_end":49},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1638},"to":{"krate":36,"index":94}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11910225,"byte_end":11910238,"line_start":44,"line_end":44,"column_start":6,"column_end":19},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11912559,"byte_end":11912572,"line_start":104,"line_end":104,"column_start":23,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2333},"to":{"krate":63,"index":13}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11915524,"byte_end":11915533,"line_start":187,"line_end":187,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11928650,"byte_end":11928659,"line_start":550,"line_end":550,"column_start":23,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2347},"to":{"krate":63,"index":13}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11929477,"byte_end":11929486,"line_start":579,"line_end":579,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":46,"index":227},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11929489,"byte_end":11929499,"line_start":579,"line_end":579,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":46,"index":306},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11929502,"byte_end":11929512,"line_start":579,"line_end":579,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":59,"index":3323},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11929515,"byte_end":11929519,"line_start":579,"line_end":579,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11929522,"byte_end":11929526,"line_start":579,"line_end":579,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11929529,"byte_end":11929534,"line_start":579,"line_end":579,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":3065},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11929641,"byte_end":11929642,"line_start":583,"line_end":583,"column_start":92,"column_end":93},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1809},"to":{"krate":0,"index":1807}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11930112,"byte_end":11930116,"line_start":599,"line_end":599,"column_start":21,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2628},"to":{"krate":59,"index":3323}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11930238,"byte_end":11930242,"line_start":605,"line_end":605,"column_start":20,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2628},"to":{"krate":46,"index":227}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11930496,"byte_end":11930500,"line_start":616,"line_end":616,"column_start":21,"column_end":25},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2628},"to":{"krate":46,"index":306}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11936834,"byte_end":11936847,"line_start":836,"line_end":836,"column_start":73,"column_end":86},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2595},"to":{"krate":59,"index":3323}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11937195,"byte_end":11937208,"line_start":846,"line_end":846,"column_start":59,"column_end":72},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2595},"to":{"krate":46,"index":227}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11937547,"byte_end":11937560,"line_start":857,"line_end":857,"column_start":60,"column_end":73},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2595},"to":{"krate":46,"index":306}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11940718,"byte_end":11940724,"line_start":969,"line_end":969,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11941226,"byte_end":11941247,"line_start":992,"line_end":992,"column_start":56,"column_end":77},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2562},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11941896,"byte_end":11941920,"line_start":1016,"line_end":1016,"column_start":23,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11942181,"byte_end":11942205,"line_start":1025,"line_end":1025,"column_start":40,"column_end":64},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2363},"to":{"krate":63,"index":13}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11943748,"byte_end":11943755,"line_start":1073,"line_end":1073,"column_start":10,"column_end":17},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11944313,"byte_end":11944320,"line_start":1092,"line_end":1092,"column_start":73,"column_end":80},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1965},"to":{"krate":59,"index":3323}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11944479,"byte_end":11944486,"line_start":1098,"line_end":1098,"column_start":59,"column_end":66},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1965},"to":{"krate":46,"index":227}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11945105,"byte_end":11945112,"line_start":1115,"line_end":1115,"column_start":60,"column_end":67},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1965},"to":{"krate":46,"index":306}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/connect.rs","byte_start":11946502,"byte_end":11946508,"line_start":1160,"line_end":1160,"column_start":25,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1982},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955022,"byte_end":11955033,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11955606,"byte_end":11955607,"line_start":121,"line_end":121,"column_start":38,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2032},"to":{"krate":0,"index":2029}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956562,"byte_end":11956573,"line_start":151,"line_end":151,"column_start":26,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2419},"to":{"krate":0,"index":2029}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11956670,"byte_end":11956675,"line_start":157,"line_end":157,"column_start":6,"column_end":11},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11962823,"byte_end":11962828,"line_start":354,"line_end":354,"column_start":21,"column_end":26},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2376},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11963028,"byte_end":11963035,"line_start":363,"line_end":363,"column_start":6,"column_end":13},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11965728,"byte_end":11965737,"line_start":427,"line_end":427,"column_start":6,"column_end":15},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11966217,"byte_end":11966230,"line_start":447,"line_end":447,"column_start":6,"column_end":19},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11967400,"byte_end":11967411,"line_start":474,"line_end":474,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11972480,"byte_end":11972491,"line_start":631,"line_end":631,"column_start":21,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11973327,"byte_end":11973336,"line_start":661,"line_end":661,"column_start":6,"column_end":15},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11974084,"byte_end":11974090,"line_start":683,"line_end":683,"column_start":6,"column_end":12},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11974599,"byte_end":11974605,"line_start":701,"line_end":701,"column_start":21,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2448},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/proxy.rs","byte_start":11975304,"byte_end":11975307,"line_start":725,"line_end":725,"column_start":14,"column_end":17},"kind":{"Impl":{"id":118}},"from":{"krate":18,"index":3221},"to":{"krate":0,"index":2105}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12004080,"byte_end":12004086,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007361,"byte_end":12007367,"line_start":155,"line_end":155,"column_start":18,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12007482,"byte_end":12007489,"line_start":162,"line_end":162,"column_start":10,"column_end":17},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008732,"byte_end":12008738,"line_start":209,"line_end":209,"column_start":21,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12008889,"byte_end":12008899,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2171},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12009925,"byte_end":12009941,"line_start":251,"line_end":251,"column_start":23,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2488},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/redirect.rs","byte_start":12010076,"byte_end":12010092,"line_start":257,"line_end":257,"column_start":19,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2488},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12013899,"byte_end":12013910,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12016653,"byte_end":12016661,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12021843,"byte_end":12021854,"line_start":287,"line_end":287,"column_start":21,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2492},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12021992,"byte_end":12022000,"line_start":293,"line_end":293,"column_start":21,"column_end":29},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2505},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12022517,"byte_end":12022524,"line_start":314,"line_end":314,"column_start":6,"column_end":13},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12024385,"byte_end":12024395,"line_start":361,"line_end":361,"column_start":21,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2239},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12025091,"byte_end":12025101,"line_start":378,"line_end":378,"column_start":18,"column_end":28},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2239},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.10/src/tls.rs","byte_start":12025479,"byte_end":12025489,"line_start":396,"line_end":396,"column_start":29,"column_end":39},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2251},"to":{"krate":74,"index":2114}}]}