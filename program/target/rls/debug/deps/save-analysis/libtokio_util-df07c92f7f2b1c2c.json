{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10","program":"/Users/theogaillard/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"slab\"","--cfg","feature=\"time\"","-C","metadata=df07c92f7f2b1c2c","-C","extra-filename=-df07c92f7f2b1c2c","--out-dir","/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps","-L","dependency=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps","--extern","bytes=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libbytes-86260c84e872cfce.rmeta","--extern","futures_core=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libfutures_core-9445bb4f6094e57d.rmeta","--extern","futures_sink=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libfutures_sink-66dcdfd46cb908b3.rmeta","--extern","log=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/liblog-5e5b893e5fa367e7.rmeta","--extern","pin_project_lite=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libpin_project_lite-83109a06a962276d.rmeta","--extern","slab=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libslab-f3e1c436c28b5be0.rmeta","--extern","tokio=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libtokio-e876783676032de4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/theogaillard/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libtokio_util-df07c92f7f2b1c2c.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[14259345623015962848,0]},"crate_root":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src","external_crates":[{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[11425072106896568983,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":19,"id":{"name":"futures_core","disambiguator":[16953258249584419152,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":20,"id":{"name":"futures_sink","disambiguator":[16920452021225917514,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":21,"id":{"name":"tokio","disambiguator":[10623337918219934785,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":22,"id":{"name":"parking_lot","disambiguator":[14643033322743774676,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":23,"id":{"name":"instant","disambiguator":[10818540477857358525,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":24,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":25,"id":{"name":"lock_api","disambiguator":[5572021129215100917,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":26,"id":{"name":"scopeguard","disambiguator":[794896012219393328,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":27,"id":{"name":"parking_lot_core","disambiguator":[13322027220651691294,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":28,"id":{"name":"smallvec","disambiguator":[13996271574193408785,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":29,"id":{"name":"libc","disambiguator":[15060372080602567917,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":30,"id":{"name":"mio","disambiguator":[9145852623985249445,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","num":31,"id":{"name":"log","disambiguator":[6370244751661190342,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":32,"id":{"name":"bytes","disambiguator":[9168791009346297349,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":33,"id":{"name":"once_cell","disambiguator":[79243958795129129,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[1393384918991767712,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":35,"id":{"name":"memchr","disambiguator":[3732220575258275560,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":36,"id":{"name":"num_cpus","disambiguator":[11844741849393307671,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":37,"id":{"name":"signal_hook_registry","disambiguator":[819314954681575439,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","num":38,"id":{"name":"slab","disambiguator":[13312282856459513588,0]}}],"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1105},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246617,"byte_end":13246627,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246666,"byte_end":13246673,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246712,"byte_end":13246719,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1684},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246881,"byte_end":13246887,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1141},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246889,"byte_end":13246900,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1643},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246948,"byte_end":13246958,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1602},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13247007,"byte_end":13247018,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13247080,"byte_end":13247100,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13247102,"byte_end":13247127,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13247176,"byte_end":13247186,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13247188,"byte_end":13247203,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1213},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13247268,"byte_end":13247285,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1237},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13247287,"byte_end":13247309,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341849,"byte_end":13341859,"line_start":18,"line_end":18,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":0,"index":1536},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1577},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7053,"byte_end":7063,"line_start":7,"line_end":7,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7110,"byte_end":7123,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7166,"byte_end":7183,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":425},{"krate":0,"index":1245},{"krate":0,"index":14},{"krate":0,"index":307},{"krate":0,"index":376}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":425},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1102}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236345,"byte_end":13236398,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236399,"byte_end":13236402,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236403,"byte_end":13236478,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236479,"byte_end":13236544,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236545,"byte_end":13236548,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236549,"byte_end":13236629,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236630,"byte_end":13236705,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236706,"byte_end":13236754,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236755,"byte_end":13236758,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236759,"byte_end":13236782,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236783,"byte_end":13236786,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236787,"byte_end":13236866,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236867,"byte_end":13236946,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13236947,"byte_end":13237018,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237019,"byte_end":13237089,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237090,"byte_end":13237168,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237169,"byte_end":13237245,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237246,"byte_end":13237279,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237280,"byte_end":13237283,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237284,"byte_end":13237364,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237365,"byte_end":13237445,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237446,"byte_end":13237496,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237497,"byte_end":13237500,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237501,"byte_end":13237552,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237553,"byte_end":13237602,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237603,"byte_end":13237654,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237655,"byte_end":13237658,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237659,"byte_end":13237724,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237725,"byte_end":13237728,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237729,"byte_end":13237806,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237807,"byte_end":13237848,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237849,"byte_end":13237852,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237853,"byte_end":13237933,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13237934,"byte_end":13238013,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238014,"byte_end":13238092,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238093,"byte_end":13238172,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238173,"byte_end":13238187,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238188,"byte_end":13238191,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238192,"byte_end":13238271,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238272,"byte_end":13238351,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238352,"byte_end":13238369,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238370,"byte_end":13238373,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238374,"byte_end":13238451,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238452,"byte_end":13238531,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238532,"byte_end":13238609,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238610,"byte_end":13238680,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238681,"byte_end":13238730,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238731,"byte_end":13238734,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238735,"byte_end":13238748,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238749,"byte_end":13238781,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238782,"byte_end":13238849,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238850,"byte_end":13238964,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13238965,"byte_end":13239002,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239003,"byte_end":13239064,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239065,"byte_end":13239114,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239115,"byte_end":13239118,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239119,"byte_end":13239160,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239161,"byte_end":13239171,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239172,"byte_end":13239256,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239257,"byte_end":13239313,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239314,"byte_end":13239317,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239318,"byte_end":13239339,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239340,"byte_end":13239407,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239408,"byte_end":13239436,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239437,"byte_end":13239450,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239451,"byte_end":13239469,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239470,"byte_end":13239479,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239480,"byte_end":13239483,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239484,"byte_end":13239543,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239544,"byte_end":13239568,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239569,"byte_end":13239578,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239579,"byte_end":13239584,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239585,"byte_end":13239593,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239594,"byte_end":13239601,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239602,"byte_end":13239676,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239677,"byte_end":13239680,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239681,"byte_end":13239703,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239704,"byte_end":13239707,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239708,"byte_end":13239785,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239786,"byte_end":13239862,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239863,"byte_end":13239942,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239943,"byte_end":13239997,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13239998,"byte_end":13240001,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240002,"byte_end":13240046,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240047,"byte_end":13240054,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240055,"byte_end":13240090,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240091,"byte_end":13240122,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240123,"byte_end":13240126,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240127,"byte_end":13240156,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240157,"byte_end":13240160,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240161,"byte_end":13240200,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240201,"byte_end":13240204,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240205,"byte_end":13240243,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240244,"byte_end":13240271,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240272,"byte_end":13240308,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240309,"byte_end":13240312,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240313,"byte_end":13240331,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240332,"byte_end":13240354,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240355,"byte_end":13240385,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240386,"byte_end":13240440,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240441,"byte_end":13240471,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240472,"byte_end":13240529,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240530,"byte_end":13240562,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240563,"byte_end":13240576,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240577,"byte_end":13240580,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240581,"byte_end":13240615,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240616,"byte_end":13240660,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240661,"byte_end":13240713,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240714,"byte_end":13240781,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240782,"byte_end":13240785,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240786,"byte_end":13240860,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240861,"byte_end":13240927,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240928,"byte_end":13240957,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13240958,"byte_end":13241005,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241006,"byte_end":13241058,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241059,"byte_end":13241130,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241131,"byte_end":13241150,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241151,"byte_end":13241164,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241165,"byte_end":13241168,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241169,"byte_end":13241208,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241209,"byte_end":13241264,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241265,"byte_end":13241283,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241284,"byte_end":13241360,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241361,"byte_end":13241427,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241428,"byte_end":13241480,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241481,"byte_end":13241484,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241485,"byte_end":13241565,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241566,"byte_end":13241591,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241592,"byte_end":13241624,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241625,"byte_end":13241638,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241639,"byte_end":13241642,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241643,"byte_end":13241715,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241716,"byte_end":13241742,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241743,"byte_end":13241794,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241795,"byte_end":13241831,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241832,"byte_end":13241835,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241836,"byte_end":13241914,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241915,"byte_end":13241958,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13241959,"byte_end":13242006,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242007,"byte_end":13242043,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242044,"byte_end":13242088,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242089,"byte_end":13242145,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242146,"byte_end":13242194,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242195,"byte_end":13242217,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242218,"byte_end":13242236,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242237,"byte_end":13242250,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242251,"byte_end":13242260,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242261,"byte_end":13242266,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242267,"byte_end":13242274,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242275,"byte_end":13242278,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242279,"byte_end":13242302,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242303,"byte_end":13242306,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242307,"byte_end":13242385,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242386,"byte_end":13242459,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242460,"byte_end":13242536,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242537,"byte_end":13242617,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242618,"byte_end":13242634,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242635,"byte_end":13242638,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242639,"byte_end":13242719,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242720,"byte_end":13242799,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242800,"byte_end":13242880,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242881,"byte_end":13242953,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242954,"byte_end":13242957,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13242958,"byte_end":13243035,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243036,"byte_end":13243114,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243115,"byte_end":13243188,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243189,"byte_end":13243255,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243256,"byte_end":13243259,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243260,"byte_end":13243273,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243274,"byte_end":13243307,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243308,"byte_end":13243342,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243343,"byte_end":13243380,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243381,"byte_end":13243448,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243449,"byte_end":13243484,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243485,"byte_end":13243546,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243547,"byte_end":13243593,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243594,"byte_end":13243655,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243656,"byte_end":13243659,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243660,"byte_end":13243688,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243689,"byte_end":13243692,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243693,"byte_end":13243734,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243735,"byte_end":13243745,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243746,"byte_end":13243770,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243771,"byte_end":13243845,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243846,"byte_end":13243888,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243889,"byte_end":13243903,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243904,"byte_end":13243961,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13243962,"byte_end":13244011,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244012,"byte_end":13244026,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244027,"byte_end":13244064,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244065,"byte_end":13244116,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244117,"byte_end":13244163,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244164,"byte_end":13244194,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244195,"byte_end":13244209,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244210,"byte_end":13244219,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244220,"byte_end":13244225,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244226,"byte_end":13244233,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244234,"byte_end":13244241,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244242,"byte_end":13244317,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244318,"byte_end":13244391,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244392,"byte_end":13244434,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244435,"byte_end":13244438,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244439,"byte_end":13244461,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244462,"byte_end":13244465,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244466,"byte_end":13244543,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244544,"byte_end":13244620,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244621,"byte_end":13244697,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244698,"byte_end":13244721,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244722,"byte_end":13244725,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244726,"byte_end":13244771,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244772,"byte_end":13244779,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244780,"byte_end":13244815,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244816,"byte_end":13244840,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244841,"byte_end":13244844,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244845,"byte_end":13244874,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244875,"byte_end":13244878,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244879,"byte_end":13244918,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244919,"byte_end":13244922,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244923,"byte_end":13244969,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13244970,"byte_end":13245006,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245007,"byte_end":13245010,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245011,"byte_end":13245102,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245103,"byte_end":13245177,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245178,"byte_end":13245200,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245201,"byte_end":13245234,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245235,"byte_end":13245282,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245283,"byte_end":13245335,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245336,"byte_end":13245411,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245412,"byte_end":13245431,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245432,"byte_end":13245445,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245446,"byte_end":13245449,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245450,"byte_end":13245502,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245503,"byte_end":13245580,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245581,"byte_end":13245645,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245646,"byte_end":13245649,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245650,"byte_end":13245693,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245694,"byte_end":13245734,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245735,"byte_end":13245738,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245739,"byte_end":13245796,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245797,"byte_end":13245843,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245844,"byte_end":13245895,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245896,"byte_end":13245914,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245915,"byte_end":13245924,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245925,"byte_end":13245930,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245931,"byte_end":13245938,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245939,"byte_end":13245942,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245943,"byte_end":13245982,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13245983,"byte_end":13246024,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246025,"byte_end":13246061,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246062,"byte_end":13246094,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246095,"byte_end":13246191,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246192,"byte_end":13246243,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246244,"byte_end":13246297,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246298,"byte_end":13246341,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246342,"byte_end":13246386,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246387,"byte_end":13246435,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246436,"byte_end":13246484,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246485,"byte_end":13246531,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13246532,"byte_end":13246571,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248595,"byte_end":13248605,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247438,"byte_end":13247523,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247524,"byte_end":13247527,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247528,"byte_end":13247566,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247567,"byte_end":13247605,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247606,"byte_end":13247609,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247610,"byte_end":13247623,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247624,"byte_end":13247627,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247628,"byte_end":13247709,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247710,"byte_end":13247713,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247714,"byte_end":13247753,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247754,"byte_end":13247787,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247788,"byte_end":13247817,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247818,"byte_end":13247821,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247822,"byte_end":13247829,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247830,"byte_end":13247848,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247849,"byte_end":13247879,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247880,"byte_end":13247904,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247905,"byte_end":13247912,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247913,"byte_end":13247942,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247943,"byte_end":13247995,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13247996,"byte_end":13247999,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248000,"byte_end":13248018,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248019,"byte_end":13248036,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248037,"byte_end":13248117,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248118,"byte_end":13248152,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248153,"byte_end":13248206,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248207,"byte_end":13248218,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248219,"byte_end":13248226,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248227,"byte_end":13248232,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248233,"byte_end":13248280,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248281,"byte_end":13248334,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248335,"byte_end":13248393,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248394,"byte_end":13248473,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248474,"byte_end":13248486,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248487,"byte_end":13248494,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248495,"byte_end":13248502,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248503,"byte_end":13248506,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248707,"byte_end":13248710,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248634,"byte_end":13248695,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250711,"byte_end":13250718,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249425,"byte_end":13249460,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249461,"byte_end":13249464,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249465,"byte_end":13249534,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249535,"byte_end":13249614,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249615,"byte_end":13249687,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249688,"byte_end":13249712,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249713,"byte_end":13249716,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249717,"byte_end":13249785,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249786,"byte_end":13249863,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249864,"byte_end":13249925,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249926,"byte_end":13249929,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249930,"byte_end":13249991,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13249992,"byte_end":13250054,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250055,"byte_end":13250058,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250059,"byte_end":13250122,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250123,"byte_end":13250186,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250187,"byte_end":13250266,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250267,"byte_end":13250341,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250342,"byte_end":13250361,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250362,"byte_end":13250365,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250366,"byte_end":13250434,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250435,"byte_end":13250497,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250498,"byte_end":13250573,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250574,"byte_end":13250614,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250615,"byte_end":13250618,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250619,"byte_end":13250655,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250656,"byte_end":13250700,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":476},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250766,"byte_end":13250770,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250725,"byte_end":13250756,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":477},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251536,"byte_end":13251541,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250777,"byte_end":13250829,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250834,"byte_end":13250837,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250842,"byte_end":13250911,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250916,"byte_end":13250986,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13250991,"byte_end":13251037,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251042,"byte_end":13251045,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251050,"byte_end":13251126,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251131,"byte_end":13251206,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251211,"byte_end":13251286,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251291,"byte_end":13251331,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251336,"byte_end":13251339,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251344,"byte_end":13251418,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251423,"byte_end":13251469,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251474,"byte_end":13251477,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251482,"byte_end":13251526,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254477,"byte_end":13254483,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251565,"byte_end":13251630,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251635,"byte_end":13251638,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251643,"byte_end":13251717,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251722,"byte_end":13251794,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251799,"byte_end":13251872,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251877,"byte_end":13251920,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251925,"byte_end":13251928,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13251933,"byte_end":13252006,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252011,"byte_end":13252074,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252079,"byte_end":13252154,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252159,"byte_end":13252234,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252239,"byte_end":13252262,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252267,"byte_end":13252270,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252275,"byte_end":13252347,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252352,"byte_end":13252426,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252431,"byte_end":13252501,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252506,"byte_end":13252509,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252514,"byte_end":13252582,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252587,"byte_end":13252658,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252663,"byte_end":13252743,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252748,"byte_end":13252760,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252765,"byte_end":13252768,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252773,"byte_end":13252843,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252848,"byte_end":13252923,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252928,"byte_end":13252965,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252970,"byte_end":13252973,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13252978,"byte_end":13253014,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253019,"byte_end":13253063,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253068,"byte_end":13253071,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253076,"byte_end":13253099,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253104,"byte_end":13253107,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253112,"byte_end":13253186,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253191,"byte_end":13253265,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253270,"byte_end":13253323,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253328,"byte_end":13253331,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253336,"byte_end":13253407,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253412,"byte_end":13253482,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253487,"byte_end":13253503,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253508,"byte_end":13253511,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253516,"byte_end":13253529,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253534,"byte_end":13253552,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253557,"byte_end":13253562,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253567,"byte_end":13253593,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253598,"byte_end":13253635,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253640,"byte_end":13253645,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253650,"byte_end":13253671,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253676,"byte_end":13253681,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253686,"byte_end":13253716,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253721,"byte_end":13253735,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253740,"byte_end":13253771,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253776,"byte_end":13253809,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253814,"byte_end":13253817,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253822,"byte_end":13253915,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253920,"byte_end":13253938,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253943,"byte_end":13253946,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13253951,"byte_end":13254023,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254028,"byte_end":13254088,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254093,"byte_end":13254145,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254150,"byte_end":13254212,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254217,"byte_end":13254284,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254289,"byte_end":13254292,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254297,"byte_end":13254325,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254330,"byte_end":13254339,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254344,"byte_end":13254349,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254354,"byte_end":13254361,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254366,"byte_end":13254369,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254374,"byte_end":13254443,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254448,"byte_end":13254469,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255649,"byte_end":13255659,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254564,"byte_end":13254636,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254641,"byte_end":13254690,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254695,"byte_end":13254698,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254703,"byte_end":13254771,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254776,"byte_end":13254843,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254848,"byte_end":13254916,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13254921,"byte_end":13254997,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255002,"byte_end":13255068,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255073,"byte_end":13255076,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255081,"byte_end":13255149,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255154,"byte_end":13255229,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255234,"byte_end":13255309,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255314,"byte_end":13255386,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255391,"byte_end":13255433,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255438,"byte_end":13255441,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255446,"byte_end":13255521,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255526,"byte_end":13255604,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13255609,"byte_end":13255641,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13257267,"byte_end":13257273,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256077,"byte_end":13256157,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256162,"byte_end":13256238,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256243,"byte_end":13256246,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256251,"byte_end":13256326,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256331,"byte_end":13256401,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256406,"byte_end":13256477,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256482,"byte_end":13256554,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256559,"byte_end":13256617,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256622,"byte_end":13256625,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256630,"byte_end":13256699,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256704,"byte_end":13256779,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256784,"byte_end":13256860,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256865,"byte_end":13256887,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256892,"byte_end":13256895,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256900,"byte_end":13256973,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13256978,"byte_end":13257051,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13257056,"byte_end":13257132,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13257137,"byte_end":13257140,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13257145,"byte_end":13257181,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13257186,"byte_end":13257218,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":13257223,"byte_end":13257259,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257607,"byte_end":13257614,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257452,"byte_end":13257524,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257525,"byte_end":13257545,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257546,"byte_end":13257549,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257550,"byte_end":13257596,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":494},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257879,"byte_end":13257884,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257627,"byte_end":13257659,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257664,"byte_end":13257667,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257672,"byte_end":13257749,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257754,"byte_end":13257810,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257815,"byte_end":13257818,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257823,"byte_end":13257869,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13258235,"byte_end":13258241,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257908,"byte_end":13257953,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257958,"byte_end":13257961,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13257966,"byte_end":13258040,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13258045,"byte_end":13258125,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13258130,"byte_end":13258168,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13258173,"byte_end":13258176,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":13258181,"byte_end":13258227,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13271878,"byte_end":13271884,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1687}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273657,"byte_end":13273660,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272026,"byte_end":13272106,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272111,"byte_end":13272192,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272197,"byte_end":13272200,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272205,"byte_end":13272280,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272285,"byte_end":13272355,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272360,"byte_end":13272429,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272434,"byte_end":13272506,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272511,"byte_end":13272569,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272574,"byte_end":13272577,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272582,"byte_end":13272653,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272658,"byte_end":13272735,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272740,"byte_end":13272816,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272821,"byte_end":13272843,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272848,"byte_end":13272851,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272856,"byte_end":13272929,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13272934,"byte_end":13273007,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273012,"byte_end":13273088,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273093,"byte_end":13273096,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273101,"byte_end":13273177,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273182,"byte_end":13273258,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273263,"byte_end":13273338,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273343,"byte_end":13273378,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273383,"byte_end":13273386,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273391,"byte_end":13273427,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273432,"byte_end":13273464,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273469,"byte_end":13273506,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273511,"byte_end":13273549,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273554,"byte_end":13273645,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275268,"byte_end":13275281,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273873,"byte_end":13273953,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13273958,"byte_end":13274039,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274044,"byte_end":13274093,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274098,"byte_end":13274101,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274106,"byte_end":13274181,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274186,"byte_end":13274256,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274261,"byte_end":13274330,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274335,"byte_end":13274407,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274412,"byte_end":13274470,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274475,"byte_end":13274478,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274483,"byte_end":13274554,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274559,"byte_end":13274636,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274641,"byte_end":13274717,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274722,"byte_end":13274744,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274749,"byte_end":13274752,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274757,"byte_end":13274830,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274835,"byte_end":13274908,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274913,"byte_end":13274989,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13274994,"byte_end":13274997,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275002,"byte_end":13275038,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275043,"byte_end":13275075,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275080,"byte_end":13275117,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275122,"byte_end":13275160,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275165,"byte_end":13275256,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277428,"byte_end":13277438,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275851,"byte_end":13275931,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275936,"byte_end":13276017,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276022,"byte_end":13276025,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276030,"byte_end":13276105,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276110,"byte_end":13276180,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276185,"byte_end":13276256,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276261,"byte_end":13276333,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276338,"byte_end":13276396,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276401,"byte_end":13276404,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276409,"byte_end":13276480,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276485,"byte_end":13276562,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276567,"byte_end":13276643,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276648,"byte_end":13276670,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276675,"byte_end":13276678,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276683,"byte_end":13276762,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276767,"byte_end":13276844,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276849,"byte_end":13276852,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276857,"byte_end":13276930,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13276935,"byte_end":13277008,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277013,"byte_end":13277089,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277094,"byte_end":13277097,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277102,"byte_end":13277138,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277143,"byte_end":13277175,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277180,"byte_end":13277218,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277223,"byte_end":13277261,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277266,"byte_end":13277320,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277325,"byte_end":13277416,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278073,"byte_end":13278080,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277790,"byte_end":13277853,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277858,"byte_end":13277871,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277876,"byte_end":13277879,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277884,"byte_end":13277959,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13277964,"byte_end":13278034,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278039,"byte_end":13278061,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278424,"byte_end":13278431,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278133,"byte_end":13278204,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278209,"byte_end":13278222,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278227,"byte_end":13278230,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278235,"byte_end":13278310,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278315,"byte_end":13278385,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278390,"byte_end":13278412,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278794,"byte_end":13278805,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278496,"byte_end":13278574,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278579,"byte_end":13278592,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278597,"byte_end":13278600,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278605,"byte_end":13278680,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278685,"byte_end":13278755,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278760,"byte_end":13278782,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279152,"byte_end":13279157,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278901,"byte_end":13278959,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278964,"byte_end":13278977,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278982,"byte_end":13278985,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13278990,"byte_end":13279064,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279069,"byte_end":13279140,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279469,"byte_end":13279478,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279210,"byte_end":13279276,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279281,"byte_end":13279294,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279299,"byte_end":13279302,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279307,"byte_end":13279381,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279386,"byte_end":13279457,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279598,"byte_end":13279609,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279543,"byte_end":13279586,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279744,"byte_end":13279759,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279681,"byte_end":13279732,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279899,"byte_end":13279911,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279843,"byte_end":13279887,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280048,"byte_end":13280064,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13279984,"byte_end":13280036,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280414,"byte_end":13280424,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280149,"byte_end":13280212,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280217,"byte_end":13280220,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280225,"byte_end":13280300,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280305,"byte_end":13280375,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280380,"byte_end":13280402,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280796,"byte_end":13280806,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280474,"byte_end":13280548,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280553,"byte_end":13280594,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280599,"byte_end":13280602,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280607,"byte_end":13280682,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280687,"byte_end":13280757,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13280762,"byte_end":13280784,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282780,"byte_end":13282791,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282465,"byte_end":13282536,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282537,"byte_end":13282609,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282610,"byte_end":13282670,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282671,"byte_end":13282674,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282675,"byte_end":13282711,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282729,"byte_end":13282768,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282877,"byte_end":13282879,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282804,"byte_end":13282868,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282911,"byte_end":13282916,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282889,"byte_end":13282902,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282981,"byte_end":13282989,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282926,"byte_end":13282972,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13283076,"byte_end":13283085,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13283006,"byte_end":13283067,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13283318,"byte_end":13283321,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13283266,"byte_end":13283306,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13284050,"byte_end":13284060,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1646}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13284311,"byte_end":13284314,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13284243,"byte_end":13284299,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13284662,"byte_end":13284675,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13284546,"byte_end":13284628,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13284633,"byte_end":13284650,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285429,"byte_end":13285436,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285142,"byte_end":13285205,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285210,"byte_end":13285227,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285232,"byte_end":13285235,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285240,"byte_end":13285315,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285320,"byte_end":13285390,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285395,"byte_end":13285417,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285784,"byte_end":13285791,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285489,"byte_end":13285560,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285565,"byte_end":13285582,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285587,"byte_end":13285590,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285595,"byte_end":13285670,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285675,"byte_end":13285745,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285750,"byte_end":13285772,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286158,"byte_end":13286169,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285856,"byte_end":13285934,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285939,"byte_end":13285956,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285961,"byte_end":13285964,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285969,"byte_end":13286044,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286049,"byte_end":13286119,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286124,"byte_end":13286146,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286534,"byte_end":13286544,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286265,"byte_end":13286332,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286337,"byte_end":13286340,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286345,"byte_end":13286420,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286425,"byte_end":13286495,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286500,"byte_end":13286522,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286656,"byte_end":13286663,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286594,"byte_end":13286644,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286786,"byte_end":13286797,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286716,"byte_end":13286774,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286917,"byte_end":13286928,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286862,"byte_end":13286905,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13287058,"byte_end":13287073,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13286995,"byte_end":13287046,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289174,"byte_end":13289185,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1605}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289392,"byte_end":13289395,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289323,"byte_end":13289380,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289953,"byte_end":13289960,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289665,"byte_end":13289728,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289733,"byte_end":13289751,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289756,"byte_end":13289759,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289764,"byte_end":13289839,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289844,"byte_end":13289914,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289919,"byte_end":13289941,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290309,"byte_end":13290316,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290013,"byte_end":13290084,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290089,"byte_end":13290107,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290112,"byte_end":13290115,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290120,"byte_end":13290195,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290200,"byte_end":13290270,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290275,"byte_end":13290297,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290684,"byte_end":13290695,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290381,"byte_end":13290459,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290464,"byte_end":13290482,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290487,"byte_end":13290490,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290495,"byte_end":13290570,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290575,"byte_end":13290645,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290650,"byte_end":13290672,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291061,"byte_end":13291071,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290791,"byte_end":13290859,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290864,"byte_end":13290867,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290872,"byte_end":13290947,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13290952,"byte_end":13291022,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291027,"byte_end":13291049,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291183,"byte_end":13291190,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291121,"byte_end":13291171,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291313,"byte_end":13291324,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291243,"byte_end":13291301,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291445,"byte_end":13291457,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291389,"byte_end":13291433,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291588,"byte_end":13291604,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291524,"byte_end":13291576,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":868},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":1153},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":922},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":924},{"krate":0,"index":931},{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293131,"byte_end":13293183,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293184,"byte_end":13293187,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293188,"byte_end":13293258,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293259,"byte_end":13293317,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293318,"byte_end":13293390,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293391,"byte_end":13293461,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293462,"byte_end":13293529,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293530,"byte_end":13293533,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293534,"byte_end":13293555,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293556,"byte_end":13293559,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293560,"byte_end":13293635,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293636,"byte_end":13293707,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293708,"byte_end":13293779,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293780,"byte_end":13293850,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293851,"byte_end":13293891,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293892,"byte_end":13293895,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293896,"byte_end":13293903,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293904,"byte_end":13293947,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13293948,"byte_end":13294006,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294007,"byte_end":13294010,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294011,"byte_end":13294066,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294067,"byte_end":13294109,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294110,"byte_end":13294115,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294116,"byte_end":13294168,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294169,"byte_end":13294174,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294175,"byte_end":13294197,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294198,"byte_end":13294205,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294206,"byte_end":13294209,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294210,"byte_end":13294282,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294283,"byte_end":13294354,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294355,"byte_end":13294374,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294375,"byte_end":13294378,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294379,"byte_end":13294390,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294391,"byte_end":13294440,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294441,"byte_end":13294490,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294491,"byte_end":13294540,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294541,"byte_end":13294548,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294549,"byte_end":13294552,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294553,"byte_end":13294591,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294592,"byte_end":13294595,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294596,"byte_end":13294603,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294604,"byte_end":13294647,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294648,"byte_end":13294706,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294707,"byte_end":13294710,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294711,"byte_end":13294736,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294737,"byte_end":13294758,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294759,"byte_end":13294762,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294763,"byte_end":13294839,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294840,"byte_end":13294849,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294850,"byte_end":13294892,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294893,"byte_end":13294898,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294899,"byte_end":13294972,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13294973,"byte_end":13295020,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295021,"byte_end":13295024,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295025,"byte_end":13295062,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295063,"byte_end":13295077,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295078,"byte_end":13295083,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295084,"byte_end":13295091,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295092,"byte_end":13295095,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295096,"byte_end":13295138,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295139,"byte_end":13295142,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295143,"byte_end":13295154,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295155,"byte_end":13295194,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295195,"byte_end":13295234,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295235,"byte_end":13295274,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295275,"byte_end":13295282,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295283,"byte_end":13295286,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295287,"byte_end":13295301,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295302,"byte_end":13295305,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295306,"byte_end":13295381,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295382,"byte_end":13295455,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295456,"byte_end":13295522,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295523,"byte_end":13295592,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295593,"byte_end":13295658,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295659,"byte_end":13295662,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295663,"byte_end":13295679,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295680,"byte_end":13295683,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295684,"byte_end":13295760,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295761,"byte_end":13295802,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295803,"byte_end":13295806,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295807,"byte_end":13295814,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295815,"byte_end":13295846,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295847,"byte_end":13295897,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295898,"byte_end":13295939,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295940,"byte_end":13295975,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13295976,"byte_end":13296024,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296025,"byte_end":13296056,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296057,"byte_end":13296105,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296106,"byte_end":13296155,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296156,"byte_end":13296178,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296179,"byte_end":13296186,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296187,"byte_end":13296209,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296210,"byte_end":13296217,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296218,"byte_end":13296221,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296222,"byte_end":13296270,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296271,"byte_end":13296274,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296275,"byte_end":13296286,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296287,"byte_end":13296339,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296340,"byte_end":13296405,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296406,"byte_end":13296471,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296472,"byte_end":13296537,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296538,"byte_end":13296545,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296546,"byte_end":13296549,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296550,"byte_end":13296626,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296627,"byte_end":13296701,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296702,"byte_end":13296774,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296775,"byte_end":13296851,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296852,"byte_end":13296894,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296895,"byte_end":13296898,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296899,"byte_end":13296915,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296916,"byte_end":13296919,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296920,"byte_end":13296995,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13296996,"byte_end":13297037,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297038,"byte_end":13297041,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297042,"byte_end":13297049,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297050,"byte_end":13297081,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297082,"byte_end":13297132,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297133,"byte_end":13297174,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297175,"byte_end":13297210,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297211,"byte_end":13297259,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297260,"byte_end":13297291,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297292,"byte_end":13297340,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297341,"byte_end":13297400,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297401,"byte_end":13297423,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297424,"byte_end":13297431,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297432,"byte_end":13297454,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297455,"byte_end":13297462,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297463,"byte_end":13297466,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297467,"byte_end":13297515,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297516,"byte_end":13297519,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297520,"byte_end":13297531,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297532,"byte_end":13297581,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297582,"byte_end":13297636,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297637,"byte_end":13297691,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297692,"byte_end":13297746,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297747,"byte_end":13297754,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297755,"byte_end":13297758,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297759,"byte_end":13297832,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297833,"byte_end":13297900,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297901,"byte_end":13297904,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297905,"byte_end":13297921,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297922,"byte_end":13297925,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13297926,"byte_end":13298002,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298003,"byte_end":13298075,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298076,"byte_end":13298115,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298116,"byte_end":13298119,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298120,"byte_end":13298127,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298128,"byte_end":13298159,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298160,"byte_end":13298210,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298211,"byte_end":13298252,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298253,"byte_end":13298288,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298289,"byte_end":13298337,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298338,"byte_end":13298369,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298370,"byte_end":13298417,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298418,"byte_end":13298438,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298439,"byte_end":13298461,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298462,"byte_end":13298469,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298470,"byte_end":13298492,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298493,"byte_end":13298500,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298501,"byte_end":13298504,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298505,"byte_end":13298553,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298554,"byte_end":13298557,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298558,"byte_end":13298569,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298570,"byte_end":13298622,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298623,"byte_end":13298688,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298689,"byte_end":13298754,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298755,"byte_end":13298820,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298821,"byte_end":13298828,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298829,"byte_end":13298832,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298833,"byte_end":13298905,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298906,"byte_end":13298981,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13298982,"byte_end":13299054,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299055,"byte_end":13299131,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299132,"byte_end":13299205,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299206,"byte_end":13299209,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299210,"byte_end":13299226,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299227,"byte_end":13299230,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299231,"byte_end":13299305,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299306,"byte_end":13299373,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299374,"byte_end":13299377,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299378,"byte_end":13299385,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299386,"byte_end":13299417,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299418,"byte_end":13299468,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299469,"byte_end":13299510,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299511,"byte_end":13299546,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299547,"byte_end":13299595,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299596,"byte_end":13299627,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299628,"byte_end":13299676,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299677,"byte_end":13299697,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299698,"byte_end":13299720,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299721,"byte_end":13299728,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299729,"byte_end":13299751,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299752,"byte_end":13299759,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299760,"byte_end":13299763,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299764,"byte_end":13299812,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299813,"byte_end":13299816,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299817,"byte_end":13299828,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299829,"byte_end":13299855,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299856,"byte_end":13299901,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299902,"byte_end":13299947,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299948,"byte_end":13299993,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299994,"byte_end":13299997,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13299998,"byte_end":13300026,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300027,"byte_end":13300072,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300073,"byte_end":13300118,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300119,"byte_end":13300164,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300165,"byte_end":13300172,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300173,"byte_end":13300176,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300177,"byte_end":13300249,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300250,"byte_end":13300326,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300327,"byte_end":13300397,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300398,"byte_end":13300467,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300468,"byte_end":13300505,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300506,"byte_end":13300509,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300510,"byte_end":13300584,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300585,"byte_end":13300639,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300640,"byte_end":13300643,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300644,"byte_end":13300660,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300661,"byte_end":13300664,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300665,"byte_end":13300738,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300739,"byte_end":13300815,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300816,"byte_end":13300890,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300891,"byte_end":13300904,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300905,"byte_end":13300908,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300909,"byte_end":13300916,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300917,"byte_end":13300948,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13300949,"byte_end":13300999,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301000,"byte_end":13301041,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301042,"byte_end":13301077,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301078,"byte_end":13301127,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301128,"byte_end":13301159,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301160,"byte_end":13301208,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301209,"byte_end":13301253,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301254,"byte_end":13301276,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301277,"byte_end":13301284,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301285,"byte_end":13301307,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301308,"byte_end":13301315,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301316,"byte_end":13301319,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301320,"byte_end":13301368,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301369,"byte_end":13301372,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301373,"byte_end":13301384,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301385,"byte_end":13301411,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301412,"byte_end":13301462,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301463,"byte_end":13301513,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301514,"byte_end":13301564,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301565,"byte_end":13301568,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301569,"byte_end":13301589,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301590,"byte_end":13301620,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301621,"byte_end":13301651,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301652,"byte_end":13301682,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301683,"byte_end":13301690,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301691,"byte_end":13301694,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301695,"byte_end":13301768,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301769,"byte_end":13301844,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301845,"byte_end":13301917,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301918,"byte_end":13301956,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301957,"byte_end":13301960,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13301961,"byte_end":13302035,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302036,"byte_end":13302112,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302113,"byte_end":13302186,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302187,"byte_end":13302215,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302216,"byte_end":13302219,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302220,"byte_end":13302236,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302237,"byte_end":13302240,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302241,"byte_end":13302314,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302315,"byte_end":13302391,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302392,"byte_end":13302466,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302467,"byte_end":13302539,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302540,"byte_end":13302551,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302552,"byte_end":13302555,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302556,"byte_end":13302563,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302564,"byte_end":13302595,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302596,"byte_end":13302646,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302647,"byte_end":13302688,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302689,"byte_end":13302724,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302725,"byte_end":13302774,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302775,"byte_end":13302806,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302807,"byte_end":13302872,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302873,"byte_end":13302893,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302894,"byte_end":13302916,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302917,"byte_end":13302924,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302925,"byte_end":13302932,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302933,"byte_end":13302936,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302937,"byte_end":13302985,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302986,"byte_end":13302989,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13302990,"byte_end":13303001,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303002,"byte_end":13303028,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303029,"byte_end":13303079,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303080,"byte_end":13303130,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303131,"byte_end":13303181,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303182,"byte_end":13303185,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303186,"byte_end":13303206,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303207,"byte_end":13303237,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303238,"byte_end":13303268,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303269,"byte_end":13303299,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303300,"byte_end":13303307,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303308,"byte_end":13303311,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303312,"byte_end":13303385,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303386,"byte_end":13303460,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303461,"byte_end":13303535,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303536,"byte_end":13303609,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303610,"byte_end":13303686,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303687,"byte_end":13303720,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303721,"byte_end":13303724,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303725,"byte_end":13303741,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303742,"byte_end":13303745,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303746,"byte_end":13303820,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303821,"byte_end":13303888,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303889,"byte_end":13303892,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303893,"byte_end":13303900,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303901,"byte_end":13303932,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303933,"byte_end":13303983,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13303984,"byte_end":13304025,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304026,"byte_end":13304061,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304062,"byte_end":13304110,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304111,"byte_end":13304142,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304143,"byte_end":13304190,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304191,"byte_end":13304237,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304238,"byte_end":13304260,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304261,"byte_end":13304268,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304269,"byte_end":13304291,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304292,"byte_end":13304299,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304300,"byte_end":13304303,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304304,"byte_end":13304352,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304353,"byte_end":13304356,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304357,"byte_end":13304368,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304369,"byte_end":13304425,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304426,"byte_end":13304487,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304488,"byte_end":13304549,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304550,"byte_end":13304611,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304612,"byte_end":13304619,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304620,"byte_end":13304623,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304624,"byte_end":13304698,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304699,"byte_end":13304719,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304720,"byte_end":13304723,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304724,"byte_end":13304738,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304739,"byte_end":13304742,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304743,"byte_end":13304818,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304819,"byte_end":13304891,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304892,"byte_end":13304960,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13304961,"byte_end":13305037,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305038,"byte_end":13305079,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305080,"byte_end":13305083,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305084,"byte_end":13305154,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305155,"byte_end":13305173,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305174,"byte_end":13305177,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305178,"byte_end":13305185,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305186,"byte_end":13305218,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305219,"byte_end":13305269,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305270,"byte_end":13305314,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305315,"byte_end":13305328,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305329,"byte_end":13305364,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305365,"byte_end":13305396,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305397,"byte_end":13305420,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305421,"byte_end":13305428,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305429,"byte_end":13305451,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305452,"byte_end":13305459,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305460,"byte_end":13305463,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305464,"byte_end":13305514,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305515,"byte_end":13305518,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305519,"byte_end":13305530,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305531,"byte_end":13305564,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305565,"byte_end":13305598,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305599,"byte_end":13305632,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305633,"byte_end":13305640,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305641,"byte_end":13305644,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305645,"byte_end":13305714,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305715,"byte_end":13305752,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305753,"byte_end":13305792,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305793,"byte_end":13305838,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305839,"byte_end":13305886,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305887,"byte_end":13305917,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13305918,"byte_end":13305951,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13306513,"byte_end":13306520,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13306195,"byte_end":13306250,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13306251,"byte_end":13306254,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13306255,"byte_end":13306330,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13306331,"byte_end":13306411,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13306412,"byte_end":13306471,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307191,"byte_end":13307216,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":923}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307106,"byte_end":13307179,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307568,"byte_end":13307588,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307237,"byte_end":13307311,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307312,"byte_end":13307315,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307316,"byte_end":13307395,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307396,"byte_end":13307439,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307440,"byte_end":13307443,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307444,"byte_end":13307497,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307498,"byte_end":13307501,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307502,"byte_end":13307532,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307932,"byte_end":13307935,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307841,"byte_end":13307920,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308162,"byte_end":13308169,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308059,"byte_end":13308134,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308139,"byte_end":13308150,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308391,"byte_end":13308407,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308219,"byte_end":13308260,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308265,"byte_end":13308268,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308273,"byte_end":13308346,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308351,"byte_end":13308379,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308828,"byte_end":13308848,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308472,"byte_end":13308506,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308511,"byte_end":13308514,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308519,"byte_end":13308589,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308594,"byte_end":13308669,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308674,"byte_end":13308746,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13308751,"byte_end":13308816,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314104,"byte_end":13314107,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313562,"byte_end":13313637,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313642,"byte_end":13313653,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313658,"byte_end":13313661,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313666,"byte_end":13313680,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313685,"byte_end":13313688,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313693,"byte_end":13313700,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313705,"byte_end":13313736,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313741,"byte_end":13313789,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313794,"byte_end":13313797,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313802,"byte_end":13313843,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313848,"byte_end":13313883,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313888,"byte_end":13313919,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313924,"byte_end":13313955,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313960,"byte_end":13313989,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313994,"byte_end":13314014,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314019,"byte_end":13314041,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314046,"byte_end":13314053,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314058,"byte_end":13314080,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314085,"byte_end":13314092,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315292,"byte_end":13315302,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314771,"byte_end":13314820,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314825,"byte_end":13314828,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314833,"byte_end":13314865,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314870,"byte_end":13314873,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314878,"byte_end":13314946,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314951,"byte_end":13314954,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314959,"byte_end":13314973,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314978,"byte_end":13314981,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314986,"byte_end":13314993,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13314998,"byte_end":13315029,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315034,"byte_end":13315082,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315087,"byte_end":13315090,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315095,"byte_end":13315136,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315141,"byte_end":13315176,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315181,"byte_end":13315202,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315207,"byte_end":13315229,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315234,"byte_end":13315241,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315246,"byte_end":13315268,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315273,"byte_end":13315280,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315934,"byte_end":13315947,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315401,"byte_end":13315453,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315458,"byte_end":13315461,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315466,"byte_end":13315504,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315509,"byte_end":13315512,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315517,"byte_end":13315585,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315590,"byte_end":13315593,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315598,"byte_end":13315612,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315617,"byte_end":13315620,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315625,"byte_end":13315632,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315637,"byte_end":13315668,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315673,"byte_end":13315721,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315726,"byte_end":13315729,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315734,"byte_end":13315775,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315780,"byte_end":13315815,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315820,"byte_end":13315844,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315849,"byte_end":13315871,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315876,"byte_end":13315883,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315888,"byte_end":13315910,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13315915,"byte_end":13315922,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316580,"byte_end":13316593,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316047,"byte_end":13316099,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316104,"byte_end":13316107,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316112,"byte_end":13316150,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316155,"byte_end":13316158,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316163,"byte_end":13316231,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316236,"byte_end":13316239,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316244,"byte_end":13316258,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316263,"byte_end":13316266,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316271,"byte_end":13316278,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316283,"byte_end":13316314,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316319,"byte_end":13316367,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316372,"byte_end":13316375,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316380,"byte_end":13316421,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316426,"byte_end":13316461,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316466,"byte_end":13316490,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316495,"byte_end":13316517,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316522,"byte_end":13316529,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316534,"byte_end":13316556,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316561,"byte_end":13316568,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317674,"byte_end":13317690,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316762,"byte_end":13316791,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316796,"byte_end":13316799,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316804,"byte_end":13316876,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316881,"byte_end":13316906,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316911,"byte_end":13316914,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316919,"byte_end":13316991,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13316996,"byte_end":13317065,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317070,"byte_end":13317143,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317148,"byte_end":13317160,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317165,"byte_end":13317168,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317173,"byte_end":13317248,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317253,"byte_end":13317314,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317319,"byte_end":13317322,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317327,"byte_end":13317341,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317346,"byte_end":13317349,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317354,"byte_end":13317361,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317366,"byte_end":13317397,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317402,"byte_end":13317450,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317455,"byte_end":13317458,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317463,"byte_end":13317504,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317509,"byte_end":13317544,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317549,"byte_end":13317584,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317589,"byte_end":13317611,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317616,"byte_end":13317623,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317628,"byte_end":13317650,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317655,"byte_end":13317662,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318351,"byte_end":13318370,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317787,"byte_end":13317850,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317855,"byte_end":13317858,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317863,"byte_end":13317914,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317919,"byte_end":13317922,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13317927,"byte_end":13317995,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318000,"byte_end":13318003,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318008,"byte_end":13318022,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318027,"byte_end":13318030,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318035,"byte_end":13318042,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318047,"byte_end":13318078,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318083,"byte_end":13318131,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318136,"byte_end":13318139,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318144,"byte_end":13318185,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318190,"byte_end":13318225,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318230,"byte_end":13318261,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318266,"byte_end":13318288,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318293,"byte_end":13318300,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318305,"byte_end":13318327,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318332,"byte_end":13318339,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319029,"byte_end":13319048,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318539,"byte_end":13318605,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318610,"byte_end":13318613,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318618,"byte_end":13318673,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318678,"byte_end":13318681,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318686,"byte_end":13318700,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318705,"byte_end":13318708,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318713,"byte_end":13318720,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318725,"byte_end":13318756,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318761,"byte_end":13318809,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318814,"byte_end":13318817,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318822,"byte_end":13318863,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318868,"byte_end":13318903,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318908,"byte_end":13318939,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318944,"byte_end":13318966,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318971,"byte_end":13318978,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13318983,"byte_end":13319005,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319010,"byte_end":13319017,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319602,"byte_end":13319619,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319151,"byte_end":13319224,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319229,"byte_end":13319247,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319252,"byte_end":13319255,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319260,"byte_end":13319274,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319279,"byte_end":13319282,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319287,"byte_end":13319294,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319299,"byte_end":13319330,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319335,"byte_end":13319383,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319388,"byte_end":13319391,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319396,"byte_end":13319437,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319442,"byte_end":13319477,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319482,"byte_end":13319512,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319517,"byte_end":13319539,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319544,"byte_end":13319551,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319556,"byte_end":13319578,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319583,"byte_end":13319590,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320269,"byte_end":13320277,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319720,"byte_end":13319783,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319788,"byte_end":13319791,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319796,"byte_end":13319857,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319862,"byte_end":13319865,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319870,"byte_end":13319924,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319929,"byte_end":13319932,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319937,"byte_end":13319951,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319956,"byte_end":13319959,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319964,"byte_end":13319971,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13319976,"byte_end":13320007,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320012,"byte_end":13320060,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320065,"byte_end":13320068,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320073,"byte_end":13320114,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320119,"byte_end":13320154,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320159,"byte_end":13320179,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320184,"byte_end":13320206,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320211,"byte_end":13320218,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320223,"byte_end":13320245,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320250,"byte_end":13320257,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320797,"byte_end":13320806,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320375,"byte_end":13320438,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320443,"byte_end":13320446,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320451,"byte_end":13320465,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320470,"byte_end":13320473,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320478,"byte_end":13320485,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320490,"byte_end":13320538,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320543,"byte_end":13320564,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320569,"byte_end":13320604,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320609,"byte_end":13320640,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320645,"byte_end":13320676,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320681,"byte_end":13320710,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320715,"byte_end":13320735,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320740,"byte_end":13320761,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320766,"byte_end":13320773,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320778,"byte_end":13320785,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321462,"byte_end":13321470,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13320958,"byte_end":13321011,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321016,"byte_end":13321019,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321024,"byte_end":13321038,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321043,"byte_end":13321046,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321051,"byte_end":13321058,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321063,"byte_end":13321094,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321099,"byte_end":13321147,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321152,"byte_end":13321155,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321160,"byte_end":13321201,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321206,"byte_end":13321241,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321246,"byte_end":13321277,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321282,"byte_end":13321313,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321318,"byte_end":13321347,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321352,"byte_end":13321372,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321377,"byte_end":13321399,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321404,"byte_end":13321411,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321416,"byte_end":13321438,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321443,"byte_end":13321450,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322043,"byte_end":13322052,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321634,"byte_end":13321688,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321693,"byte_end":13321696,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321701,"byte_end":13321715,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321720,"byte_end":13321723,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321728,"byte_end":13321735,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321740,"byte_end":13321772,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321777,"byte_end":13321827,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321832,"byte_end":13321876,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321881,"byte_end":13321916,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321921,"byte_end":13321952,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321957,"byte_end":13321980,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321985,"byte_end":13321992,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13321997,"byte_end":13322019,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322024,"byte_end":13322031,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322661,"byte_end":13322671,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322213,"byte_end":13322262,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322267,"byte_end":13322270,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322275,"byte_end":13322289,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322294,"byte_end":13322297,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322302,"byte_end":13322309,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322314,"byte_end":13322359,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322364,"byte_end":13322414,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322419,"byte_end":13322475,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322480,"byte_end":13322493,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322498,"byte_end":13322533,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322538,"byte_end":13322569,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322574,"byte_end":13322598,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322603,"byte_end":13322610,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322615,"byte_end":13322637,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13322642,"byte_end":13322649,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324050,"byte_end":13324060,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13323807,"byte_end":13323894,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13323895,"byte_end":13323898,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13323899,"byte_end":13323937,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13323938,"byte_end":13323976,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325160,"byte_end":13325163,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324741,"byte_end":13324801,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324806,"byte_end":13324809,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324814,"byte_end":13324824,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324829,"byte_end":13324832,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324837,"byte_end":13324909,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324914,"byte_end":13324987,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324992,"byte_end":13325059,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325064,"byte_end":13325067,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325072,"byte_end":13325148,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326294,"byte_end":13326313,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325321,"byte_end":13325381,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325386,"byte_end":13325389,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325394,"byte_end":13325457,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325462,"byte_end":13325540,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325545,"byte_end":13325612,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325617,"byte_end":13325689,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325694,"byte_end":13325764,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325769,"byte_end":13325792,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325797,"byte_end":13325800,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325805,"byte_end":13325815,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325820,"byte_end":13325823,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325828,"byte_end":13325903,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325908,"byte_end":13325981,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13325986,"byte_end":13326062,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326067,"byte_end":13326140,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326145,"byte_end":13326215,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326220,"byte_end":13326223,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326228,"byte_end":13326282,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326879,"byte_end":13326889,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326441,"byte_end":13326491,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326496,"byte_end":13326499,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326504,"byte_end":13326511,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326516,"byte_end":13326535,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326540,"byte_end":13326578,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326583,"byte_end":13326586,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326591,"byte_end":13326625,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326630,"byte_end":13326677,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326682,"byte_end":13326689,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326694,"byte_end":13326701,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326706,"byte_end":13326744,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326749,"byte_end":13326752,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326757,"byte_end":13326810,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326815,"byte_end":13326855,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13326860,"byte_end":13326867,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331215,"byte_end":13331236,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331169,"byte_end":13331210,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331272,"byte_end":13331274,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331242,"byte_end":13331267,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331147,"byte_end":13331162,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1208}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331064,"byte_end":13331120,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13333196,"byte_end":13333213,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332010,"byte_end":13332151,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332152,"byte_end":13332155,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332156,"byte_end":13332194,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332195,"byte_end":13332233,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332234,"byte_end":13332237,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332238,"byte_end":13332251,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332252,"byte_end":13332319,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332320,"byte_end":13332323,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332324,"byte_end":13332357,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332358,"byte_end":13332387,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332388,"byte_end":13332391,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332392,"byte_end":13332399,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332400,"byte_end":13332456,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332457,"byte_end":13332491,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332492,"byte_end":13332495,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332496,"byte_end":13332501,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332502,"byte_end":13332549,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332550,"byte_end":13332603,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332604,"byte_end":13332681,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332682,"byte_end":13332717,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332718,"byte_end":13332739,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332740,"byte_end":13332790,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332791,"byte_end":13332854,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332855,"byte_end":13332918,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332919,"byte_end":13332982,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13332983,"byte_end":13333039,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13333040,"byte_end":13333089,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13333090,"byte_end":13333102,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13333103,"byte_end":13333110,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13333111,"byte_end":13333118,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13333119,"byte_end":13333122,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334548,"byte_end":13334551,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334106,"byte_end":13334174,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334179,"byte_end":13334182,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334187,"byte_end":13334197,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334202,"byte_end":13334205,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334210,"byte_end":13334289,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334294,"byte_end":13334368,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334373,"byte_end":13334440,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334445,"byte_end":13334448,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334453,"byte_end":13334536,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335862,"byte_end":13335881,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334831,"byte_end":13334899,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334904,"byte_end":13334907,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334912,"byte_end":13334982,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334987,"byte_end":13335073,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335078,"byte_end":13335148,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335153,"byte_end":13335230,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335235,"byte_end":13335305,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335310,"byte_end":13335333,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335338,"byte_end":13335341,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335346,"byte_end":13335356,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335361,"byte_end":13335364,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335369,"byte_end":13335451,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335456,"byte_end":13335529,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335534,"byte_end":13335611,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335616,"byte_end":13335689,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335694,"byte_end":13335769,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335774,"byte_end":13335777,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13335782,"byte_end":13335850,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336669,"byte_end":13336679,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336138,"byte_end":13336189,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336194,"byte_end":13336197,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336202,"byte_end":13336209,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336214,"byte_end":13336233,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336238,"byte_end":13336283,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336288,"byte_end":13336291,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336296,"byte_end":13336368,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336373,"byte_end":13336420,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336425,"byte_end":13336432,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336437,"byte_end":13336444,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336449,"byte_end":13336494,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336499,"byte_end":13336502,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336507,"byte_end":13336600,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336605,"byte_end":13336645,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336650,"byte_end":13336657,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340775,"byte_end":13340797,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340728,"byte_end":13340770,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340833,"byte_end":13340835,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340803,"byte_end":13340828,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340699,"byte_end":13340721,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1240}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340615,"byte_end":13340672,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1328},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1458}],"decl_id":null,"docs":" Additional utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/cfg.rs","byte_start":6728,"byte_end":6752,"line_start":66,"line_end":66,"column_start":13,"column_end":37}},{"value":"/ Additional utilities for tracking time.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341404,"byte_end":13341447,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341448,"byte_end":13341451,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides additional utilities for executing code after a set period","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341452,"byte_end":13341535,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ of time. Currently there is only one:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341536,"byte_end":13341577,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341578,"byte_end":13341581,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341582,"byte_end":13341659,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341660,"byte_end":13341678,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341679,"byte_end":13341682,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341683,"byte_end":13341751,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":13358752,"byte_end":13358757,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":13358702,"byte_end":13358742,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":13358815,"byte_end":13358823,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":13358788,"byte_end":13358805,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":13358912,"byte_end":13358917,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":13358830,"byte_end":13358902,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1482},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1533},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1428},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1443}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359352,"byte_end":13359384,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359385,"byte_end":13359388,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359389,"byte_end":13359429,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359430,"byte_end":13359433,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359434,"byte_end":13359471,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363890,"byte_end":13363900,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359752,"byte_end":13359784,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359785,"byte_end":13359788,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359789,"byte_end":13359866,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359867,"byte_end":13359907,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359908,"byte_end":13359911,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359912,"byte_end":13359923,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359924,"byte_end":13359927,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359928,"byte_end":13359995,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13359996,"byte_end":13360076,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360077,"byte_end":13360155,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360156,"byte_end":13360192,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360193,"byte_end":13360196,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360197,"byte_end":13360267,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360268,"byte_end":13360354,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` is returned indicating that the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360355,"byte_end":13360440,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360441,"byte_end":13360510,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360511,"byte_end":13360514,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360515,"byte_end":13360544,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360545,"byte_end":13360548,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360549,"byte_end":13360639,"line_start":38,"line_end":38,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `Poll::Pending` is returned and the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360640,"byte_end":13360725,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360726,"byte_end":13360802,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360803,"byte_end":13360815,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360816,"byte_end":13360819,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360820,"byte_end":13360899,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ returns `Poll::Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360900,"byte_end":13360983,"line_start":44,"line_end":44,"column_start":1,"column_end":84}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13360984,"byte_end":13361060,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ returning items or `Poll::Pending`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361061,"byte_end":13361100,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361101,"byte_end":13361104,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361105,"byte_end":13361183,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361184,"byte_end":13361260,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire at the same instant. Also note that delays are","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361261,"byte_end":13361342,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361343,"byte_end":13361382,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361383,"byte_end":13361386,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361387,"byte_end":13361407,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361408,"byte_end":13361411,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of a timer wheel similar to that used internally","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361412,"byte_end":13361516,"line_start":55,"line_end":55,"column_start":1,"column_end":105}},{"value":"/ by Tokio's standalone timer utilities such as [`sleep`]. Because of this, it offers the same","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361517,"byte_end":13361613,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361614,"byte_end":13361655,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361656,"byte_end":13361659,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361660,"byte_end":13361760,"line_start":59,"line_end":59,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361761,"byte_end":13361826,"line_start":60,"line_end":60,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361827,"byte_end":13361830,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361831,"byte_end":13361913,"line_start":62,"line_end":62,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361914,"byte_end":13361941,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361942,"byte_end":13361945,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361946,"byte_end":13361957,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361958,"byte_end":13361961,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13361962,"byte_end":13362009,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362010,"byte_end":13362013,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362014,"byte_end":13362032,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::error::Error;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362033,"byte_end":13362067,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ use tokio_util::time::{DelayQueue, delay_queue};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362068,"byte_end":13362120,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362121,"byte_end":13362124,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362125,"byte_end":13362148,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362149,"byte_end":13362183,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362184,"byte_end":13362219,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362220,"byte_end":13362248,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362249,"byte_end":13362278,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362279,"byte_end":13362305,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362306,"byte_end":13362309,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362310,"byte_end":13362328,"line_start":80,"line_end":80,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362329,"byte_end":13362391,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362392,"byte_end":13362434,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362435,"byte_end":13362440,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362441,"byte_end":13362444,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362445,"byte_end":13362474,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362475,"byte_end":13362478,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362479,"byte_end":13362495,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362496,"byte_end":13362555,"line_start":88,"line_end":88,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362556,"byte_end":13362596,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362597,"byte_end":13362665,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362666,"byte_end":13362669,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362670,"byte_end":13362723,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362724,"byte_end":13362733,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362734,"byte_end":13362737,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362738,"byte_end":13362795,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362796,"byte_end":13362829,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362830,"byte_end":13362867,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362868,"byte_end":13362877,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362878,"byte_end":13362881,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362882,"byte_end":13362928,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362929,"byte_end":13362997,"line_start":101,"line_end":101,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13362998,"byte_end":13363050,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363051,"byte_end":13363064,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363065,"byte_end":13363074,"line_start":104,"line_end":104,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363075,"byte_end":13363078,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363079,"byte_end":13363162,"line_start":106,"line_end":106,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363163,"byte_end":13363240,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363241,"byte_end":13363274,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363275,"byte_end":13363328,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363329,"byte_end":13363342,"line_start":110,"line_end":110,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363343,"byte_end":13363346,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363347,"byte_end":13363378,"line_start":112,"line_end":112,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363379,"byte_end":13363388,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363389,"byte_end":13363394,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363395,"byte_end":13363402,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363403,"byte_end":13363406,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363407,"byte_end":13363442,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363443,"byte_end":13363484,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363485,"byte_end":13363508,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363509,"byte_end":13363585,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363586,"byte_end":13363633,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363634,"byte_end":13363689,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363690,"byte_end":13363727,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/ [`sleep`]: fn@tokio::time::sleep","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363728,"byte_end":13363764,"line_start":124,"line_end":124,"column_start":1,"column_end":37}},{"value":"/ [`slab`]: slab","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363765,"byte_end":13363783,"line_start":125,"line_end":125,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363784,"byte_end":13363823,"line_start":126,"line_end":126,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13363824,"byte_end":13363861,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13364876,"byte_end":13364883,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and been removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and been removed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13364653,"byte_end":13364716,"line_start":155,"line_end":155,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13364717,"byte_end":13364720,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13364721,"byte_end":13364777,"line_start":157,"line_end":157,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13364778,"byte_end":13364781,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13364782,"byte_end":13364847,"line_start":159,"line_end":159,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13365378,"byte_end":13365381,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":1503}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13365051,"byte_end":13365097,"line_start":172,"line_end":172,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13365098,"byte_end":13365101,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13365102,"byte_end":13365183,"line_start":174,"line_end":174,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13365184,"byte_end":13365219,"line_start":175,"line_end":175,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13365220,"byte_end":13365223,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13365224,"byte_end":13365261,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13365262,"byte_end":13365315,"line_start":178,"line_end":178,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366365,"byte_end":13366368,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366059,"byte_end":13366098,"line_start":214,"line_end":214,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366103,"byte_end":13366106,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366111,"byte_end":13366184,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366189,"byte_end":13366192,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366197,"byte_end":13366211,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366216,"byte_end":13366219,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366224,"byte_end":13366235,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/ # use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366240,"byte_end":13366279,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366284,"byte_end":13366341,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366346,"byte_end":13366353,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367263,"byte_end":13367276,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366438,"byte_end":13366505,"line_start":228,"line_end":228,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366510,"byte_end":13366513,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366518,"byte_end":13366589,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366594,"byte_end":13366663,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366668,"byte_end":13366680,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366685,"byte_end":13366688,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366693,"byte_end":13366707,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366712,"byte_end":13366715,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366720,"byte_end":13366731,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ # use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366736,"byte_end":13366775,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366780,"byte_end":13366810,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366815,"byte_end":13366818,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366823,"byte_end":13366843,"line_start":240,"line_end":240,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366848,"byte_end":13366871,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366876,"byte_end":13366932,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366937,"byte_end":13366940,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // These insertions are done without further allocation","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366945,"byte_end":13367004,"line_start":244,"line_end":244,"column_start":5,"column_end":64}},{"value":"/ for i in 0..10 {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367009,"byte_end":13367029,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/     delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367034,"byte_end":13367088,"line_start":246,"line_end":246,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367093,"byte_end":13367098,"line_start":247,"line_end":247,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367103,"byte_end":13367106,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // This will make the queue allocate additional storage","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367111,"byte_end":13367170,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/ delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367175,"byte_end":13367227,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367232,"byte_end":13367239,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367244,"byte_end":13367251,"line_start":252,"line_end":252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369364,"byte_end":13369373,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367587,"byte_end":13367660,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367665,"byte_end":13367674,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367679,"byte_end":13367682,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367687,"byte_end":13367761,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367766,"byte_end":13367786,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367791,"byte_end":13367794,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367799,"byte_end":13367874,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367879,"byte_end":13367957,"line_start":272,"line_end":272,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13367962,"byte_end":13368026,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368031,"byte_end":13368034,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used as an argument to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368039,"byte_end":13368114,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is a token and is reused once","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368119,"byte_end":13368196,"line_start":276,"line_end":276,"column_start":5,"column_end":82}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368201,"byte_end":13368279,"line_start":277,"line_end":277,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368284,"byte_end":13368357,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368362,"byte_end":13368438,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368443,"byte_end":13368477,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368482,"byte_end":13368485,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368490,"byte_end":13368542,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368547,"byte_end":13368550,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368555,"byte_end":13368567,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368572,"byte_end":13368575,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368580,"byte_end":13368640,"line_start":286,"line_end":286,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368645,"byte_end":13368648,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368653,"byte_end":13368667,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368672,"byte_end":13368675,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368680,"byte_end":13368695,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368700,"byte_end":13368703,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368708,"byte_end":13368719,"line_start":292,"line_end":292,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368724,"byte_end":13368765,"line_start":293,"line_end":293,"column_start":5,"column_end":46}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368770,"byte_end":13368807,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368812,"byte_end":13368815,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368820,"byte_end":13368840,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368845,"byte_end":13368868,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368873,"byte_end":13368917,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert_at(","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368922,"byte_end":13368958,"line_start":299,"line_end":299,"column_start":5,"column_end":41}},{"value":"/     \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13368963,"byte_end":13369019,"line_start":300,"line_end":300,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369024,"byte_end":13369027,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369032,"byte_end":13369055,"line_start":302,"line_end":302,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369060,"byte_end":13369100,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369105,"byte_end":13369144,"line_start":304,"line_end":304,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369149,"byte_end":13369156,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369161,"byte_end":13369168,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369173,"byte_end":13369176,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369181,"byte_end":13369228,"line_start":308,"line_end":308,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369233,"byte_end":13369268,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369273,"byte_end":13369306,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369311,"byte_end":13369334,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13369339,"byte_end":13369352,"line_start":312,"line_end":312,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13370852,"byte_end":13370864,"line_start":357,"line_end":357,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13370642,"byte_end":13370717,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13370722,"byte_end":13370798,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ `None` if the queue is exhausted.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13370803,"byte_end":13370840,"line_start":356,"line_end":356,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373546,"byte_end":13373552,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13371687,"byte_end":13371764,"line_start":386,"line_end":386,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13371769,"byte_end":13371781,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13371786,"byte_end":13371789,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13371794,"byte_end":13371863,"line_start":389,"line_end":389,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13371868,"byte_end":13371896,"line_start":390,"line_end":390,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13371901,"byte_end":13371904,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `timeout` duration has","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13371909,"byte_end":13371972,"line_start":392,"line_end":392,"column_start":5,"column_end":68}},{"value":"/ elapsed after `insert` was called. At that point, `value` will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13371977,"byte_end":13372043,"line_start":393,"line_end":393,"column_start":5,"column_end":71}},{"value":"/ be returned from [`poll_expired`]. If `timeout` is a `Duration` of","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372048,"byte_end":13372118,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/ zero, then `value` is immediately made available to poll.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372123,"byte_end":13372184,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372189,"byte_end":13372192,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used as an","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372197,"byte_end":13372260,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"/ argument to [`remove`] and [`reset`]. Note that [`Key`] is a","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372265,"byte_end":13372329,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/ token and is reused once `value` is removed from the queue","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372334,"byte_end":13372396,"line_start":399,"line_end":399,"column_start":5,"column_end":67}},{"value":"/ either by calling [`poll_expired`] after `timeout` has elapsed","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372401,"byte_end":13372467,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/ or by calling [`remove`]. At this point, the caller must not","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372472,"byte_end":13372536,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/ use the returned [`Key`] again as it may reference a different","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372541,"byte_end":13372607,"line_start":402,"line_end":402,"column_start":5,"column_end":71}},{"value":"/ item in the queue.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372612,"byte_end":13372634,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372639,"byte_end":13372642,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372647,"byte_end":13372699,"line_start":405,"line_end":405,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372704,"byte_end":13372707,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372712,"byte_end":13372724,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372729,"byte_end":13372732,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372737,"byte_end":13372802,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ duration supported by the timer in the current `Runtime`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372807,"byte_end":13372868,"line_start":410,"line_end":410,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372873,"byte_end":13372876,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372881,"byte_end":13372895,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372900,"byte_end":13372903,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372908,"byte_end":13372923,"line_start":414,"line_end":414,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372928,"byte_end":13372931,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372936,"byte_end":13372947,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372952,"byte_end":13372989,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13372994,"byte_end":13373022,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373027,"byte_end":13373030,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373035,"byte_end":13373055,"line_start":420,"line_end":420,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373060,"byte_end":13373083,"line_start":421,"line_end":421,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373088,"byte_end":13373132,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373137,"byte_end":13373201,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373206,"byte_end":13373209,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373214,"byte_end":13373237,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373242,"byte_end":13373282,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373287,"byte_end":13373326,"line_start":427,"line_end":427,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373331,"byte_end":13373338,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373343,"byte_end":13373350,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373355,"byte_end":13373358,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373363,"byte_end":13373410,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373415,"byte_end":13373450,"line_start":432,"line_end":432,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373455,"byte_end":13373488,"line_start":433,"line_end":433,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373493,"byte_end":13373516,"line_start":434,"line_end":434,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13373521,"byte_end":13373534,"line_start":435,"line_end":435,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375625,"byte_end":13375631,"line_start":500,"line_end":500,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13374786,"byte_end":13374844,"line_start":472,"line_end":472,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13374849,"byte_end":13374852,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13374857,"byte_end":13374930,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13374935,"byte_end":13375008,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375013,"byte_end":13375030,"line_start":476,"line_end":476,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375035,"byte_end":13375038,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375043,"byte_end":13375055,"line_start":478,"line_end":478,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375060,"byte_end":13375063,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375068,"byte_end":13375131,"line_start":480,"line_end":480,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375136,"byte_end":13375139,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375144,"byte_end":13375158,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375163,"byte_end":13375166,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375171,"byte_end":13375186,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375191,"byte_end":13375194,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375199,"byte_end":13375210,"line_start":486,"line_end":486,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375215,"byte_end":13375252,"line_start":487,"line_end":487,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375257,"byte_end":13375285,"line_start":488,"line_end":488,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375290,"byte_end":13375293,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375298,"byte_end":13375318,"line_start":490,"line_end":490,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375323,"byte_end":13375346,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375351,"byte_end":13375395,"line_start":492,"line_end":492,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375400,"byte_end":13375464,"line_start":493,"line_end":493,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375469,"byte_end":13375472,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375477,"byte_end":13375500,"line_start":495,"line_end":495,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375505,"byte_end":13375545,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375550,"byte_end":13375589,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375594,"byte_end":13375601,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13375606,"byte_end":13375613,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377496,"byte_end":13377504,"line_start":556,"line_end":556,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376371,"byte_end":13376444,"line_start":522,"line_end":522,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376449,"byte_end":13376452,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376457,"byte_end":13376532,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376537,"byte_end":13376554,"line_start":525,"line_end":525,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376559,"byte_end":13376562,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376567,"byte_end":13376642,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376647,"byte_end":13376723,"line_start":528,"line_end":528,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376728,"byte_end":13376743,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376748,"byte_end":13376751,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376756,"byte_end":13376768,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376773,"byte_end":13376776,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376781,"byte_end":13376855,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376860,"byte_end":13376891,"line_start":534,"line_end":534,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376896,"byte_end":13376899,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376904,"byte_end":13376918,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376923,"byte_end":13376926,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376931,"byte_end":13376946,"line_start":538,"line_end":538,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376951,"byte_end":13376954,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376959,"byte_end":13376970,"line_start":540,"line_end":540,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13376975,"byte_end":13377016,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377021,"byte_end":13377058,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377063,"byte_end":13377066,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377071,"byte_end":13377091,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377096,"byte_end":13377119,"line_start":545,"line_end":545,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377124,"byte_end":13377168,"line_start":546,"line_end":546,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377173,"byte_end":13377237,"line_start":547,"line_end":547,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377242,"byte_end":13377245,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377250,"byte_end":13377303,"line_start":549,"line_end":549,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377308,"byte_end":13377311,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377316,"byte_end":13377389,"line_start":551,"line_end":551,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377394,"byte_end":13377397,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377402,"byte_end":13377460,"line_start":553,"line_end":553,"column_start":5,"column_end":63}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377465,"byte_end":13377472,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13377477,"byte_end":13377484,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379491,"byte_end":13379496,"line_start":616,"line_end":616,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378356,"byte_end":13378424,"line_start":581,"line_end":581,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378429,"byte_end":13378443,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378448,"byte_end":13378451,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378456,"byte_end":13378531,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378536,"byte_end":13378556,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378561,"byte_end":13378564,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378569,"byte_end":13378639,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378644,"byte_end":13378714,"line_start":588,"line_end":588,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378719,"byte_end":13378747,"line_start":589,"line_end":589,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378752,"byte_end":13378755,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378760,"byte_end":13378772,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378777,"byte_end":13378780,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378785,"byte_end":13378860,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378865,"byte_end":13378920,"line_start":594,"line_end":594,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378925,"byte_end":13378928,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378933,"byte_end":13378947,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378952,"byte_end":13378955,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378960,"byte_end":13378975,"line_start":598,"line_end":598,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378980,"byte_end":13378983,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13378988,"byte_end":13378999,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379004,"byte_end":13379041,"line_start":601,"line_end":601,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379046,"byte_end":13379074,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379079,"byte_end":13379082,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379087,"byte_end":13379107,"line_start":604,"line_end":604,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379112,"byte_end":13379135,"line_start":605,"line_end":605,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379140,"byte_end":13379184,"line_start":606,"line_end":606,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379189,"byte_end":13379253,"line_start":607,"line_end":607,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379258,"byte_end":13379261,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379266,"byte_end":13379319,"line_start":609,"line_end":609,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379324,"byte_end":13379327,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379332,"byte_end":13379385,"line_start":611,"line_end":611,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379390,"byte_end":13379393,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379398,"byte_end":13379455,"line_start":613,"line_end":613,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379460,"byte_end":13379467,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379472,"byte_end":13379479,"line_start":615,"line_end":615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380347,"byte_end":13380352,"line_start":647,"line_end":647,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379605,"byte_end":13379646,"line_start":620,"line_end":620,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379651,"byte_end":13379654,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379659,"byte_end":13379733,"line_start":622,"line_end":622,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379738,"byte_end":13379741,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379746,"byte_end":13379812,"line_start":624,"line_end":624,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379817,"byte_end":13379820,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379825,"byte_end":13379872,"line_start":626,"line_end":626,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379877,"byte_end":13379880,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379885,"byte_end":13379899,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379904,"byte_end":13379907,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379912,"byte_end":13379923,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379928,"byte_end":13379965,"line_start":631,"line_end":631,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13379970,"byte_end":13379998,"line_start":632,"line_end":632,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380003,"byte_end":13380006,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380011,"byte_end":13380031,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380036,"byte_end":13380059,"line_start":635,"line_end":635,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380064,"byte_end":13380108,"line_start":636,"line_end":636,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380113,"byte_end":13380116,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380121,"byte_end":13380175,"line_start":638,"line_end":638,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380180,"byte_end":13380183,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380188,"byte_end":13380225,"line_start":640,"line_end":640,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380230,"byte_end":13380233,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ delay_queue.clear();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380238,"byte_end":13380262,"line_start":642,"line_end":642,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380267,"byte_end":13380270,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ assert!(delay_queue.is_empty());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380275,"byte_end":13380311,"line_start":644,"line_end":644,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380316,"byte_end":13380323,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380328,"byte_end":13380335,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380829,"byte_end":13380837,"line_start":664,"line_end":664,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380507,"byte_end":13380582,"line_start":654,"line_end":654,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380587,"byte_end":13380590,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380595,"byte_end":13380609,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380614,"byte_end":13380617,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380622,"byte_end":13380633,"line_start":658,"line_end":658,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380638,"byte_end":13380675,"line_start":659,"line_end":659,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380680,"byte_end":13380683,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380688,"byte_end":13380757,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380762,"byte_end":13380805,"line_start":662,"line_end":662,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380810,"byte_end":13380817,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381394,"byte_end":13381397,"line_start":684,"line_end":684,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380896,"byte_end":13380954,"line_start":668,"line_end":668,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380959,"byte_end":13380962,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380967,"byte_end":13380981,"line_start":670,"line_end":670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380986,"byte_end":13380989,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13380994,"byte_end":13381005,"line_start":672,"line_end":672,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381010,"byte_end":13381047,"line_start":673,"line_end":673,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381052,"byte_end":13381080,"line_start":674,"line_end":674,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381085,"byte_end":13381088,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381093,"byte_end":13381113,"line_start":676,"line_end":676,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381118,"byte_end":13381141,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381146,"byte_end":13381219,"line_start":678,"line_end":678,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381224,"byte_end":13381261,"line_start":679,"line_end":679,"column_start":5,"column_end":42}},{"value":"/ delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381266,"byte_end":13381316,"line_start":680,"line_end":680,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381321,"byte_end":13381358,"line_start":681,"line_end":681,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381363,"byte_end":13381370,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381375,"byte_end":13381382,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382595,"byte_end":13382602,"line_start":721,"line_end":721,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381451,"byte_end":13381522,"line_start":688,"line_end":688,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381527,"byte_end":13381550,"line_start":689,"line_end":689,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381555,"byte_end":13381558,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381563,"byte_end":13381638,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381643,"byte_end":13381719,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381724,"byte_end":13381800,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381805,"byte_end":13381881,"line_start":694,"line_end":694,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381886,"byte_end":13381909,"line_start":695,"line_end":695,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381914,"byte_end":13381917,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381922,"byte_end":13381994,"line_start":697,"line_end":697,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13381999,"byte_end":13382032,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382037,"byte_end":13382040,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382045,"byte_end":13382057,"line_start":700,"line_end":700,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382062,"byte_end":13382065,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382070,"byte_end":13382142,"line_start":702,"line_end":702,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382147,"byte_end":13382169,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382174,"byte_end":13382177,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382182,"byte_end":13382196,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382201,"byte_end":13382204,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382209,"byte_end":13382216,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382221,"byte_end":13382258,"line_start":708,"line_end":708,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382263,"byte_end":13382291,"line_start":709,"line_end":709,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382296,"byte_end":13382299,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382304,"byte_end":13382324,"line_start":711,"line_end":711,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382329,"byte_end":13382352,"line_start":712,"line_end":712,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382357,"byte_end":13382401,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382406,"byte_end":13382409,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382414,"byte_end":13382471,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"/ delay_queue.reserve(10);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382476,"byte_end":13382504,"line_start":716,"line_end":716,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382509,"byte_end":13382512,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382517,"byte_end":13382559,"line_start":718,"line_end":718,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382564,"byte_end":13382571,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382576,"byte_end":13382583,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383312,"byte_end":13383320,"line_start":745,"line_end":745,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382685,"byte_end":13382739,"line_start":725,"line_end":725,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382744,"byte_end":13382747,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382752,"byte_end":13382826,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `Poll::Pending`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382831,"byte_end":13382892,"line_start":728,"line_end":728,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382897,"byte_end":13382900,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382905,"byte_end":13382919,"line_start":730,"line_end":730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382924,"byte_end":13382927,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382932,"byte_end":13382939,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382944,"byte_end":13382981,"line_start":733,"line_end":733,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13382986,"byte_end":13383014,"line_start":734,"line_end":734,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383019,"byte_end":13383022,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383027,"byte_end":13383047,"line_start":736,"line_end":736,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383052,"byte_end":13383075,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383080,"byte_end":13383124,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ assert!(delay_queue.is_empty());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383129,"byte_end":13383165,"line_start":739,"line_end":739,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383170,"byte_end":13383173,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383178,"byte_end":13383234,"line_start":741,"line_end":741,"column_start":5,"column_end":61}},{"value":"/ assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383239,"byte_end":13383276,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383281,"byte_end":13383288,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13383293,"byte_end":13383300,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13387966,"byte_end":13387973,"line_start":917,"line_end":917,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13387911,"byte_end":13387954,"line_start":916,"line_end":916,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13388082,"byte_end":13388089,"line_start":922,"line_end":922,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13388019,"byte_end":13388070,"line_start":921,"line_end":921,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13388207,"byte_end":13388217,"line_start":927,"line_end":927,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13388147,"byte_end":13388195,"line_start":926,"line_end":926,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13388328,"byte_end":13388336,"line_start":932,"line_end":932,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13388260,"byte_end":13388316,"line_start":931,"line_end":931,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13388456,"byte_end":13388459,"line_start":937,"line_end":937,"column_start":12,"column_end":15},"name":"key","qualname":"<Expired<T>>::key","value":"pub fn key(&Self) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Returns the key that the expiration is indexed by.\n","sig":null,"attributes":[{"value":"/ Returns the key that the expiration is indexed by.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13388390,"byte_end":13388444,"line_start":936,"line_end":936,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":304}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14330,"byte_end":14339,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1537}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14153,"byte_end":14217,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14218,"byte_end":14301,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14602,"byte_end":14608,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14415,"byte_end":14489,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14494,"byte_end":14564,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14569,"byte_end":14590,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8741,"byte_end":8758,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7519,"byte_end":7596,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7597,"byte_end":7607,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7608,"byte_end":7611,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7612,"byte_end":7677,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7678,"byte_end":7752,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7753,"byte_end":7756,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7757,"byte_end":7840,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7841,"byte_end":7844,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7845,"byte_end":7859,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7860,"byte_end":7863,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7864,"byte_end":7877,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7878,"byte_end":7900,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7901,"byte_end":7945,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7946,"byte_end":7949,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7950,"byte_end":7968,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7969,"byte_end":7990,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7991,"byte_end":8036,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8037,"byte_end":8078,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8079,"byte_end":8082,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8083,"byte_end":8134,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8135,"byte_end":8198,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8199,"byte_end":8220,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8221,"byte_end":8270,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8271,"byte_end":8317,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8318,"byte_end":8339,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8340,"byte_end":8357,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8358,"byte_end":8439,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8440,"byte_end":8462,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8463,"byte_end":8480,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8481,"byte_end":8494,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8495,"byte_end":8506,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8507,"byte_end":8510,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8511,"byte_end":8544,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8545,"byte_end":8620,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8621,"byte_end":8648,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8649,"byte_end":8660,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8661,"byte_end":8664,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8665,"byte_end":8715,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8716,"byte_end":8721,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8722,"byte_end":8729,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8985,"byte_end":9010,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1543}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":11105182,"byte_end":11105191,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9994,"byte_end":9997,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9919,"byte_end":9982,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11396,"byte_end":11407,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10129,"byte_end":10200,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10205,"byte_end":10238,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10243,"byte_end":10246,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10251,"byte_end":10322,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10327,"byte_end":10359,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10364,"byte_end":10367,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10372,"byte_end":10386,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10391,"byte_end":10394,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10399,"byte_end":10412,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10417,"byte_end":10439,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10444,"byte_end":10488,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10493,"byte_end":10496,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10501,"byte_end":10519,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10524,"byte_end":10545,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10550,"byte_end":10595,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10600,"byte_end":10646,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10651,"byte_end":10654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10659,"byte_end":10710,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10715,"byte_end":10778,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10783,"byte_end":10804,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10809,"byte_end":10857,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10862,"byte_end":10908,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10913,"byte_end":10934,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10939,"byte_end":10956,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10961,"byte_end":11042,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11047,"byte_end":11069,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11074,"byte_end":11091,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11096,"byte_end":11109,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11114,"byte_end":11125,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11130,"byte_end":11133,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11138,"byte_end":11171,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11176,"byte_end":11251,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11256,"byte_end":11283,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11288,"byte_end":11299,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11304,"byte_end":11307,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11312,"byte_end":11362,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11367,"byte_end":11372,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11377,"byte_end":11384,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12130,"byte_end":12136,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11542,"byte_end":11614,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11619,"byte_end":11639,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11644,"byte_end":11647,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11652,"byte_end":11719,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11724,"byte_end":11727,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11732,"byte_end":11805,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11810,"byte_end":11885,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11890,"byte_end":11964,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11969,"byte_end":12041,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12046,"byte_end":12118,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12268,"byte_end":12280,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12197,"byte_end":12256,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12639,"byte_end":12648,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12354,"byte_end":12428,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12433,"byte_end":12436,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12441,"byte_end":12515,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12520,"byte_end":12551,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12556,"byte_end":12559,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12564,"byte_end":12583,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12588,"byte_end":12591,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12596,"byte_end":12627,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12992,"byte_end":13002,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12829,"byte_end":12870,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12875,"byte_end":12878,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12883,"byte_end":12955,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12960,"byte_end":12980,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29661,"byte_end":29671,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29523,"byte_end":29580,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29581,"byte_end":29584,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29585,"byte_end":29632,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30394,"byte_end":30397,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30352,"byte_end":30382,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31112,"byte_end":31122,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30600,"byte_end":30629,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30634,"byte_end":30637,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30642,"byte_end":30718,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30723,"byte_end":30792,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30797,"byte_end":30815,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30820,"byte_end":30823,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30828,"byte_end":30899,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30904,"byte_end":30977,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30982,"byte_end":31056,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31061,"byte_end":31100,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32643,"byte_end":32657,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31546,"byte_end":31627,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31632,"byte_end":31678,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31683,"byte_end":31686,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31691,"byte_end":31739,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31744,"byte_end":31747,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31752,"byte_end":31836,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31841,"byte_end":31900,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31905,"byte_end":31990,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31995,"byte_end":32014,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32019,"byte_end":32098,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32103,"byte_end":32106,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32111,"byte_end":32186,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32191,"byte_end":32267,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32272,"byte_end":32327,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32332,"byte_end":32406,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32411,"byte_end":32484,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32489,"byte_end":32523,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32528,"byte_end":32531,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32536,"byte_end":32612,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32617,"byte_end":32631,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33291,"byte_end":33299,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33043,"byte_end":33108,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33113,"byte_end":33116,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33121,"byte_end":33194,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33199,"byte_end":33209,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33214,"byte_end":33217,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33222,"byte_end":33279,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33411,"byte_end":33420,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33353,"byte_end":33399,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33761,"byte_end":33772,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33562,"byte_end":33596,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33601,"byte_end":33604,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33609,"byte_end":33682,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33687,"byte_end":33749,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34077,"byte_end":34086,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33877,"byte_end":33912,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33917,"byte_end":33920,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33925,"byte_end":33998,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34003,"byte_end":34065,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34786,"byte_end":34803,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34237,"byte_end":34306,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34311,"byte_end":34314,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34319,"byte_end":34389,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34394,"byte_end":34467,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34472,"byte_end":34518,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34523,"byte_end":34526,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34531,"byte_end":34606,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34611,"byte_end":34685,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34690,"byte_end":34716,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34721,"byte_end":34724,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34729,"byte_end":34774,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34969,"byte_end":34979,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34856,"byte_end":34903,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34908,"byte_end":34911,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34916,"byte_end":34957,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37491,"byte_end":37504,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37360,"byte_end":37433,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37434,"byte_end":37437,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37438,"byte_end":37479,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37698,"byte_end":37701,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37653,"byte_end":37686,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37865,"byte_end":37870,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37828,"byte_end":37853,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37976,"byte_end":37987,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37922,"byte_end":37964,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38102,"byte_end":38112,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38057,"byte_end":38090,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38846,"byte_end":38858,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38173,"byte_end":38221,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38226,"byte_end":38229,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38234,"byte_end":38275,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38280,"byte_end":38283,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38288,"byte_end":38350,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38355,"byte_end":38415,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38420,"byte_end":38480,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38485,"byte_end":38488,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38493,"byte_end":38568,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38573,"byte_end":38641,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38646,"byte_end":38722,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38727,"byte_end":38795,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38800,"byte_end":38834,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40286,"byte_end":40303,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40002,"byte_end":40054,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40059,"byte_end":40062,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40067,"byte_end":40143,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40148,"byte_end":40182,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40187,"byte_end":40190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40195,"byte_end":40274,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40763,"byte_end":40774,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40376,"byte_end":40418,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40423,"byte_end":40426,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40431,"byte_end":40504,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40509,"byte_end":40549,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40554,"byte_end":40557,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40562,"byte_end":40632,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40637,"byte_end":40671,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40676,"byte_end":40679,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40684,"byte_end":40751,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41917,"byte_end":41934,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":274}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41717,"byte_end":41774,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41775,"byte_end":41778,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41779,"byte_end":41846,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41847,"byte_end":41905,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42112,"byte_end":42115,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42029,"byte_end":42100,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42696,"byte_end":42699,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42481,"byte_end":42533,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42538,"byte_end":42541,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42546,"byte_end":42618,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42623,"byte_end":42684,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43142,"byte_end":43149,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42901,"byte_end":42953,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42958,"byte_end":42961,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42966,"byte_end":43039,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43044,"byte_end":43114,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43119,"byte_end":43130,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":44989,"byte_end":44996,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":44925,"byte_end":44977,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45282,"byte_end":45286,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45227,"byte_end":45270,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":1585},{"krate":0,"index":1594},{"krate":0,"index":1598},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":360},{"krate":0,"index":365},{"krate":0,"index":371}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46399,"byte_end":46434,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48381,"byte_end":48385,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48394,"byte_end":48399,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48362,"byte_end":48368,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1591}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46611,"byte_end":46717,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46718,"byte_end":46721,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46722,"byte_end":46812,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46813,"byte_end":46816,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46817,"byte_end":46852,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46853,"byte_end":46856,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46857,"byte_end":46870,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46871,"byte_end":46874,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46875,"byte_end":46912,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46913,"byte_end":46916,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46917,"byte_end":46936,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46937,"byte_end":46979,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46980,"byte_end":47030,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47031,"byte_end":47082,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47083,"byte_end":47101,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47102,"byte_end":47123,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47124,"byte_end":47166,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47167,"byte_end":47200,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47201,"byte_end":47217,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47218,"byte_end":47312,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47313,"byte_end":47323,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47324,"byte_end":47327,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47328,"byte_end":47375,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47376,"byte_end":47381,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47382,"byte_end":47389,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47390,"byte_end":47393,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47594,"byte_end":47597,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47598,"byte_end":47684,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47685,"byte_end":47695,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47696,"byte_end":47699,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47700,"byte_end":47707,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47708,"byte_end":47743,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47744,"byte_end":47786,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47787,"byte_end":47837,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47838,"byte_end":47889,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47890,"byte_end":47893,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47894,"byte_end":47912,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47913,"byte_end":47934,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47935,"byte_end":47977,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47978,"byte_end":48025,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48026,"byte_end":48042,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48043,"byte_end":48092,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48093,"byte_end":48103,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48104,"byte_end":48107,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48108,"byte_end":48141,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48142,"byte_end":48182,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48183,"byte_end":48215,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48216,"byte_end":48221,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48222,"byte_end":48229,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48230,"byte_end":48252,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248617,"byte_end":13248627,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248778,"byte_end":13248788,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13249115,"byte_end":13249125,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13259355,"byte_end":13259364,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13259596,"byte_end":13259606,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13259757,"byte_end":13259766,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260121,"byte_end":13260131,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260377,"byte_end":13260385,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260482,"byte_end":13260490,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260601,"byte_end":13260609,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260709,"byte_end":13260717,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260827,"byte_end":13260837,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13269124,"byte_end":13269134,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13271970,"byte_end":13271976,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275832,"byte_end":13275838,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13281153,"byte_end":13281159,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13281475,"byte_end":13281481,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282196,"byte_end":13282202,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13283242,"byte_end":13283253,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13284180,"byte_end":13284190,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285119,"byte_end":13285129,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13287226,"byte_end":13287236,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13287549,"byte_end":13287559,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13288285,"byte_end":13288295,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289274,"byte_end":13289285,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289641,"byte_end":13289652,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291761,"byte_end":13291772,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13292536,"byte_end":13292547,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13292788,"byte_end":13292799,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307814,"byte_end":13307834,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13311168,"byte_end":13311188,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13312074,"byte_end":13312094,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313435,"byte_end":13313455,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313548,"byte_end":13313555,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13323154,"byte_end":13323161,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13323287,"byte_end":13323312,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13323470,"byte_end":13323495,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13323630,"byte_end":13323655,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324724,"byte_end":13324734,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13327276,"byte_end":13327286,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13330662,"byte_end":13330672,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13330995,"byte_end":13331005,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331312,"byte_end":13331327,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331609,"byte_end":13331624,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331741,"byte_end":13331756,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334082,"byte_end":13334099,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336748,"byte_end":13336765,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340057,"byte_end":13340074,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340438,"byte_end":13340455,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340873,"byte_end":13340895,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13341224,"byte_end":13341246,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13341377,"byte_end":13341399,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/level.rs","byte_start":13352817,"byte_end":13352822,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/level.rs","byte_start":13357573,"byte_end":13357578,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/mod.rs","byte_start":13344048,"byte_end":13344053,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366039,"byte_end":13366049,"line_start":213,"line_end":213,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1399},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13384987,"byte_end":13384997,"line_start":800,"line_end":800,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13385025,"byte_end":13385035,"line_start":802,"line_end":802,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13385145,"byte_end":13385155,"line_start":808,"line_end":808,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13385537,"byte_end":13385542,"line_start":818,"line_end":818,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13387669,"byte_end":13387674,"line_start":900,"line_end":900,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13387804,"byte_end":13387807,"line_start":909,"line_end":909,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13387894,"byte_end":13387901,"line_start":915,"line_end":915,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14399,"byte_end":14408,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14768,"byte_end":14777,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/tree_node.rs","byte_start":17227,"byte_end":17235,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9209,"byte_end":9226,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9451,"byte_end":9468,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9659,"byte_end":9676,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9788,"byte_end":9805,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9895,"byte_end":9912,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13150,"byte_end":13175,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13347,"byte_end":13372,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30332,"byte_end":30342,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35203,"byte_end":35213,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35617,"byte_end":35627,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37633,"byte_end":37646,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40858,"byte_end":40871,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41085,"byte_end":41098,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41216,"byte_end":41229,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41441,"byte_end":41454,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42002,"byte_end":42019,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45393,"byte_end":45410,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45700,"byte_end":45717,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45935,"byte_end":45952,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46048,"byte_end":46065,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46090,"byte_end":46107,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46251,"byte_end":46268,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49005,"byte_end":49011,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49254,"byte_end":49260,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49533,"byte_end":49539,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49867,"byte_end":49873,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50227,"byte_end":50233,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50785,"byte_end":50791,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":425}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":13247029,"byte_end":13247045,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":868}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":872,"byte_end":876,"line_start":49,"line_end":49,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1245}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":13341799,"byte_end":13341810,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1328}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":307}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248617,"byte_end":13248627,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13248778,"byte_end":13248788,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1105},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":13249115,"byte_end":13249125,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1105},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13259355,"byte_end":13259364,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13259596,"byte_end":13259606,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13259757,"byte_end":13259766,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260121,"byte_end":13260131,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260377,"byte_end":13260385,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260482,"byte_end":13260490,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260601,"byte_end":13260609,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260709,"byte_end":13260717,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13260827,"byte_end":13260837,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1725},"to":{"krate":19,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":13269124,"byte_end":13269134,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1725},"to":{"krate":20,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13271970,"byte_end":13271976,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13275832,"byte_end":13275838,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13281153,"byte_end":13281159,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1684},"to":{"krate":19,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13281475,"byte_end":13281481,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1684},"to":{"krate":20,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13282196,"byte_end":13282202,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1684},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":13283242,"byte_end":13283253,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13284180,"byte_end":13284190,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13285119,"byte_end":13285129,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13287226,"byte_end":13287236,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1643},"to":{"krate":19,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13287549,"byte_end":13287559,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1643},"to":{"krate":20,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":13288285,"byte_end":13288295,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1643},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289274,"byte_end":13289285,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13289641,"byte_end":13289652,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13291761,"byte_end":13291772,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1602},"to":{"krate":20,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13292536,"byte_end":13292547,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1602},"to":{"krate":19,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":13292788,"byte_end":13292799,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1602},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13307814,"byte_end":13307834,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13311168,"byte_end":13311188,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13312074,"byte_end":13312094,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313435,"byte_end":13313455,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13313548,"byte_end":13313555,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13323154,"byte_end":13323161,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13323287,"byte_end":13323312,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13323470,"byte_end":13323495,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":13323630,"byte_end":13323655,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13324724,"byte_end":13324734,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13327276,"byte_end":13327286,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13330662,"byte_end":13330672,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13330995,"byte_end":13331005,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331312,"byte_end":13331327,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331609,"byte_end":13331624,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":13331741,"byte_end":13331756,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1205},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13334082,"byte_end":13334099,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13336748,"byte_end":13336765,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340057,"byte_end":13340074,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340438,"byte_end":13340455,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13340873,"byte_end":13340895,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13341224,"byte_end":13341246,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":13341377,"byte_end":13341399,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1237},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/level.rs","byte_start":13352817,"byte_end":13352822,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/level.rs","byte_start":13357573,"byte_end":13357578,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":13358688,"byte_end":13358695,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3002},"to":{"krate":0,"index":1290}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/mod.rs","byte_start":13344048,"byte_end":13344053,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13366039,"byte_end":13366049,"line_start":213,"line_end":213,"column_start":9,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13384987,"byte_end":13384997,"line_start":800,"line_end":800,"column_start":19,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":3065}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13385025,"byte_end":13385035,"line_start":802,"line_end":802,"column_start":21,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13385145,"byte_end":13385155,"line_start":808,"line_end":808,"column_start":34,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1482},"to":{"krate":19,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13385537,"byte_end":13385542,"line_start":818,"line_end":818,"column_start":26,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1519},"to":{"krate":0,"index":1290}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13387669,"byte_end":13387674,"line_start":900,"line_end":900,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1519},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13387804,"byte_end":13387807,"line_start":909,"line_end":909,"column_start":6,"column_end":9},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":13387894,"byte_end":13387901,"line_start":915,"line_end":915,"column_start":9,"column_end":16},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14399,"byte_end":14408,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14768,"byte_end":14777,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/tree_node.rs","byte_start":17227,"byte_end":17235,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9209,"byte_end":9226,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9451,"byte_end":9468,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9659,"byte_end":9676,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9788,"byte_end":9805,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9895,"byte_end":9912,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13150,"byte_end":13175,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13347,"byte_end":13372,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30332,"byte_end":30342,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35203,"byte_end":35213,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1577},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35617,"byte_end":35627,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1577},"to":{"krate":20,"index":17}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37633,"byte_end":37646,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40858,"byte_end":40871,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":215},"to":{"krate":19,"index":96}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41085,"byte_end":41098,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41216,"byte_end":41229,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41441,"byte_end":41454,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42002,"byte_end":42019,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45393,"byte_end":45410,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45700,"byte_end":45717,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45935,"byte_end":45952,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46048,"byte_end":46065,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3065}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46090,"byte_end":46107,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46251,"byte_end":46268,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49005,"byte_end":49011,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1585},"to":{"krate":2,"index":12969}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49254,"byte_end":49260,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1585},"to":{"krate":21,"index":227}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49533,"byte_end":49539,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1585},"to":{"krate":21,"index":185}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49867,"byte_end":49873,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1585},"to":{"krate":21,"index":266}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50227,"byte_end":50233,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1585},"to":{"krate":21,"index":306}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50785,"byte_end":50791,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1585},"to":{"krate":19,"index":96}}]}