{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11","program":"/Users/theogaillard/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","enum_ordinalize","--edition=2021","/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=ee9f3e4854f935b3","-C","extra-filename=-ee9f3e4854f935b3","--out-dir","/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps","-L","dependency=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps","--extern","num_bigint=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libnum_bigint-99d7b46705414586.rlib","--extern","num_traits=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libnum_traits-aed9bd3cb5c73bd2.rlib","--extern","proc_macro2=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libproc_macro2-e9ce011e570ba760.rlib","--extern","quote=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libquote-293b2f4212a8b8ce.rlib","--extern","syn=/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libsyn-019e243e2d52c91d.rlib","--extern","proc_macro","--cap-lints","allow","--error-format=json","--sysroot","/Users/theogaillard/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/theogaillard/Documents/CODE/crowd-funding-solana-program/program/target/rls/debug/deps/libenum_ordinalize-ee9f3e4854f935b3.dylib"},"prelude":{"crate_id":{"name":"enum_ordinalize","disambiguator":[18043993780250171482,0]},"crate_root":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src","external_crates":[{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","num":5,"id":{"name":"num_bigint","disambiguator":[5885836909209685489,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":13,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":14,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":15,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":16,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":17,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","num":19,"id":{"name":"num_integer","disambiguator":[3799033828397282640,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","num":20,"id":{"name":"num_traits","disambiguator":[10927471229555661048,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","num":21,"id":{"name":"quote","disambiguator":[16212384514912043333,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","num":22,"id":{"name":"proc_macro","disambiguator":[6936500898471665804,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","num":23,"id":{"name":"proc_macro2","disambiguator":[10755526464656357870,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","num":24,"id":{"name":"unicode_ident","disambiguator":[751228770070107166,0]}},{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","num":25,"id":{"name":"syn","disambiguator":[3473026381606320199,0]}}],"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","byte_start":0,"byte_end":18743,"line_start":1,"line_end":505,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","byte_start":0,"byte_end":18743,"line_start":1,"line_end":505,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":54},{"krate":0,"index":60},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":186}],"decl_id":null,"docs":"# Enum Ordinalize","sig":null,"attributes":[{"value":"*\n# Enum Ordinalize\n\nThis crates provides a procedural macro to let enums not only get its variants' ordinal but also be constructed from an ordinal.\n\n## Ordinalize\n\nUse `#[derive(Ordinalize)]` to make an enum (which must only has unit variants) have `from_ordinal_unsafe`, `from_ordinal`, `variants`, and `variant_count` associated functions and a `ordinal` method.\n\n```rust\n#[macro_use] extern crate enum_ordinalize;\n\n#[derive(Debug, PartialEq, Eq, Ordinalize)]\nenum MyEnum {\n    Zero,\n    One,\n    Two,\n}\n\nassert_eq!(0i8, MyEnum::Zero.ordinal());\nassert_eq!(1i8, MyEnum::One.ordinal());\nassert_eq!(2i8, MyEnum::Two.ordinal());\n\nassert_eq!(Some(MyEnum::Zero), MyEnum::from_ordinal(0i8));\nassert_eq!(Some(MyEnum::One), MyEnum::from_ordinal(1i8));\nassert_eq!(Some(MyEnum::Two), MyEnum::from_ordinal(2i8));\n\nassert_eq!(MyEnum::Zero, unsafe { MyEnum::from_ordinal_unsafe(0i8) });\nassert_eq!(MyEnum::One, unsafe { MyEnum::from_ordinal_unsafe(1i8) });\nassert_eq!(MyEnum::Two, unsafe { MyEnum::from_ordinal_unsafe(2i8) });\n```\n\n### Get Variants\n\n```rust\n#[macro_use] extern crate enum_ordinalize;\n\n#[derive(Debug, PartialEq, Eq, Ordinalize)]\nenum MyEnum {\n    Zero,\n    One,\n    Two,\n}\n\nassert_eq!([MyEnum::Zero, MyEnum::One, MyEnum::Two], MyEnum::variants());\nassert_eq!(3, MyEnum::variant_count());\n```\n\n`variants` and `variant_count` are constant functions.\n\n## The (Ordinal) Size of an Enum\n\nThe ordinal value is an integer whose size is determined by the enum itself. The larger (or the smaller if it's negative) the variants' values are, the bigger the enum size is.\n\nFor example,\n\n```rust\n#[macro_use] extern crate enum_ordinalize;\n\n#[derive(Debug, PartialEq, Eq, Ordinalize)]\nenum MyEnum {\n    Zero,\n    One,\n    Two,\n    Thousand = 1000,\n}\n\nassert_eq!(0i16, MyEnum::Zero.ordinal());\nassert_eq!(1i16, MyEnum::One.ordinal());\nassert_eq!(2i16, MyEnum::Two.ordinal());\n\nassert_eq!(Some(MyEnum::Zero), MyEnum::from_ordinal(0i16));\nassert_eq!(Some(MyEnum::One), MyEnum::from_ordinal(1i16));\nassert_eq!(Some(MyEnum::Two), MyEnum::from_ordinal(2i16));\n\nassert_eq!(MyEnum::Zero, unsafe { MyEnum::from_ordinal_unsafe(0i16) });\nassert_eq!(MyEnum::One, unsafe { MyEnum::from_ordinal_unsafe(1i16) });\nassert_eq!(MyEnum::Two, unsafe { MyEnum::from_ordinal_unsafe(2i16) });\n```\n\nIn order to store `1000`, the size of `MyEnum` grows. Thus, the ordinal is in `i16` instead of `i8`.\n\nYou can use the `#[repr(type)]` attribute to control the size explicitly. For instance,\n\n```rust\n#[macro_use] extern crate enum_ordinalize;\n\n#[derive(Debug, PartialEq, Eq, Ordinalize)]\n#[repr(usize)]\nenum MyEnum {\n    Zero,\n    One,\n    Two,\n    Thousand = 1000,\n}\n\nassert_eq!(0usize, MyEnum::Zero.ordinal());\nassert_eq!(1usize, MyEnum::One.ordinal());\nassert_eq!(2usize, MyEnum::Two.ordinal());\n\nassert_eq!(Some(MyEnum::Zero), MyEnum::from_ordinal(0usize));\nassert_eq!(Some(MyEnum::One), MyEnum::from_ordinal(1usize));\nassert_eq!(Some(MyEnum::Two), MyEnum::from_ordinal(2usize));\n\nassert_eq!(MyEnum::Zero, unsafe { MyEnum::from_ordinal_unsafe(0usize) });\nassert_eq!(MyEnum::One, unsafe { MyEnum::from_ordinal_unsafe(1usize) });\nassert_eq!(MyEnum::Two, unsafe { MyEnum::from_ordinal_unsafe(2usize) });\n```\n\n## Useful Increment\n\nThe integers represented by variants are extended in successive increments and can be set explicitly from anywhere.\n\n```rust\n#[macro_use] extern crate enum_ordinalize;\n\n#[derive(Debug, PartialEq, Eq, Ordinalize)]\nenum MyEnum {\n    Two   = 2,\n    Three,\n    Four,\n    Eight = 8,\n    Nine,\n    NegativeTen = -10,\n    NegativeNine,\n}\n\nassert_eq!(4i8, MyEnum::Four.ordinal());\nassert_eq!(9i8, MyEnum::Nine.ordinal());\nassert_eq!(-9i8, MyEnum::NegativeNine.ordinal());\n\nassert_eq!(Some(MyEnum::Four), MyEnum::from_ordinal(4i8));\nassert_eq!(Some(MyEnum::Nine), MyEnum::from_ordinal(9i8));\nassert_eq!(Some(MyEnum::NegativeNine), MyEnum::from_ordinal(-9i8));\n\nassert_eq!(MyEnum::Four, unsafe { MyEnum::from_ordinal_unsafe(4i8) });\nassert_eq!(MyEnum::Nine, unsafe { MyEnum::from_ordinal_unsafe(9i8) });\nassert_eq!(MyEnum::NegativeNine, unsafe { MyEnum::from_ordinal_unsafe(-9i8) });\n```\n*/","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","byte_start":0,"byte_end":4080,"line_start":1,"line_end":140,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","byte_start":4082,"byte_end":4092,"line_start":142,"line_end":142,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","byte_start":18634,"byte_end":18651,"line_start":503,"line_end":503,"column_start":8,"column_end":25},"name":"ordinalize_derive","qualname":"::ordinalize_derive","value":"pub fn ordinalize_derive(TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"proc_macro_derive(Ordinalize)","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/lib.rs","byte_start":18594,"byte_end":18626,"line_start":502,"line_end":502,"column_start":1,"column_end":33}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","byte_start":19029,"byte_end":19042,"line_start":13,"line_end":13,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","byte_start":19189,"byte_end":19202,"line_start":20,"line_end":20,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","byte_start":19372,"byte_end":19385,"line_start":27,"line_end":27,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/variant_type.rs","byte_start":21321,"byte_end":21332,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/variant_type.rs","byte_start":22629,"byte_end":22640,"line_start":64,"line_end":64,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/variant_type.rs","byte_start":22746,"byte_end":22757,"line_start":71,"line_end":71,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","byte_start":19029,"byte_end":19042,"line_start":13,"line_end":13,"column_start":27,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","byte_start":19189,"byte_end":19202,"line_start":20,"line_end":20,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/big_int_wrapper.rs","byte_start":19372,"byte_end":19385,"line_start":27,"line_end":27,"column_start":23,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":21,"index":117}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/variant_type.rs","byte_start":21321,"byte_end":21332,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/variant_type.rs","byte_start":22629,"byte_end":22640,"line_start":64,"line_end":64,"column_start":18,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/theogaillard/.cargo/registry/src/github.com-1ecc6299db9ec823/enum-ordinalize-3.1.11/src/variant_type.rs","byte_start":22746,"byte_end":22757,"line_start":71,"line_end":71,"column_start":19,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":144},"to":{"krate":21,"index":117}}]}